uniform vec4 vSunDir;
uniform vec4 vSkyLightDir;
uniform float fFogDensity;
uniform mat4 matWorldViewProj;
uniform mat4 matWorldView;
uniform mat4 matWorld;
uniform mat4 matSunViewProj;
uniform vec4 vCameraPos;
attribute vec3 inPosition;
attribute vec3 inNormal;
attribute vec4 inColor0;
attribute vec4 inColor1;
attribute vec2 inTexCoord;
attribute vec3 inTangent;
attribute vec3 inBinormal;
varying vec4 VertexColor;
varying vec2 Tex0;
varying vec3 SunLightDir;
varying vec3 SkyLightDir;
varying vec4 PointLightDir;
varying vec4 ShadowTexCoord;
varying float Fog;
varying vec3 ViewDir;
varying vec3 WorldNormal;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = inPosition;
  vec4 tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3.w = 0.0;
  tmpvar_3.xyz = inNormal;
  vec3 tmpvar_4;
  tmpvar_4 = normalize((matWorld * tmpvar_3).xyz);
  vec4 tmpvar_5;
  tmpvar_5.w = 0.0;
  tmpvar_5.xyz = inBinormal;
  vec3 tmpvar_6;
  tmpvar_6 = normalize((matWorld * tmpvar_5).xyz);
  vec4 tmpvar_7;
  tmpvar_7.w = 0.0;
  tmpvar_7.xyz = inTangent;
  vec3 tmpvar_8;
  tmpvar_8 = normalize((matWorld * tmpvar_7).xyz);
  vec3 tmpvar_9;
  tmpvar_9 = (matWorldView * tmpvar_1).xyz;
  vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.y = tmpvar_6.x;
  tmpvar_10.z = tmpvar_4.x;
  vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_8.y;
  tmpvar_11.y = tmpvar_6.y;
  tmpvar_11.z = tmpvar_4.y;
  vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_8.z;
  tmpvar_12.y = tmpvar_6.z;
  tmpvar_12.z = tmpvar_4.z;
  mat3 tmpvar_13;
  tmpvar_13[0] = tmpvar_10;
  tmpvar_13[1] = tmpvar_11;
  tmpvar_13[2] = tmpvar_12;
  vec4 tmpvar_14;
  tmpvar_14 = (matWorld * tmpvar_1);
  tmpvar_2.xyz = ((2.0 * inColor1.xyz) - 1.0);
  tmpvar_2.w = inColor1.w;
  gl_Position = (matWorldViewProj * tmpvar_1);
  VertexColor = inColor0.zyxw;
  Tex0 = inTexCoord;
  SunLightDir = (tmpvar_13 * -(vSunDir.xyz));
  SkyLightDir = (tmpvar_13 * -(vSkyLightDir.xyz));
  PointLightDir = tmpvar_2;
  ShadowTexCoord = (matSunViewProj * tmpvar_14);
  Fog = (1.0/(exp2((
    sqrt(dot (tmpvar_9, tmpvar_9))
   * fFogDensity))));
  ViewDir = normalize((vCameraPos.xyz - tmpvar_14.xyz));
  WorldNormal = tmpvar_4;
}

