# -*- coding: utf-8 -*-
from header_skills import *
from header_terrain_types import *
from header_common import *
from header_presentations import *
from header_mission_templates import *
from ID_meshes import *
from header_operations import *
from header_triggers import *
from module_constants import *
import string

####################################################################################################################
#  Each presentation record contains the following fields:
#  1) Presentation id: used for referencing presentations in other files. The prefix prsnt_ is automatically added before each presentation id.
#  2) Presentation flags. See header_presentations.py for a list of available flags
#  3) Presentation background mesh: See module_meshes.py for a list of available background meshes
#  4) Triggers: Simple triggers that are associated with the presentation
####################################################################################################################

presentations = [
  ("game_credits",prsntf_read_only,mesh_load_window2,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 1000000),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (this_or_next|key_clicked, key_right_mouse_button),
          (this_or_next|key_clicked, key_xbox_ltrigger),
		  (key_clicked, key_xbox_rtrigger),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          (lt, "$g_presentation_credits_obj_1", 0),
          (str_store_string, s1, "str_credits_1"),
          (create_text_overlay, "$g_presentation_credits_obj_1", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_1", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_1", 0),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 2000),
          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 3500),
          (lt, "$g_presentation_credits_obj_2", 0),
          (str_store_string, s1, "str_credits_2"),
          (create_text_overlay, "$g_presentation_credits_obj_2", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 7000),
          (lt, "$g_presentation_credits_obj_3", 0),
          (str_store_string, s1, "str_credits_3"),
          (create_text_overlay, "$g_presentation_credits_obj_3", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_3", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 9000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          (gt, ":cur_time", 10500),
          (lt, "$g_presentation_credits_obj_4", 0),
          (str_store_string, s1, "str_credits_4"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 12500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0),
        (else_try),
          (gt, ":cur_time", 14000),
          (lt, "$g_presentation_credits_obj_5", 0),
          (str_store_string, s1, "str_credits_5"),
          (create_text_overlay, "$g_presentation_credits_obj_5", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_5", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_5", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 16000),
          (eq, "$g_presentation_credits_obj_5_alpha", 0),
          (assign, "$g_presentation_credits_obj_5_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0),
        (else_try),
          (gt, ":cur_time", 17500),
          (lt, "$g_presentation_credits_obj_6", 0),
          (str_store_string, s1, "str_credits_6"),
          (create_text_overlay, "$g_presentation_credits_obj_6", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_6", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_6", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 19500),
          (eq, "$g_presentation_credits_obj_6_alpha", 0),
          (assign, "$g_presentation_credits_obj_6_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0),
        (else_try),
          (gt, ":cur_time", 21000),
          (lt, "$g_presentation_credits_obj_7", 0),
          (str_store_string, s1, "str_credits_7"),
          (create_text_overlay, "$g_presentation_credits_obj_7", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_7", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_7", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 23000),
          (eq, "$g_presentation_credits_obj_7_alpha", 0),
          (assign, "$g_presentation_credits_obj_7_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0),
        (else_try),
          (gt, ":cur_time", 24500),
          (lt, "$g_presentation_credits_obj_8", 0),
          (str_store_string, s1, "str_credits_8"),
          (create_text_overlay, "$g_presentation_credits_obj_8", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_8", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 26500),
          (eq, "$g_presentation_credits_obj_8_alpha", 0),
          (assign, "$g_presentation_credits_obj_8_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0),
        (else_try),
          (gt, ":cur_time", 28000),
          (lt, "$g_presentation_credits_obj_9", 0),
          (str_store_string, s1, "str_credits_10"),
          (create_text_overlay, "$g_presentation_credits_obj_9", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_9", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 485),
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0xFF),

          (str_store_string, s1, "str_credits_11"),
          (create_text_overlay, "$g_presentation_credits_obj_10", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_10", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_10", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 470),
          (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0xFF),

          (str_store_string, s1, "str_credits_12"),
          (create_text_overlay, "$g_presentation_credits_obj_11", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_11", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_11", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_11", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 105),
          (overlay_set_position, "$g_presentation_credits_obj_11", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 34000),
          (eq, "$g_presentation_credits_obj_9_alpha", 0),
          (assign, "$g_presentation_credits_obj_9_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0),
        (else_try),
          (gt, ":cur_time", 35500),
          (lt, "$g_presentation_credits_obj_12", 0),
          (str_store_string, s1, "str_credits_9"),
          (create_text_overlay, "$g_presentation_credits_obj_12", s1, tf_center_justify|tf_double_space),
          (overlay_set_color, "$g_presentation_credits_obj_12", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_12", 0xFF),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, -4800),
          (overlay_set_position, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 760),
          (overlay_animate_to_position, "$g_presentation_credits_obj_12", 70000, pos1),
        (else_try),
          (gt, ":cur_time", 105500),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),

  ("game_profile_banner_selection", 0, mesh_load_window2, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (str_store_string, s1, "str_profile_banner_selection_text"),
      (create_text_overlay, reg1, s1, tf_center_justify),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, reg1, pos1),
      (overlay_set_text, reg1, s1),
      (create_button_overlay, "$g_presentation_obj_profile_banner_selection_1", "@Next Page", tf_center_justify),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_1", pos1),

      (create_button_overlay, "$g_presentation_obj_profile_banner_selection_2", "str_use_default_banner", tf_center_justify),
      (position_set_x, pos1, 300),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_2", pos1),

      (assign, ":x_pos", 150),
      (assign, ":y_pos", 575),
      (store_mul, ":starting_banner", 16, "$g_presentation_page_no"),
      (store_add, ":ending_banner", ":starting_banner", 16),
      (store_add, "$g_presentation_banner_start", "$g_presentation_obj_profile_banner_selection_2", 1),
      (assign, ":num_valid_banners", 0),
      (try_for_range, ":cur_banner_mesh", banner_meshes_begin, banner_meshes_end_minus_one),
        (assign, ":already_used", 0),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (faction_slot_eq, ":cur_faction", slot_faction_banner, ":cur_banner_mesh"),
          (assign, ":already_used", 1),
        (try_end),
        (eq, ":already_used", 0),
        (val_add, ":num_valid_banners", 1),
        (gt, ":num_valid_banners", ":starting_banner"),
        (le, ":num_valid_banners", ":ending_banner"),
        (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
        (position_set_x, pos1, ":x_pos"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 100),
        (overlay_set_size, reg1, pos1),
        (val_add, ":x_pos", 100),
        (ge, ":x_pos", 900),
        (assign, ":x_pos", 150),
        (val_sub, ":y_pos", 250),
      (try_end),
      (presentation_set_duration, 999999),
      ]),

    (ti_on_presentation_event_state_change, [
      (store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_profile_banner_selection_1"),
        (val_add, "$g_presentation_page_no", 1),
        (val_mod, "$g_presentation_page_no", 8),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_profile_banner_selection"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_profile_banner_selection_2"),
        (profile_set_banner_id, -1),
        (presentation_set_duration, 0),
      (else_try),
        (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
        (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
        (val_add, ":selected_banner", ":page_adder"),
        (assign, ":num_valid_banners", 0),
        (assign, ":end_cond", banner_meshes_end_minus_one),
        (try_for_range, ":cur_banner_mesh", banner_meshes_begin, ":end_cond"),
          (assign, ":already_used", 0),
          (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
            (faction_slot_eq, ":cur_faction", slot_faction_banner, ":cur_banner_mesh"),
            (assign, ":already_used", 1),
          (try_end),
          (eq, ":already_used", 0),
          (try_begin),
            (eq, ":selected_banner", ":num_valid_banners"),
            (store_sub, ":selected_banner_index", ":cur_banner_mesh", banner_meshes_begin),
            (profile_set_banner_id, ":selected_banner_index"),
            (assign, ":end_cond", 0), #break
          (try_end),
          (val_add, ":num_valid_banners", 1),
        (try_end),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("game_custom_battle_designer", prsntf_manual_end_only, mesh_cb_ui_main, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_text_overlay, reg0, "str_player", tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_enemy",  tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_character", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 670),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_18"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_18", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 635),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_18", pos1),
      (try_for_range, ":cur_troop", quick_battle_troops_begin, quick_battle_troops_end),
        (str_store_troop_name, s0, ":cur_troop"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_18", s0),
      (try_end),
      (store_sub, ":cur_troop", "$g_quick_battle_troop", quick_battle_troops_begin),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_18", ":cur_troop"),

      (store_mul, ":cur_troop", "$g_quick_battle_troop", 2), #with weapons
      (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, 370),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_1"),
        (assign, ":cur_troop", "trp_swadian_knight"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_2"),
        (assign, ":cur_troop", "trp_vaegir_knight"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_3"),
        (assign, ":cur_troop", "trp_khergit_veteran_horse_archer"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_4"),
        (assign, ":cur_troop", "trp_nord_champion"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_5"),
        (assign, ":cur_troop", "trp_rhodok_sergeant"),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_6"),
        (assign, ":cur_troop", "trp_sarranid_mamluke"),
      (else_try),
        (assign, ":cur_troop", "trp_taiga_bandit"),
      (try_end),
      (val_mul, ":cur_troop", 2), #with weapons
      (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
      (position_set_x, pos1, 670),
      (position_set_y, pos1, 370),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_biography", tf_center_justify),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (store_sub, ":cur_troop_text", "$g_quick_battle_troop", quick_battle_troops_begin),
      (val_add, ":cur_troop_text", quick_battle_troop_texts_begin),
      (create_text_overlay, reg0, ":cur_troop_text", tf_scrollable),
      (position_set_x, pos1, 850),
      (position_set_y, pos1, 850),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 320),
      (position_set_y, pos1, 560),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 360),
      (position_set_y, pos1, 130),
      (overlay_set_area_size, reg0, pos1),

      (create_text_overlay, reg0, "str_map_basic", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 450),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_1"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_1", pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 415),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_1", pos1),
      (try_begin),
        (eq, "$g_quick_battle_game_type", 0), #battle
        (try_for_range, ":cur_scene", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
          (store_sub, ":cur_scene_name", ":cur_scene", quick_battle_scenes_begin),
          (val_add, ":cur_scene_name", quick_battle_scene_names_begin),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_1", ":cur_scene_name"),
        (try_end),
        (try_begin),
          (is_between, "$g_quick_battle_map", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
          (store_sub, ":cur_map", "$g_quick_battle_map", quick_battle_battle_scenes_begin),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", ":cur_map"),
        (else_try),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", 0),
          (assign, "$g_quick_battle_map", quick_battle_battle_scenes_begin),
        (try_end),
      (else_try),
        (try_for_range, ":cur_scene", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
          (store_sub, ":cur_scene_name", ":cur_scene", quick_battle_scenes_begin),
          (val_add, ":cur_scene_name", quick_battle_scene_names_begin),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_1", ":cur_scene_name"),
        (try_end),
        (try_begin),
          (is_between, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
          (store_sub, ":cur_map", "$g_quick_battle_map", quick_battle_siege_scenes_begin),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", ":cur_map"),
        (else_try),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", 0),
          (assign, "$g_quick_battle_map", quick_battle_siege_scenes_begin),
        (try_end),
      (try_end),

      (store_sub, ":cur_mesh", "$g_quick_battle_map", quick_battle_scenes_begin),
      (val_add, ":cur_mesh", quick_battle_scene_images_begin),
      (create_mesh_overlay, reg0, ":cur_mesh"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 380),
      (position_set_y, pos1, 220),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_game_type_basic", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 180),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_23"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_23", pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 150),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_23", pos1),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_battle"),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_siege_offense"),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_siege_defense"),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_23", "$g_quick_battle_game_type"),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_24", "str_randomize"),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_24", pos1),

      (assign, ":cur_y", 330),
      (assign, ":cur_y", 350),
      (assign, ":cur_y_adder", 40),

      (create_text_overlay, reg0, "str_faction", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_faction", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      
      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_4"),
##      (position_set_x, pos1, 800),
##      (position_set_y, pos1, 800),
##      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_4", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_4", pos1),
      (try_begin),
        (is_trial_version),
        (str_store_faction_name, s0, npc_kingdoms_begin),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
        (store_add, ":cur_faction", npc_kingdoms_begin, 1),
        (str_store_faction_name, s0, ":cur_faction"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
      (else_try),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (str_store_faction_name, s0, ":cur_faction"),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
        (try_end),
        (str_store_faction_name, s0, "fac_outlaws"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
      (try_end),
      (try_begin),
        (eq, "$g_quick_battle_team_1_faction", "fac_outlaws"),
        (store_sub, ":overlay_value", npc_kingdoms_end, npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_4", ":overlay_value"),
      (else_try),
        (store_sub, ":team_1_faction", "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_4", ":team_1_faction"),
      (try_end),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_5"),
##      (position_set_x, pos1, 800),
##      (position_set_y, pos1, 800),
##      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_5", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_5", pos1),
      (try_begin),
        (is_trial_version),
        (str_store_faction_name, s0, npc_kingdoms_begin),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
        (store_add, ":cur_faction", npc_kingdoms_begin, 1),
        (str_store_faction_name, s0, ":cur_faction"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
      (else_try),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (str_store_faction_name, s0, ":cur_faction"),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
        (try_end),
        (str_store_faction_name, s0, "fac_outlaws"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
      (try_end),
      (try_begin),
        (eq, "$g_quick_battle_team_2_faction", "fac_outlaws"),
        (store_sub, ":overlay_value", npc_kingdoms_end, npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_5", ":overlay_value"),
      (else_try),
        (store_sub, ":team_2_faction", "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_5", ":team_2_faction"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_army_composition", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_army_composition", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (try_begin),
        (eq, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 34),
        (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 34),
        (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
      (try_end),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
      (position_set_x, pos1, 5),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
      (position_set_x, pos1, 650),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_6", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_6", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_6", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_12", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_9", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_9", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_9", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_15", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_archer"),
      (position_set_x, pos1, 15),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_archer"),
      (position_set_x, pos1, 660),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_7", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_7", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_7", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_13", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_10", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_10", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_10", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_16", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
      (position_set_x, pos1, 10),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
      (position_set_x, pos1, 655),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_8", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_8", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_8", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_14", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_11", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_11", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_11", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_17", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_army_size", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_army_size", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (try_begin),
        (is_trial_version),
        (val_min, "$g_quick_battle_army_1_size", 25),
        (val_min, "$g_quick_battle_army_2_size", 25),
      (try_end),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_2", 0, 100),
      (overlay_set_boundaries, "$g_presentation_obj_custom_battle_designer_2", 1000, 75000),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_2", "$g_quick_battle_army_1_size"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_2", pos1),
      (position_set_x, pos1, 135),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_2", pos1),

      (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_1_size"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_21", "str_reg0_men", 0),
      (position_set_x, pos1, 255),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_21", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_3", 200),
      (overlay_set_boundaries, "$g_presentation_obj_custom_battle_designer_3", 1000, 75000),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_3", "$g_quick_battle_army_2_size"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_3", pos1),
      (position_set_x, pos1, 780),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_3", pos1),

      (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_2_size"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_22", "str_reg0_men", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_22", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "str_start", 0),
      (position_set_x, pos1, 415),
      (position_set_y, pos1, 10),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_20", "str_back", 0),
      (position_set_x, pos1, 585),
      (position_set_y, pos1, 10),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_20", pos1),

      (presentation_set_duration, 999999),
      ]),
    
    (ti_on_presentation_event_state_change,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":value"),
       (try_begin),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_1"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0),
           (store_add, "$g_quick_battle_map", ":value", quick_battle_battle_scenes_begin),
         (else_try),
           (store_add, "$g_quick_battle_map", ":value", quick_battle_siege_scenes_begin),
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_23"),
         (assign, "$g_quick_battle_game_type", ":value"),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_24"),
         (store_random_in_range, "$g_quick_battle_game_type", 0, 3),
         (store_random_in_range, "$g_quick_battle_troop", quick_battle_troops_begin, quick_battle_troops_end),
         (try_begin),
           (is_trial_version),
           (store_random_in_range, "$g_quick_battle_team_1_faction", 0, 2),
           (try_begin),
             (eq, "$g_quick_battle_team_1_faction", 0),
             (assign, "$g_quick_battle_team_2_faction", 1),
           (else_try),
             (assign, "$g_quick_battle_team_2_faction", 0),
           (try_end),
           (val_add, "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
           (val_add, "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
           (store_random_in_range, "$g_quick_battle_army_1_size", 10, 16),
           (store_random_in_range, ":random_army_size", 0, 6),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
           (store_random_in_range, ":random_army_size", 0, 6),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
         (else_try),
           (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
           (val_add, ":num_factions", 1),
           (store_random_in_range, "$g_quick_battle_team_1_faction", 0, ":num_factions"),
           (try_begin),
             (eq, "$g_quick_battle_team_1_faction", 0),
             (assign, "$g_quick_battle_team_1_faction", "fac_outlaws"),
           (else_try),
             (val_add, "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
             (val_sub, "$g_quick_battle_team_1_faction", 1),
           (try_end),
           (assign, ":end_cond", 1000),
           (try_for_range, ":unused", 0, ":end_cond"),
             (store_random_in_range, "$g_quick_battle_team_2_faction", 0, ":num_factions"),
             (try_begin),
               (eq, "$g_quick_battle_team_2_faction", 0),
               (assign, "$g_quick_battle_team_2_faction", "fac_outlaws"),
             (else_try),
               (val_add, "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
               (val_sub, "$g_quick_battle_team_2_faction", 1),
             (try_end),
             (neq, "$g_quick_battle_team_1_faction", "$g_quick_battle_team_2_faction"),
             (assign, ":end_cond", 0),
           (try_end),
           (store_random_in_range, "$g_quick_battle_army_1_size", 10, 21),
           (store_random_in_range, ":random_army_size", 0, 11),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
           (store_random_in_range, ":random_army_size", 0, 11),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
         (try_end),
         (assign, "$g_quick_battle_army_2_size", "$g_quick_battle_army_1_size"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0), #battle
           (store_random_in_range, "$g_quick_battle_map", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
           (store_random_in_range, ":random_type", 0, 3),
           (store_random_in_range, ":random_type_2", 0, 2),
           (store_random_in_range, ":random_composition", 0, 100),
           (store_sub, ":left_max", 100, ":random_composition"),
           (store_random_in_range, ":random_composition_2", 0, ":left_max"),
           (store_sub, ":random_composition_3", ":left_max", ":random_composition_2"),
           (try_begin),
             (eq, ":random_type", 0),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (eq, ":random_type", 1),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_3"),
             (try_end),
           (try_end),
           (store_random_in_range, ":random_type", 0, 3),
           (store_random_in_range, ":random_type_2", 0, 2),
           (store_random_in_range, ":random_composition", 0, 100),
           (store_sub, ":left_max", 100, ":random_composition"),
           (store_random_in_range, ":random_composition_2", 0, ":left_max"),
           (store_sub, ":random_composition_3", ":left_max", ":random_composition_2"),
           (try_begin),
             (eq, ":random_type", 0),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (eq, ":random_type", 1),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_3"),
             (try_end),
           (try_end),
         (else_try),
           (eq, "$g_quick_battle_game_type", 1), #siege offense
           (store_random_in_range, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
           #defender is enemy
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_10_last_value", 30, 100), #min 30% archer
           (store_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", 100, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0), #no cavalry
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_6_last_value", 20, 100), #min 20% infantry
           (store_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", 100, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0), #no cavalry
         (else_try),
           #siege defense
           (store_random_in_range, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
           #defender is player
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_7_last_value", 30, 100), #min 30% archer
           (store_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", 100, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0), #no cavalry
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_9_last_value", 20, 100), #min 20% infantry
           (store_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", 100, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0), #no cavalry
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_2"),
         (assign, "$g_quick_battle_army_1_size", ":value"),
         (try_begin),
           (is_trial_version),
           (gt, "$g_quick_battle_army_1_size", 25),
           (assign, "$g_quick_battle_army_1_size", 25),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_2", 25),
         (try_end),
         (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_1_size"),
         (overlay_set_text, "$g_presentation_obj_custom_battle_designer_21", "str_reg0_men"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_3"),
         (assign, "$g_quick_battle_army_2_size", ":value"),
         (try_begin),
           (is_trial_version),
           (gt, "$g_quick_battle_army_2_size", 25),
           (assign, "$g_quick_battle_army_2_size", 25),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_3", 25),
         (try_end),
         (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_2_size"),
         (overlay_set_text, "$g_presentation_obj_custom_battle_designer_22", "str_reg0_men"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_4"),
         (try_begin),
           (store_sub, ":outlaw_index", npc_kingdoms_end, npc_kingdoms_begin),
           (eq, ":value", ":outlaw_index"),
           (assign, "$g_quick_battle_team_1_faction", "fac_outlaws"),
         (else_try),
           (store_add, "$g_quick_battle_team_1_faction", ":value", npc_kingdoms_begin),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_5"),
         (try_begin),
           (store_sub, ":outlaw_index", npc_kingdoms_end, npc_kingdoms_begin),
           (eq, ":value", ":outlaw_index"),
           (assign, "$g_quick_battle_team_2_faction", "fac_outlaws"),
         (else_try),
           (store_add, "$g_quick_battle_team_2_faction", ":value", npc_kingdoms_begin),
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_18"),
         (store_add, "$g_quick_battle_troop", ":value", quick_battle_troops_begin),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_7"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_8"),
           (try_begin),
             (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
             (neq, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_9"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_10"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_11"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
         (assign, "$g_is_quick_battle", 1),
         (assign, ":cur_scene", "$g_quick_battle_map"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0), #battle
           (assign, ":cur_mission_template", "mt_quick_battle_battle"),
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 0, 1),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 0, 0),
         (else_try),
           (eq, "$g_quick_battle_game_type", 1), #siege offense
           (assign, ":cur_mission_template", "mt_quick_battle_siege"),
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 0, 1),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 1, 0),
         (else_try),
           #siege defense
           (assign, ":cur_mission_template", "mt_quick_battle_siege"),
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 1, 1),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 0, 0),
         (try_end),
         (set_jump_mission,":cur_mission_template"),
         (jump_to_menu, "mnu_custom_battle_end"),
         (jump_to_scene, ":cur_scene"),
         (change_screen_mission),
         (presentation_set_duration, 0),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_20"),
         (presentation_set_duration, 0),
       (try_end),
      ]),
    (ti_on_presentation_mouse_enter_leave,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":enter_leave"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_7"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_8"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_9"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_10"),
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_11"),
       (try_begin),
         (eq, ":enter_leave", 1),
         (try_begin),
           (eq, ":object", "$g_presentation_obj_custom_battle_last_mouse_over_object"),
           (assign, "$g_presentation_obj_custom_battle_last_mouse_over_object", -1),
         (try_end),
       (else_try),
         (assign, "$g_presentation_obj_custom_battle_last_mouse_over_object", ":object"),
       (try_end),
       ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (presentation_set_duration, 0),
      (else_try),
        (key_clicked, key_right_mouse_button),
        (neq, "$g_presentation_obj_custom_battle_last_mouse_over_object", -1),
        (try_begin),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_6"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_7"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_8"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_9"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_10"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_11"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (try_end),
        (try_end),
      (try_end),
      ]),
    ]),

  ("game_multiplayer_admin_panel", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
#INVASION MODE START
#This code is necessary for presentation objects that are present in some modes but not others
	  (assign, "$g_presentation_obj_admin_panel_1", -1),
	  (assign, "$g_presentation_obj_admin_panel_2", -1),
	  (assign, "$g_presentation_obj_admin_panel_3", -1),
	  (assign, "$g_presentation_obj_admin_panel_4", -1),
	  (assign, "$g_presentation_obj_admin_panel_5", -1),
	  (assign, "$g_presentation_obj_admin_panel_6", -1),
	  (assign, "$g_presentation_obj_admin_panel_7", -1),
	  (assign, "$g_presentation_obj_admin_panel_8", -1),
	  (assign, "$g_presentation_obj_admin_panel_9", -1),
	  (assign, "$g_presentation_obj_admin_panel_10", -1),
	  (assign, "$g_presentation_obj_admin_panel_11", -1),
	  (assign, "$g_presentation_obj_admin_panel_12", -1),
	  (assign, "$g_presentation_obj_admin_panel_13", -1),
	  (assign, "$g_presentation_obj_admin_panel_14", -1),
	  (assign, "$g_presentation_obj_admin_panel_15", -1),
	  (assign, "$g_presentation_obj_admin_panel_16", -1),
	  (assign, "$g_presentation_obj_admin_panel_17", -1),
	  (assign, "$g_presentation_obj_admin_panel_18", -1),
	  (assign, "$g_presentation_obj_admin_panel_19", -1),
	  (assign, "$g_presentation_obj_admin_panel_20", -1),
	  (assign, "$g_presentation_obj_admin_panel_21", -1),
	  (assign, "$g_presentation_obj_admin_panel_22", -1),
	  (assign, "$g_presentation_obj_admin_panel_23", -1),
	  (assign, "$g_presentation_obj_admin_panel_24", -1),
	  (assign, "$g_presentation_obj_admin_panel_25", -1),
	  (assign, "$g_presentation_obj_admin_panel_26", -1),
	  (assign, "$g_presentation_obj_admin_panel_27", -1),
	  (assign, "$g_presentation_obj_admin_panel_28", -1),
	  (assign, "$g_presentation_obj_admin_panel_29", -1),
	  (assign, "$g_presentation_obj_admin_panel_30", -1),
	  (assign, "$g_presentation_obj_admin_panel_31", -1),
	  (assign, "$g_presentation_obj_admin_panel_32", -1),
	  (assign, "$g_presentation_obj_admin_panel_33", -1),
	  (assign, "$g_presentation_obj_admin_panel_34", -1),
	  (assign, "$g_presentation_obj_admin_panel_35", -1),
	  (assign, "$g_presentation_obj_admin_panel_36", -1),
	  (assign, "$g_presentation_obj_admin_panel_37", -1),
	  (assign, "$g_presentation_obj_admin_panel_38", -1),
	  (assign, "$g_presentation_obj_admin_panel_39", -1),
	  (assign, "$g_presentation_obj_admin_panel_40", -1),
	  (assign, "$g_presentation_obj_admin_panel_41", -1),
	  (assign, "$g_presentation_obj_admin_panel_42", -1),
	  (assign, "$g_presentation_obj_admin_panel_43", -1),
#INVASION MODE END
      (try_begin),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_1"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_1"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_2"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_2"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_3"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_3"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_4"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_4"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_5"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_5"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_6"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_6"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_7"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_7"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_8"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_8"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_9"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_9"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_10"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_10"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_11"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_11"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_12"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_12"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_13"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_13"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_14"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_14"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_15"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_15"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_16"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_16"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_17"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_17"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_18"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_18"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_19"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_19"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_20"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_20"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_21"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_21"),		
      (else_try),
        (this_or_next|eq, "$g_multiplayer_selected_map", "scn_random_multi_plain_medium"),
        (eq, "$g_multiplayer_selected_map", "scn_random_multi_plain_large"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randomp"),
      (else_try),
        (this_or_next|eq, "$g_multiplayer_selected_map", "scn_random_multi_steppe_medium"),
        (eq, "$g_multiplayer_selected_map", "scn_random_multi_steppe_large"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randoms"),
      (else_try),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randomp"),
      (try_end),
      
      (create_mesh_overlay, reg0, ":map_image"),
      (position_set_x, pos1, -1),
      (position_set_y, pos1, 550),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1002),
      (position_set_y, pos1, 1002),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_mp_ui_host_main"),
      (position_set_x, pos1, -1),
      (position_set_y, pos1, -1),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1002),
      (position_set_y, pos1, 1002),
      (overlay_set_size, reg0, pos1),

      (assign, ":cur_y", 1240),
      (assign, ":cur_y_adder", 40),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_team_deathmatch),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #two more options for these mods (friendly fire options)
        (val_add, ":cur_y", ":cur_y_adder"),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
      (try_end),
      #INVASION MODE start
	  (try_begin),
		(eq, "$g_multiplayer_is_game_type_captain", 1),
		(val_sub, ":cur_y", ":cur_y_adder"), #-2 options but +2
	  (try_end),
	  (try_begin),
		# decrease for removed options in captain coop
	    (eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
		(val_sub, ":cur_y", ":cur_y_adder"),
		(val_sub, ":cur_y", ":cur_y_adder"),
		(val_sub, ":cur_y", ":cur_y_adder"),
	  (try_end),
      #INVASION MODE END
      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_admin_panel_container", s0, tf_scrollable),
      (position_set_x, pos1, 59),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_admin_panel_container", pos1),
      (position_set_x, pos1, 640),
      (position_set_y, pos1, 520),
      (overlay_set_area_size, "$g_presentation_obj_admin_panel_container", pos1),
      (set_container_overlay, "$g_presentation_obj_admin_panel_container"),


      (create_text_overlay, reg0, "str_add_to_official_game_servers_list", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_14", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_14", pos1),
      (server_get_add_to_game_servers_list, ":add_to_servers_list"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_14", ":add_to_servers_list"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_enable_valve_anti_cheat", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_41", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_41", pos1),
      #(server_get_anti_cheat, ":server_anti_cheat"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_41", 0),
      (server_set_anti_cheat, 0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_server_name", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (str_store_server_name, s0),
      (try_begin),
        (eq, "$g_multiplayer_renaming_server_allowed", 1),
        (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_20"),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_20", pos1),
        (overlay_set_text, "$g_presentation_obj_admin_panel_20", s0),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_20", -1),
        (create_text_overlay, reg0, s0, 0),
        (position_set_x, pos1, 385),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_game_password", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_9"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_9", pos1),
      (str_store_server_password, s0),
      (overlay_set_text, "$g_presentation_obj_admin_panel_9", s0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_welcome_message", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_32"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_32", pos1),
      (str_store_welcome_message, s0),
      (overlay_set_text, "$g_presentation_obj_admin_panel_32", s0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_map", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
      (assign, ":num_maps", reg0),
      (assign, ":selected_index", 0),

      (try_begin),
        (gt, ":num_maps", 12),
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_1"),
      (else_try),
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_1"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_1", pos1),
      (try_begin),
        (gt, ":num_maps", 14),
        (position_set_x, pos1, 465),
      (else_try),
        (position_set_x, pos1, 490),
      (try_end),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
      (troop_get_slot, ":first_map", "trp_multiplayer_data", multi_data_maps_for_game_type_begin),
      (assign, ":selected_map_available", 0),
      (try_for_range, ":i_map", 0, ":num_maps"),
        (store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
        (store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", s0),
        (try_begin),
          (eq, ":map_no", "$g_multiplayer_selected_map"),
          (assign, ":selected_index", ":i_map"),
          (assign, ":selected_map_available", 1),
        (try_end),
      (try_end),
      (overlay_set_val, "$g_presentation_obj_admin_panel_1", ":selected_index"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_game_type", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (eq, "$g_multiplayer_changing_game_type_allowed", 1),
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_10"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_10", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_10", pos1),
        (try_for_range, ":i_game_type", 0, multiplayer_num_game_types),
          (store_add, ":string_index", ":i_game_type", multiplayer_game_type_names_begin),
          (str_store_string, s0, ":string_index"),
          (overlay_add_item, "$g_presentation_obj_admin_panel_10", s0),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_admin_panel_10", "$g_multiplayer_game_type"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_10", -1),
        (store_add, ":string_index", "$g_multiplayer_game_type", multiplayer_game_type_names_begin),
        (str_store_string, s0, ":string_index"),
        (create_text_overlay, reg0, s0, 0),
        (position_set_x, pos1, 385),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),
#INVASION MODE START
      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
        
        (create_text_overlay, reg0, "str_ccoop_difficulty", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_43"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_43", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_43", pos1),
        
        (overlay_add_item, "$g_presentation_obj_admin_panel_43", "str_ccoop_easy"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_43", "str_ccoop_normal"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_43", "str_ccoop_endless"),
        
        (overlay_set_val, "$g_presentation_obj_admin_panel_43", "$g_multiplayer_ccoop_difficulty"),
        
        (val_sub, ":cur_y", ":cur_y_adder"),
      (try_end),
#INVASION MODE END

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_team_reg1_faction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_11"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_11", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_11", pos1),
      (call_script, "script_multiplayer_fill_available_factions_combo_button", "$g_presentation_obj_admin_panel_11", "$g_multiplayer_next_team_1_faction", "$g_multiplayer_next_team_2_faction"),

      (val_sub, ":cur_y", ":cur_y_adder"),
      #INVASION MODE START
	  (try_begin),
		#(neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
		(assign, reg1, 2),
		(create_text_overlay, reg0, "str_team_reg1_faction", 0),
		(position_set_x, pos1, 0),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),

		(create_combo_button_overlay, "$g_presentation_obj_admin_panel_12"),
		(position_set_x, pos1, 800),
		(position_set_y, pos1, 800),
		(overlay_set_size, "$g_presentation_obj_admin_panel_12", pos1),
		(position_set_x, pos1, 490),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, "$g_presentation_obj_admin_panel_12", pos1),
		(call_script, "script_multiplayer_fill_available_factions_combo_button", "$g_presentation_obj_admin_panel_12", "$g_multiplayer_next_team_2_faction", "$g_multiplayer_next_team_1_faction"),

		(val_sub, ":cur_y", ":cur_y_adder"),
	  (try_end),
      #INVASION MODE END
      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_max_number_of_players", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      #INVASION MODE START
	  (try_begin),
		(eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
        (store_add, ":coop_max_number_players_high_range", ccoop_max_num_players, 1),
		(create_number_box_overlay, "$g_presentation_obj_admin_panel_21", 2, ":coop_max_number_players_high_range"), # range is [2,8] for ccoop
		# clamp max_num_players
		(try_begin),
		  (server_get_max_num_players, ":max_num_players"),
		  (gt, ":max_num_players", ccoop_max_num_players),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_max_num_players, ccoop_max_num_players),
	    (try_end),
	  (else_try),
		(create_number_box_overlay, "$g_presentation_obj_admin_panel_21", 2, 201), # default range is [2,200]
      (try_end),
      #INVASION MODE END

      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_21", pos1),
      (server_get_max_num_players, ":max_players"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_21", ":max_players"),

      #INVASION MODE START
	  (try_begin),
		(neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop), 
		(val_sub, ":cur_y", ":cur_y_adder"),
        (assign, reg1, 1),
        (create_text_overlay, reg0, "str_number_of_bots_in_team_reg1", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        
        (create_number_box_overlay, "$g_presentation_obj_admin_panel_3", 0, "$g_multiplayer_max_num_bots"),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_3", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_3", "$g_multiplayer_num_bots_team_1"),
        
        (val_sub, ":cur_y", ":cur_y_adder"),
        
        (assign, reg1, 2),
        (create_text_overlay, reg0, "str_number_of_bots_in_team_reg1", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        
        (create_number_box_overlay, "$g_presentation_obj_admin_panel_4", 0, "$g_multiplayer_max_num_bots"),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_4", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_4", "$g_multiplayer_num_bots_team_2"),
	  (try_end), 	
      #INVASION MODE END

      (try_begin),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_allow_friendly_fire", 0),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_check_box_overlay, "$g_presentation_obj_admin_panel_5", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 7),
        (store_add, ":special_cur_y", ":cur_y", 7),
        (position_set_y, pos1, ":special_cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_5", pos1),
        (server_get_friendly_fire, ":server_friendly_fire"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_5", ":server_friendly_fire"),

        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_allow_melee_friendly_fire", 0),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_check_box_overlay, "$g_presentation_obj_admin_panel_36", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 7),
        (store_add, ":special_cur_y", ":cur_y", 7),
        (position_set_y, pos1, ":special_cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_36", pos1),
        (server_get_melee_friendly_fire, ":melee_friendly_fire"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_36", ":melee_friendly_fire"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_friendly_fire_damage_self_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_37", 0, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_37", pos1),
      (server_get_friendly_fire_damage_self_ratio, ":friendly_fire_damage_self_ratio"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_37", ":friendly_fire_damage_self_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_friendly_fire_damage_friend_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_38", 0, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_38", pos1),
      (server_get_friendly_fire_damage_friend_ratio, ":friendly_fire_damage_friend_ratio"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_38", ":friendly_fire_damage_friend_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_spectator_camera", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_19"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_19", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_19", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_free"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_any_player"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_team_members"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_team_members_view"),
      (server_get_ghost_mode, ":server_ghost_mode"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_19", ":server_ghost_mode"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_control_block_direction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_15"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_15", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_15", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_15", "str_automatic"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_15", "str_by_mouse_movement"),
      (server_get_control_block_dir, ":server_control_block_dir"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_15", ":server_control_block_dir"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_combat_speed", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_26"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_26", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_26", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_0"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_1"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_2"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_3"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_4"),
      (server_get_combat_speed, ":server_combat_speed"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_26", ":server_combat_speed"),

      (try_begin),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        #INVASION MODE START
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
        #INVASION MODE END
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_map_time_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_7", 5, 121),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_7", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_7", "$g_multiplayer_game_max_minutes"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_7", -1),
      (try_end),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_round_time_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_16", multiplayer_round_max_seconds_min, multiplayer_round_max_seconds_max),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_16", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_16", "$g_multiplayer_round_max_seconds"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_16", -1),
      (try_end),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_players_take_control_of_a_bot_after_death", 0),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_check_box_overlay, "$g_presentation_obj_admin_panel_25", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 7),
        (store_add, ":special_cur_y", ":cur_y", 7),
        (position_set_y, pos1, ":special_cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_25", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_25", "$g_multiplayer_player_respawn_as_bot"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_25", -1),
      (try_end),

      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_defender_spawn_count_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_27"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_27", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_27", pos1),
        (assign, reg0, 5),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 4),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 3),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 2),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_unlimited"),

        (store_sub, ":value_to_set", 5, "$g_multiplayer_number_of_respawn_count"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_27", ":value_to_set"),
        #(val_sub, ":cur_y", ":cur_y_adder"),      
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_27", -1),
      (try_end),
      
      #INVASION MODE START
	  (try_begin), # team point limit
	    (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
        (val_sub, ":cur_y", ":cur_y_adder"),
        
        (create_text_overlay, reg0, "str_team_points_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        
        (create_number_box_overlay, "$g_presentation_obj_admin_panel_8", 3, 1001),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_8", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_8", "$g_multiplayer_game_max_points"),
	  (try_end),
      #INVASION MODE END

      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_point_gained_from_flags", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_17", 25, 401),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_17", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_17", "$g_multiplayer_point_gained_from_flags"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_17", -1),
      (try_end),
      
      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_point_gained_from_capturing_flag", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_18", 0, 11),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_18", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_18", "$g_multiplayer_point_gained_from_capturing_flag"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_18", -1),
      (try_end),
      
      #INVASION MODE START
	  (try_begin), #ccoop
		(neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
		(val_sub, ":cur_y", ":cur_y_adder"),
        (create_text_overlay, reg0, "str_respawn_period", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (create_number_box_overlay, "$g_presentation_obj_admin_panel_6", multiplayer_respawn_period_min, multiplayer_respawn_period_max),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_6", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_6", "$g_multiplayer_respawn_period"),
      (try_end),
      #INVASION MODE END
      
      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_initial_gold_multiplier", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_33", 0, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_33", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_33", "$g_multiplayer_initial_gold_multiplier"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_battle_earnings_multiplier", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_34", 0, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_34", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_34", "$g_multiplayer_battle_earnings_multiplier"),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),

        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_round_earnings_multiplier", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_35", 0, 1001),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_35", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_35", "$g_multiplayer_round_earnings_multiplier"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_35", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_kick_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_28", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_28", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_28", "$g_multiplayer_kick_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_ban_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_29", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_29", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_29", "$g_multiplayer_ban_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_maps_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_24", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_24", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_24", "$g_multiplayer_maps_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_factions_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_23", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_23", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_23", "$g_multiplayer_factions_voteable"),

      #INVASION MODE START
	  (try_begin), #ccoop bot count limit for polls
	    (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
		
		(val_sub, ":cur_y", ":cur_y_adder"),
        (create_text_overlay, reg0, "str_bots_upper_limit_for_votes", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
	    
        (assign, ":upper_limit", 51),
        (val_min, ":upper_limit", "$g_multiplayer_max_num_bots"),
        (create_number_box_overlay, "$g_presentation_obj_admin_panel_22", 0, ":upper_limit"),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_22", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_22", "$g_multiplayer_num_bots_voteable"),
	  (try_end),
      #INVASION MODE END

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_valid_vote_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_30", 50, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_30", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_30", "$g_multiplayer_valid_vote_ratio"),

      #INVASION MODE START
	  (try_begin), # auto team balance
	    (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),

	    (val_sub, ":cur_y", ":cur_y_adder"),
	    
        (create_text_overlay, reg0, "str_auto_team_balance_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
		  
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_31"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_31", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_31", pos1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_unlimited"),
        (assign, reg0, 6),
        (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
        (assign, reg0, 5),
        (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
        (assign, reg0, 4),
        (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
        (assign, reg0, 3),
        (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
        (assign, reg0, 2),
        (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
        (try_begin),
          (ge, "$g_multiplayer_auto_team_balance_limit", 1000),
          (overlay_set_val, "$g_presentation_obj_admin_panel_31", 0),
        (else_try),
          (store_sub, ":set_value", 7, "$g_multiplayer_auto_team_balance_limit"),
          (overlay_set_val, "$g_presentation_obj_admin_panel_31", ":set_value"),
        (try_end),
    	
	  (try_end),
      #INVASION MODE END

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_allow_player_banners", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_39", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_39", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_39", "$g_multiplayer_allow_player_banners"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_disallow_ranged_weapons", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_42", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_42", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_42", "$g_multiplayer_disallow_ranged_weapons"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_force_default_armor", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_40", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_40", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_40", "$g_multiplayer_force_default_armor"),

      (set_container_overlay, -1),

      (create_button_overlay, "$g_presentation_obj_admin_panel_13", "str_back", tf_center_justify),
      (position_set_x, pos1, 825),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_admin_panel_13", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_presentation_obj_admin_panel_13", pos1),

      (create_button_overlay, "$g_presentation_obj_admin_panel_2", "str_start_map", tf_center_justify),
      (position_set_x, pos1, 825),
      (position_set_y, pos1, 90),
      (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_presentation_obj_admin_panel_2", pos1),

      (presentation_set_duration, 999999),

      (try_begin),
        (eq, ":selected_map_available", 0),
        (assign, "$g_multiplayer_selected_map", ":first_map"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (try_end),
      ]),
    
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_admin_panel_1"),
        (store_add, ":slot_no", ":value", multi_data_maps_for_game_type_begin),
        (troop_get_slot, "$g_multiplayer_selected_map", "trp_multiplayer_data", ":slot_no"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_2"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_start_map, "$g_multiplayer_selected_map", "$g_multiplayer_game_type"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_3"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_num_bots_in_team, 1, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_4"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_num_bots_in_team, 2, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_5"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_6"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_respawn_period, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_7"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_game_max_minutes, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_8"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_game_max_points, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_9"),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_game_password, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_10"),
        (assign, "$g_multiplayer_game_type", ":value"),
        #INVASION MODE START
		(call_script, "script_multiplayer_set_g_multiplayer_is_game_type_captain"),
		#(tutorial_message, -1), 
		(try_begin),
			(eq, "$g_multiplayer_is_game_type_captain", 1),
			
			(try_begin),
				(eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
				#(tutorial_message, "str_warning_max_players_count_text2"), 
			(try_end), 
		(else_try), 
          (ge, "$g_multiplayer_next_team_2_faction", kingdoms_end),
          (assign, "$g_multiplayer_next_team_2_faction", "fac_kingdom_2"),
          (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 2, "$g_multiplayer_next_team_2_faction"),
		(try_end), 
        #INVASION END 
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_11"),
        (store_add, "$g_multiplayer_next_team_1_faction", ":value", npc_kingdoms_begin),
##        (try_begin),
##          (ge, "$g_multiplayer_next_team_1_faction", "$g_multiplayer_next_team_2_faction"),
##          (val_add, "$g_multiplayer_next_team_1_faction", 1),
##        (try_end),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 1, "$g_multiplayer_next_team_1_faction"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_12"),
        #INVASION MODE START
        (try_begin),
          (eq, ":value", 6),
          (assign, "$g_multiplayer_next_team_2_faction", "fac_outlaws"),
        (else_try),
          (eq, ":value", 7),
          (assign, "$g_multiplayer_next_team_2_faction", "fac_ccoop_all_stars"),
        (else_try),
          (store_add, "$g_multiplayer_next_team_2_faction", ":value", npc_kingdoms_begin),
        (try_end),
        #INVASION MODE END
##        (try_begin),
##          (ge, "$g_multiplayer_next_team_2_faction", "$g_multiplayer_next_team_1_faction"),
##          (val_add, "$g_multiplayer_next_team_2_faction", 1),
##        (try_end),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 2, "$g_multiplayer_next_team_2_faction"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_13"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_14"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_add_to_servers_list, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_15"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_control_block_dir, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_16"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_round_max_seconds, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_17"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_point_gained_from_flags, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_18"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_point_gained_from_capturing_flag, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_19"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_ghost_mode, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_20"),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_server_name, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_21"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_max_num_players, ":value"),
        #INVASION MODE START
		#(tutorial_message, -1),
		(try_begin),
			(eq, "$g_multiplayer_is_game_type_captain", 1),
			
			(try_begin),
				(eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
				#(tutorial_message, "str_warning_max_players_count_text2"), 
			(try_end),
		(try_end), 		
        #INVASION MODE END
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_22"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_num_bots_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_23"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_factions_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_24"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_maps_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_25"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_player_respawn_as_bot, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_26"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_combat_speed, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_27"),
        (store_sub, ":value_to_send", 5, ":value"), #opposite index of displayed list
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_respawn_count, ":value_to_send"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_28"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_kick_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_29"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_ban_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_30"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_valid_vote_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_31"),
        (try_begin),
          (eq, ":value", 0),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_auto_team_balance_limit, 1000),
        (else_try),
          (store_sub, ":value_to_send", 7, ":value"),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_auto_team_balance_limit, ":value_to_send"),
        (try_end),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_32"),
        (server_set_welcome_message, s0),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_welcome_message, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_33"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_initial_gold_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_34"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_battle_earnings_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_35"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_round_earnings_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_36"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_melee_friendly_fire, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_37"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire_damage_self_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_38"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire_damage_friend_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_39"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_allow_player_banners, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_40"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_force_default_armor, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_41"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_anti_cheat, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_42"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_disallow_ranged_weapons, ":value"),
      #INVASION MODE START
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_43"),
        (assign, "$g_multiplayer_ccoop_difficulty", ":value"),
        (multiplayer_send_2_int_to_server, multiplayer_event_other_events, multiplayer_event_admin_set_ccoop_difficulty, ":value"),
        #(display_message, "@sending difficulty to server"),
      #INVASION MODE END
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_welcome_message", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (str_store_welcome_message, s0),
      (try_begin),
        (neg|str_is_empty, s0),
        (eq, "$g_multiplayer_welcome_message_shown", 0),
        (create_mesh_overlay, reg0, "mesh_mp_ui_welcome_panel"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg0, pos1),
        (create_text_overlay, reg0, s0, tf_scrollable),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 425),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, reg0, pos1),

        (presentation_set_duration, 999999),
      (else_try),
        (eq, "$g_multiplayer_show_server_rules", 1),
        (create_mesh_overlay, reg0, "mesh_mp_ui_welcome_panel"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg0, pos1),
        (try_begin),
          (neg|str_is_empty, s0),
          (str_clear, s3),
          (str_store_string, s2, s0),
          (str_store_string, s2, "str_s2_s3"),
          (str_store_string, s2, "str_s2_s3"),
        (else_try),
          (str_clear, s2),
        (try_end),
        (str_store_string, s3, "@Game Rules:^"),
        (str_store_string, s2, "str_s2_s3"),
        (assign, ":end_cond", 1000),
        (call_script, "script_game_multiplayer_get_game_type_mission_template", "$g_multiplayer_game_type"),
        (assign, ":cur_mt", reg0),
        
        (str_store_server_name, s0),
        (str_store_string, s3, "str_server_name_s0"),
        (str_store_string, s2, "str_s2_s3"),        

        (try_begin),                
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
          (str_store_string, s0, "str_multi_game_type_1"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_team_deathmatch),
          (str_store_string, s0, "str_multi_game_type_2"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
          (str_store_string, s0, "str_multi_game_type_3"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
          (str_store_string, s0, "str_multi_game_type_4"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
          (str_store_string, s0, "str_multi_game_type_5"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
          (str_store_string, s0, "str_multi_game_type_6"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
          (str_store_string, s0, "str_multi_game_type_7"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
          (str_store_string, s0, "str_multi_game_type_8"),
        #INVASION MODE START
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
          (str_store_string, s0, "str_multi_game_type_9"),
        #INVASION MODE END
        (try_end),
        (str_store_string, s3, "str_game_type_s0"),
        (str_store_string, s2, "str_s2_s3"),   
        
        #INVASION MODE START
        (try_begin),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
          (store_add, ":difficulty_string_i", "$g_multiplayer_ccoop_difficulty", "str_ccoop_easy"),
          (str_store_string, s0, ":difficulty_string_i"),
          (str_store_string, s3, "str_ccoop_difficulty_s0"),
          (str_store_string, s2, "str_s2_s3"),   
        (try_end),
        #INVASION MODE END
        
        (store_current_scene, ":cur_scene"),
        (val_sub, ":cur_scene", "scn_multi_scene_1"),
        (val_add, ":cur_scene", "str_multi_scene_1"),
        (str_store_string, s0, ":cur_scene"),
        (str_store_string, s3, "str_map_name_s0"),
        (str_store_string, s2, "str_s2_s3"),
        
        (store_mission_timer_a, ":mission_timer"),
        (val_add, ":mission_timer", "$server_mission_timer_while_player_joined"),
        (assign, reg0, ":mission_timer"),       
        (store_mul, "$g_multiplayer_game_max_seconds", "$g_multiplayer_game_max_minutes", 60),
        (store_sub, ":remaining_seconds", "$g_multiplayer_game_max_seconds", ":mission_timer"),
        (store_div, reg0, ":remaining_seconds", 60),
        (store_mod, reg1, ":remaining_seconds", 60),
        (try_begin),
          (ge, reg0, 10),
          (ge, reg1, 10),          
          (str_clear, s0),
          (str_clear, s1),
        (else_try),  
          (ge, reg0, 10),
          (str_clear, s0),
          (str_store_string, s1, "@0"),
        (else_try),  
          (ge, reg1, 10),
          (str_store_string, s0, "@0"),
          (str_clear, s1),
        (else_try),  
          (str_store_string, s0, "@0"),
          (str_store_string, s1, "@0"),
        (try_end),
        (str_store_string, s3, "str_remaining_time_s0reg0_s1reg1"),
        
        (str_store_string, s2, "str_s2_s3"),

        (try_for_range, ":cur_option", 0, ":end_cond"),
          (assign, reg0, -12345), #magic number
          (call_script, "script_game_get_multiplayer_server_option_for_mission_template", ":cur_mt", ":cur_option"),
          (try_begin),
            (eq, reg0, -12345),
            (assign, ":end_cond", 0),
          (else_try),
            (call_script, "script_game_multiplayer_server_option_for_mission_template_to_string", ":cur_mt", ":cur_option", reg0),
            (str_store_string, s3, s0),
            (str_store_string, s2, "str_s2_s3"),
          (try_end),
        (try_end),        
        (create_text_overlay, reg0, s2, tf_scrollable),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 425),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, reg0, pos1),

        (presentation_set_duration, 999999),
      (try_end),
      ]),

    (ti_on_presentation_run,
     [
       (str_store_welcome_message, s0),
       (try_begin),
         (neq, "$g_multiplayer_show_server_rules", 1),
         (this_or_next|str_is_empty, s0),
         (eq, "$g_multiplayer_welcome_message_shown", 1),
         (presentation_set_duration, 0),
         (neg|is_presentation_active, "prsnt_multiplayer_escape_menu"),
         (neg|is_presentation_active, "prsnt_multiplayer_team_select"),
         (start_presentation, "prsnt_multiplayer_team_select"),
       (else_try),
         (store_mission_timer_a, ":mission_timer"),
         (gt, ":mission_timer", 1),
         (this_or_next|key_clicked, key_escape),
         (this_or_next|key_clicked, key_space),
         (this_or_next|key_clicked, key_enter),
         (this_or_next|key_clicked, key_left_mouse_button),
         (this_or_next|key_clicked, key_right_mouse_button),
         (this_or_next|key_clicked, key_xbox_ltrigger),
         (key_clicked, key_xbox_rtrigger),
         (assign, "$g_multiplayer_welcome_message_shown", 1),
         (presentation_set_duration, 0),
         (neg|is_presentation_active, "prsnt_multiplayer_escape_menu"),
         (neg|is_presentation_active, "prsnt_multiplayer_team_select"),
         (try_begin),
           (eq, "$g_multiplayer_show_server_rules", 1),
           (assign, "$g_multiplayer_show_server_rules", 0),
           (start_presentation, "prsnt_multiplayer_escape_menu"),
         (else_try),
           (start_presentation, "prsnt_multiplayer_team_select"),
         (try_end),
       (try_end),
      ]),
    ]),

  ("multiplayer_team_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_team_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_team_select_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_team_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_team_select_container"),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_faction", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (position_set_x, pos1, 100),

      (multiplayer_get_my_player, ":my_player_no"),
      (team_get_faction, ":faction_no", 0),
      (str_store_faction_name, s0, ":faction_no"),
      (create_button_overlay, "$g_presentation_obj_team_select_1", s0, 0),
      (try_begin),
        (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
        (overlay_set_color, "$g_presentation_obj_team_select_1", 0xFFFFFF),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_1", 0x55FF50),
        (assign, "$g_multiplayer_team_select_1_available", 1),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_team_select_1", 0x888888),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_1", 0x888888),
        (assign, "$g_multiplayer_team_select_1_available", 0),
      (try_end),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_team_select_1", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),


      #INVASION MODE START
	  (try_begin), ##ccoop
	    (team_get_faction, ":faction_no", 1),
        (str_store_faction_name, s0, ":faction_no"),
        (try_begin),
	      (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
          (create_button_overlay, "$g_presentation_obj_team_select_2", s0, 0),
        (else_try),
          (assign, "$g_presentation_obj_team_select_2", -1),
        (try_end),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
          (try_begin),
	        (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
            (overlay_set_color, "$g_presentation_obj_team_select_2", 0xFFFFFF),
            (overlay_set_hilight_color, "$g_presentation_obj_team_select_2", 0x55FF50),
          (try_end),
          (assign, "$g_multiplayer_team_select_2_available", 1),
        (else_try),
          (try_begin),
	        (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
            (overlay_set_color, "$g_presentation_obj_team_select_2", 0x888888),
            (overlay_set_hilight_color, "$g_presentation_obj_team_select_2", 0x888888),
          (try_end),
          (assign, "$g_multiplayer_team_select_2_available", 0),
        (try_end),
        (try_begin),
	      (neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
          (overlay_set_position, "$g_presentation_obj_team_select_2", pos1),
          (val_sub, ":cur_y", escape_menu_item_height),
          (position_set_y, pos1, ":cur_y"),
        (try_end),
	  (try_end),
      #INVASION MODE END

      (create_button_overlay, "$g_presentation_obj_team_select_3", "str_spectator", 0),
      (overlay_set_color, "$g_presentation_obj_team_select_3", 0xFFFFFF),
      (overlay_set_position, "$g_presentation_obj_team_select_3", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (presentation_set_duration, 999999),
      ]),

    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (eq, "$g_waiting_for_confirmation_to_terminate", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_team_select_1"),
          (try_begin),
            (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
            (try_begin),
              (player_get_team_no, ":my_team", ":my_player_no"),
              (neq, ":my_team", 0),
              (assign, "$g_confirmation_result", 0),

              #INVASION MODE START
			  (try_begin),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
				(assign, "$g_waiting_for_confirmation_to_terminate", 1),
			  (try_end),
              #INVASION MODE END

              (player_get_troop_id, "$g_confirmation_troop_backup", ":my_player_no"),
              (player_get_team_no, "$g_confirmation_team_backup", ":my_player_no"),
              (player_set_troop_id, ":my_player_no", -1),
              (multiplayer_send_int_to_server, multiplayer_event_change_team_no, 0),
              (player_set_team_no, ":my_player_no", 0),

              #INVASION MODE START
			  (call_script, "script_mp_set_player_team_no", ":my_player_no", 0, 1),
			  (try_begin),
				(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
				(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
				(eq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
				(presentation_set_duration, 0),
                (start_presentation, "prsnt_multiplayer_troop_select"),
			  (try_end),
              #INVASION MODE END

            (else_try),
              (presentation_set_duration, 0),
              (start_presentation, "prsnt_multiplayer_troop_select"),
            (try_end),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_team_select_2"),
          (try_begin),
            (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
            (try_begin),
              (player_get_team_no, ":my_team", ":my_player_no"),
              (neq, ":my_team", 1),
              (assign, "$g_confirmation_result", 0),
              #INVASION MODE START
              (try_begin),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
				(assign, "$g_waiting_for_confirmation_to_terminate", 1),
			  (try_end),
              #INVASION MODE END
              (player_get_troop_id, "$g_confirmation_troop_backup", ":my_player_no"),
              (player_get_team_no, "$g_confirmation_team_backup", ":my_player_no"),
              (player_set_troop_id, ":my_player_no", -1),
              (multiplayer_send_int_to_server, multiplayer_event_change_team_no, 1),
              (player_set_team_no, ":my_player_no", 1),
              #INVASION MODE START
			  (call_script, "script_mp_set_player_team_no", ":my_player_no", 1, 1),
			  (try_begin),
				(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
				(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
				(eq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
				(presentation_set_duration, 0),
                (start_presentation, "prsnt_multiplayer_troop_select"),
			  (try_end),
              #INVASION MODE END
            (else_try),
              (presentation_set_duration, 0),
              (start_presentation, "prsnt_multiplayer_troop_select"),
            (try_end),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_team_select_3"),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
          (presentation_set_duration, 0),
        (try_end),
      (try_end),
      ]),

    (ti_on_presentation_run,
     [
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (eq, "$g_waiting_for_confirmation_to_terminate", 0),
        (multiplayer_get_my_team, ":my_team"),
        (try_begin),
          (eq, ":my_team", multi_team_unassigned),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
        (try_end),
        (presentation_set_duration, 0),
      (else_try),
        (eq, "$g_waiting_for_confirmation_to_terminate", 1),
        (eq, "$g_confirmation_result", 1),
        (assign, "$g_waiting_for_confirmation_to_terminate", 0),
        (assign, "$g_confirmation_result", 0),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_troop_select"),
      (else_try),
        (eq, "$g_waiting_for_confirmation_to_terminate", 1),
        (eq, "$g_confirmation_result", -1),
        #return troop and team back to the old state
        (player_set_troop_id, ":my_player_no", "$g_confirmation_troop_backup"),
        (player_set_team_no, ":my_player_no", "$g_confirmation_team_backup"),
        (assign, "$g_waiting_for_confirmation_to_terminate", 0),
        (assign, "$g_confirmation_result", 0),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (else_try),
        (assign, ":do_refresh", 0),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
          (try_begin),
            (eq, "$g_multiplayer_team_select_1_available", 0),
            (assign, ":do_refresh", 1),
          (try_end),
        (else_try),
          #not available
          (try_begin),
            (eq, "$g_multiplayer_team_select_1_available", 1),
            (assign, ":do_refresh", 1),
          (try_end),
        (try_end),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
          (try_begin),
            (eq, "$g_multiplayer_team_select_2_available", 0),
            (assign, ":do_refresh", 1),
          (try_end),
        (else_try),
          #not available
          (try_begin),
            (eq, "$g_multiplayer_team_select_2_available", 1),
            (assign, ":do_refresh", 1),
          (try_end),
        (try_end),
        (eq, ":do_refresh", 1),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (try_end),
      ]),
    ]),
  
  ("multiplayer_troop_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_troop_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_troop_select_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_troop_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_troop_select_container"),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_troop", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (position_set_x, pos1, 100),

      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (team_get_faction, ":my_faction_no", ":my_team_no"),
      (try_for_range, ":i_multi", multi_data_troop_button_indices_begin, multi_data_troop_button_indices_end),
        (troop_set_slot, "trp_multiplayer_data", ":i_multi", -1),
      (try_end),

      (assign, ":cur_troop_index", 0),
      (try_for_range, ":troop_no", multiplayer_troops_begin, multiplayer_troops_end),
        (store_troop_faction, ":troop_faction", ":troop_no"),
        (eq, ":troop_faction", ":my_faction_no"),
        (str_store_troop_name, s1, ":troop_no"),
        (create_button_overlay, reg0, s1, 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":button_index_slot", ":cur_troop_index", multi_data_troop_button_indices_begin),
        (troop_set_slot, "trp_multiplayer_data", ":button_index_slot", reg0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (val_add, ":cur_troop_index", 1),
      (try_end),
      (presentation_set_duration, 999999),
      ]),
   
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (team_get_faction, ":my_faction_no", ":my_team_no"),
      (assign, ":selected_troop_no", -1),
      (assign, ":end_cond", multi_data_troop_button_indices_end),
      (try_for_range, ":i_button", multi_data_troop_button_indices_begin, ":end_cond"),
        (troop_slot_eq, "trp_multiplayer_data", ":i_button", ":object"),
        (store_sub, ":selected_troop_index", ":i_button", multi_data_troop_button_indices_begin),
        (assign, ":end_cond_2", multiplayer_troops_end),
        (try_for_range, ":troop_no", multiplayer_troops_begin, ":end_cond_2"),
          (store_troop_faction, ":troop_faction", ":troop_no"),
          (eq, ":troop_faction", ":my_faction_no"),
          (val_sub, ":selected_troop_index", 1),
          (lt, ":selected_troop_index", 0),
          (assign, ":selected_troop_no", ":troop_no"),
          (assign, ":end_cond_2", 0), #break
        (try_end),
        (try_begin),
          (multiplayer_get_my_troop, ":troop_no"),
          (neq, ":troop_no", ":selected_troop_no"),
          (player_set_troop_id, ":my_player_no", ":selected_troop_no"),
          (multiplayer_send_int_to_server, multiplayer_event_change_troop_id, ":selected_troop_no"),
          (call_script, "script_multiplayer_set_default_item_selections_for_troop", ":selected_troop_no"),
          (call_script, "script_multiplayer_send_item_selections"),
        (try_end),
        (presentation_set_duration, 0),
        (assign, "$g_presentation_state", 0),
        #INVASION MODE START
		(try_begin),
		  # open squad panel by default if player can buy squads
		  (call_script, "script_cf_multiplayer_can_buy_squad"),
		  (assign, "$g_presentation_state", 10),
		(try_end),
        #INVASION MODE END
        (start_presentation, "prsnt_multiplayer_item_select"),
        (assign, ":end_cond", 0), #break
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (multiplayer_get_my_player, ":my_player_no"),
        (is_between, ":my_player_no", 0, multiplayer_max_possible_player_id),
        (multiplayer_get_my_troop, ":my_troop"),
        (try_begin),
        #INVASION MODE START
          (eq, "$g_multiplayer_is_game_type_captain", 1),
          (neg|is_between, ":my_troop", multiplayer_troops_begin, multiplayer_troops_end),
		  (call_script, "script_mp_set_player_team_no", ":my_player_no", multi_team_spectator, 1),
        (else_try),
        #INVASION MODE END
          (neg|is_between, ":my_troop", multiplayer_troops_begin, multiplayer_troops_end),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_troop_id, -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
        (try_end),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_item_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (multiplayer_get_my_player, ":my_player_no"),

      (assign, "$g_presentation_obj_item_select_1", -1),
      (assign, "$g_presentation_obj_item_select_2", -1),
      (assign, "$g_presentation_obj_item_select_3", -1),
      (assign, "$g_presentation_obj_item_select_4", -1),
      (assign, "$g_presentation_obj_item_select_5", -1),
      (assign, "$g_presentation_obj_item_select_6", -1),
      (assign, "$g_presentation_obj_item_select_7", -1),
      (assign, "$g_presentation_obj_item_select_8", -1),
      (assign, "$g_presentation_obj_item_select_9", -1),
      (assign, "$g_presentation_obj_item_select_10", -1),
      (assign, "$g_presentation_obj_item_select_11", -1),
      (assign, "$g_presentation_obj_item_select_12", -1),
      (assign, "$g_presentation_obj_item_select_13", -1),
      (assign, "$g_presentation_obj_item_select_14", -1),
      (assign, "$g_presentation_obj_item_select_15", -1),
      (assign, "$g_presentation_obj_item_select_16", -1),
      #INVASION MODE START
      (assign, "$g_presentation_obj_item_select_17", -1),
      #INVASION MODE END
      (try_begin),
        (neq, "$g_current_opened_item_details", -1),
        (close_item_details),
        (assign, "$g_current_opened_item_details", -1),
      (try_end),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 526),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_1", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_1", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 475),
      (overlay_set_position, "$g_presentation_obj_item_select_1", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 426),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_2", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_2", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 375),
      (overlay_set_position, "$g_presentation_obj_item_select_2", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 326),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_3", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_3", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 275),
      (overlay_set_position, "$g_presentation_obj_item_select_3", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 226),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_4", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_4", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 175),
      (overlay_set_position, "$g_presentation_obj_item_select_4", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 576),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_5", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_helmet", "mesh_mp_inventory_slot_helmet"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_5", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 525),
      (overlay_set_position, "$g_presentation_obj_item_select_5", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 476),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_6", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_armor", "mesh_mp_inventory_slot_armor"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_6", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 425),
      (overlay_set_position, "$g_presentation_obj_item_select_6", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 376),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_7", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_boot", "mesh_mp_inventory_slot_boot"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_7", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 325),
      (overlay_set_position, "$g_presentation_obj_item_select_7", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 276),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_8", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_glove", "mesh_mp_inventory_slot_glove"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_8", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 225),
      (overlay_set_position, "$g_presentation_obj_item_select_8", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (eq, "$g_horses_are_avaliable", 1),
        (create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 176),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_9", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_horse", "mesh_mp_inventory_slot_horse"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_9", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_item_select_9", pos1),

      (create_mesh_overlay, reg0, "mesh_mp_inventory_left"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 14),
      (overlay_set_position, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_mp_inventory_right"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 894),
      (position_set_y, pos1, 65),
      (overlay_set_position, reg0, pos1),

      (create_in_game_button_overlay, "$g_presentation_obj_item_select_10", "str_reset_to_default", 0),
      (overlay_set_color, "$g_presentation_obj_item_select_10", 0xFFFFFF),
      (position_set_x, pos1, 605),
      (position_set_y, pos1, 25),
      (overlay_set_position, "$g_presentation_obj_item_select_10", pos1),

      (create_in_game_button_overlay, "$g_presentation_obj_item_select_11", "str_done", 0),
      (overlay_set_color, "$g_presentation_obj_item_select_11", 0xFFFFFF),
      (position_set_x, pos1, 395),
      (position_set_y, pos1, 25),
      (overlay_set_position, "$g_presentation_obj_item_select_11", pos1),

      (assign, ":cur_y", 725),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (assign, ":has_bots", 0),
      #INVASION MODE START
      (try_begin),
	    (call_script, "script_cf_multiplayer_can_buy_squad"),
        (assign, ":has_bots", 1),
	  (else_try),
	    (neq, "$g_multiplayer_is_game_type_captain", 1),
        (eq, ":my_team_no", 0),
	    (gt, "$g_multiplayer_num_bots_team_1", 0),
	    (assign, ":has_bots", 1),
	  (else_try),
	    (neq, "$g_multiplayer_is_game_type_captain", 1),
        (eq, ":my_team_no", 1),
	    (gt, "$g_multiplayer_num_bots_team_2", 0),
	    (assign, ":has_bots", 1),
	  (try_end),
      #INVASION MODE END
      (team_get_faction, ":my_faction_no", ":my_team_no"),

      (try_begin),
        (eq, ":has_bots", 1),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),

        (assign, ":num_lines", 0),
        (try_begin),
          (eq, ":has_bots", 1),
          (try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
            (store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
            (eq, ":ai_troop_faction", ":my_faction_no"),
            (val_add, ":num_lines", 1),
          (try_end),
        (try_end),

        #INVASION MODE START
        (try_begin),
          (eq, "$g_multiplayer_is_game_type_captain", 1),
          (assign, ":num_lines", 3),
        (try_end),
        #INVASION MODE END
        
        (store_mul, ":board_height", ":num_lines", 20),
        (val_add, ":board_height", 40),

        #INVASION MODE START
        (try_begin),
          (eq, "$g_multiplayer_is_game_type_captain", 1),
                    
          # Squad Add/Remove Button
          (create_in_game_button_overlay, "$g_presentation_obj_item_select_17", "str_mp_add_troop"),
          (overlay_set_color, "$g_presentation_obj_item_select_17", 0xFFFFFF),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 650),
          (overlay_set_position, "$g_presentation_obj_item_select_17", pos1),
          
        (else_try),
          (create_mesh_overlay, reg0, "mesh_mp_ui_command_border_r"),
          (position_set_x, pos1, 280),
          (position_set_y, pos1, 680),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 2500),
          (position_set_y, pos1, 2500),
          (overlay_set_size, reg0, pos1),
          
          (create_mesh_overlay, reg0, "mesh_mp_ui_command_border_l"),
          (position_set_x, pos1, 650),
          (position_set_y, pos1, 680),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 2500),
          (position_set_y, pos1, 2500),
          (overlay_set_size, reg0, pos1),

          (create_mesh_overlay, reg0, "mesh_mp_ui_command_panel"),
          (position_set_x, pos1, 350),
          (store_sub, ":board_pos_y", 750, ":board_height"),
          (position_set_y, pos1, ":board_pos_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 3000),
          (position_set_y, pos1, 3000),
          (overlay_set_size, reg0, pos1),
          
          (create_text_overlay, reg0, "str_command", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
        (try_end),
        
        (assign, ":cur_ai_troop_index", 0),
        (try_begin),
          (eq, "$g_multiplayer_is_game_type_captain", 0),
          (try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
            (store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
            (eq, ":ai_troop_faction", ":my_faction_no"),
            
            (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
            (position_set_x, pos1, 800),
            (position_set_y, pos1, 800),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, 377),
            (store_add, ":special_cur_y", ":cur_y", 2),
            (position_set_y, pos1, ":special_cur_y"),
            (overlay_set_position, reg0, pos1),
            (try_begin),
              (eq, ":cur_ai_troop_index", 0),
              (overlay_set_val, reg0, "$g_multiplayer_bot_type_1_wanted"),
              (assign, "$g_presentation_obj_item_select_13", reg0),
            (else_try),
              (eq, ":cur_ai_troop_index", 1),
              (overlay_set_val, reg0, "$g_multiplayer_bot_type_2_wanted"),
              (assign, "$g_presentation_obj_item_select_14", reg0),
            (else_try),
              (eq, ":cur_ai_troop_index", 2),
              (overlay_set_val, reg0, "$g_multiplayer_bot_type_3_wanted"),
              (assign, "$g_presentation_obj_item_select_15", reg0),
            (else_try),
              (overlay_set_val, reg0, "$g_multiplayer_bot_type_4_wanted"),
              (assign, "$g_presentation_obj_item_select_16", reg0),
            (try_end),
            
            (str_store_troop_name, s0, ":ai_troop_no"),
            (create_text_overlay, reg0, "str_s0", 0),
            (overlay_set_color, reg0, 0xFFFFFF),
            (position_set_x, pos1, 800),
            (position_set_y, pos1, 800),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, 397),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (val_sub, ":cur_y", 20),
            (val_add, ":cur_ai_troop_index", 1),
          (try_end),
          #INVASION MODE END
        (try_end),
        (val_sub, ":cur_y", 20),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_gold, ":player_gold", ":my_player_no"),
      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
      (create_text_overlay, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0", tf_left_align|tf_single_line|tf_with_outline),
      (try_begin),
        (ge, ":player_gold", reg0),
        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
      (try_end),
      (position_set_x, pos1, 680),
      (position_set_y, pos1, 652),
      (overlay_set_position, "$g_presentation_obj_item_select_12", pos1),
      
      (store_add, "$g_presentation_obj_item_select_next", "$g_presentation_obj_item_select_12", 1),

      (player_get_troop_id, ":my_troop_no", ":my_player_no"),
      (try_begin),
        (eq, "$g_presentation_state", 1),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 474),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 515),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 2),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 374),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 415),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 3),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 274),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 315),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 4),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 174),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 215),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 5),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_heads_begin, multi_item_class_type_heads_end, 117, 524),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 565),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 6),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_bodies_begin, multi_item_class_type_bodies_end, 117, 424),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 465),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 7),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_feet_begin, multi_item_class_type_feet_end, 117, 324),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 365),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 8),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_gloves_begin, multi_item_class_type_gloves_end, 117, 224),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 265),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 9),
        (eq, "$g_horses_are_avaliable", 1),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_horses_begin, multi_item_class_type_horses_end, 117, 124),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 165),
        (overlay_set_position, reg0, pos1),
      #INVASION MODE START
      (else_try),
        #Berk
        (eq, "$g_presentation_state", 10),
        (call_script, "script_mp_set_coop_companions", ":my_player_no"),
        #(call_script, "script_multiplayer_create_available_troops_buttons", ":my_player_no", ":my_faction_no"),
        
        (create_mesh_overlay, reg0, "mesh_mp_score_b"),
        (position_set_x, pos1, 205),
        (position_set_y, pos1, 150),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        
        (multiplayer_get_my_player, ":my_player_no"),
        (player_get_slot, ":spawn_status", ":my_player_no", slot_player_companion_ids_locked),
        
        (assign, "$g_presentation_obj_coop_companion_select_0", -1),
        (assign, "$g_presentation_obj_coop_companion_select_1", -1),
        
        (try_begin),
          (eq, ":spawn_status", 0),
          (create_combo_label_overlay, "$g_presentation_obj_coop_companion_select_0"),
          #(call_script, "script_multiplayer_fill_companion_select_combo_button", "$g_presentation_obj_coop_companion_select_0", "$g_presentation_obj_coop_companion_0"),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 700),
          (overlay_set_size, "$g_presentation_obj_coop_companion_select_0", pos1),
          (position_set_x, pos1, 360),
          (position_set_y, pos1, 265),
          (overlay_set_position, "$g_presentation_obj_coop_companion_select_0", pos1),
          
          (create_combo_label_overlay, "$g_presentation_obj_coop_companion_select_1"),
          #(call_script, "script_multiplayer_fill_companion_select_combo_button", "$g_presentation_obj_coop_companion_select_1", "$g_presentation_obj_coop_companion_1"),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 700),
          (overlay_set_size, "$g_presentation_obj_coop_companion_select_1", pos1),
          (position_set_x, pos1, 640),
          (position_set_y, pos1, 265),
          (overlay_set_position, "$g_presentation_obj_coop_companion_select_1", pos1),
          (try_for_range, ":cur_companion", multiplayer_coop_companion_equipment_sets_begin, multiplayer_coop_companion_first_equipment_sets_end),
            (str_store_troop_name, s0, ":cur_companion"),
            #(display_message, "@{s0}"),
            (overlay_add_item, "$g_presentation_obj_coop_companion_select_0", s0),
            (overlay_add_item, "$g_presentation_obj_coop_companion_select_1", s0),
          (try_end),
          
          (store_sub, ":selected_companion", "$g_presentation_obj_coop_companion_0", multiplayer_coop_companion_equipment_sets_begin),
          (overlay_set_val, "$g_presentation_obj_coop_companion_select_0", ":selected_companion"),
          
          (store_sub, ":selected_companion", "$g_presentation_obj_coop_companion_1", multiplayer_coop_companion_equipment_sets_begin),
          (overlay_set_val, "$g_presentation_obj_coop_companion_select_1", ":selected_companion"),
          
          (create_text_overlay, reg0, "str_ccoop_select_companion", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 222),
          (position_set_y, pos1, 550),
          (overlay_set_position, reg0, pos1),
        
        (else_try),
          (str_store_troop_name, s0, "$g_presentation_obj_coop_companion_0"),
          (create_text_overlay, reg0, s0, tf_center_justify),
          #(call_script, "script_multiplayer_fill_companion_select_combo_button", "$g_presentation_obj_coop_companion_select_0", "$g_presentation_obj_coop_companion_0"),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, reg0, pos1),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 358),
          (position_set_y, pos1, 265),
          (overlay_set_position, reg0, pos1),
          
          (str_store_troop_name, s0, "$g_presentation_obj_coop_companion_1"),
          (create_text_overlay, reg0, s0, tf_center_justify),
          #(call_script, "script_multiplayer_fill_companion_select_combo_button", "$g_presentation_obj_coop_companion_select_1", "$g_presentation_obj_coop_companion_1"),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, reg0, pos1),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 638),
          (position_set_y, pos1, 265),
          (overlay_set_position, reg0, pos1),
          
          (create_text_overlay, reg0, "str_ccoop_select_companion_class", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 222),
          (position_set_y, pos1, 550),
          (overlay_set_position, reg0, pos1),
        
        (try_end),
        
        (player_get_slot, ":my_companion_0_level", ":my_player_no", slot_player_companion_levels_begin),
        (val_add, ":my_companion_0_level", 1),
        (assign, reg0, ":my_companion_0_level"),
        (str_store_string, s0, "str_ccoop_lvl_reg0"),
        
        #(str_store_troop_name, s0, "$g_presentation_obj_coop_companion_0"),
        (create_text_overlay, reg0, s0, tf_left_align),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 418),
        (position_set_y, pos1, 507),
        (overlay_set_position, reg0, pos1),
        
        (player_get_slot, ":my_companion_1_level", ":my_player_no", slot_player_companion_levels_begin + 1),
        (val_add, ":my_companion_1_level", 1),
        (assign, reg0, ":my_companion_1_level"),
        (str_store_string, s0, "@Lv. {reg0}"),
        
        #(str_store_troop_name, s0, "$g_presentation_obj_coop_companion_1"),
        (create_text_overlay, reg0, s0, tf_left_align),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 698),
        (position_set_y, pos1, 507),
        (overlay_set_position, reg0, pos1),
        
        #(assign, reg0, "$g_presentation_obj_coop_companion_0"),
        #(assign, reg1, "$g_presentation_obj_coop_companion_1"),
        #(display_message, "@companions 1 {reg0} and 2 {reg1}"),
                
                
        (store_sub, ":companion_string_i", "$g_presentation_obj_coop_companion_0", multiplayer_coop_companion_equipment_sets_begin),        
        (val_add, ":companion_string_i", multiplayer_coop_companion_description_strings_begin),        
        (str_store_string, s0, ":companion_string_i"),        
        (create_text_overlay, reg0, s0, tf_left_align),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 306),
        (overlay_set_position, reg0, pos1),
                
        (store_sub, ":companion_string_i", "$g_presentation_obj_coop_companion_1", multiplayer_coop_companion_equipment_sets_begin),        
        (val_add, ":companion_string_i", multiplayer_coop_companion_description_strings_begin),        
        (str_store_string, s0, ":companion_string_i"),        
        (create_text_overlay, reg0, s0, tf_left_align),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 530),
        (position_set_y, pos1, 306),
        (overlay_set_position, reg0, pos1),

        (create_image_button_overlay, "$g_presentation_obj_coop_companion_random_select_0", "mesh_ccoop_random_class", "mesh_ccoop_random_class"),
        (position_set_x, pos1, 60),
        (position_set_y, pos1, 80),
        (overlay_set_size, "$g_presentation_obj_coop_companion_random_select_0", pos1),
        (position_set_x, pos1, 259),
        (position_set_y, pos1, 341),
        (overlay_set_position, "$g_presentation_obj_coop_companion_random_select_0", pos1),
        
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_random_select_1", "mesh_ccoop_random_class", "mesh_ccoop_random_class"),
        (position_set_x, pos1, 60),
        (position_set_y, pos1, 80),
        (overlay_set_size, "$g_presentation_obj_coop_companion_random_select_1", pos1),
        (position_set_x, pos1, 539),
        (position_set_y, pos1, 341),
        (overlay_set_position, "$g_presentation_obj_coop_companion_random_select_1", pos1),
                
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_0_default", "mesh_ccoop_default_class", "mesh_ccoop_default_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_1_default", "mesh_ccoop_default_class", "mesh_ccoop_default_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_0_infantry", "mesh_ccoop_melee_class", "mesh_ccoop_melee_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_1_infantry", "mesh_ccoop_melee_class", "mesh_ccoop_melee_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_0_ranged", "mesh_ccoop_ranged_class", "mesh_ccoop_ranged_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_1_ranged", "mesh_ccoop_ranged_class", "mesh_ccoop_ranged_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_0_mounted", "mesh_ccoop_mounted_class", "mesh_ccoop_mounted_class"),
        (create_image_button_overlay, "$g_presentation_obj_coop_companion_class_select_1_mounted", "mesh_ccoop_mounted_class", "mesh_ccoop_mounted_class"),
        (position_set_x, pos1, 90),
        (position_set_y, pos1, 120),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_0_default", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_1_default", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_0_infantry", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_1_infantry", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_0_ranged", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_1_ranged", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_0_mounted", pos1),
        (overlay_set_size, "$g_presentation_obj_coop_companion_class_select_1_mounted", pos1),
        
        (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_0_default", "str_default"),
        (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_1_default", "str_default"),
        
        
        (position_set_y, pos1, 208),
        
        (assign, ":cur_classes_x", 259),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_0_default", pos1),
        
        (val_add, ":cur_classes_x", 55),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_0_infantry", pos1),
        
        (val_add, ":cur_classes_x", 55),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_0_ranged", pos1),
        
        (val_add, ":cur_classes_x", 55),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_0_mounted", pos1),
        
        (assign, ":cur_classes_x", 539),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_1_default", pos1),
        
        (val_add, ":cur_classes_x", 55),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_1_infantry", pos1),
        
        (val_add, ":cur_classes_x", 55),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_1_ranged", pos1),
        
        (val_add, ":cur_classes_x", 55),
        (position_set_x, pos1, ":cur_classes_x"),
        (overlay_set_position, "$g_presentation_obj_coop_companion_class_select_1_mounted", pos1),
                


        #(multiplayer_get_my_player, ":my_player_no"),
        #(player_get_troop_id, ":my_troop_no", ":my_player_no"),
        (team_get_faction, ":my_faction_no", 0),
        
        #(assign, ":overlay_val", 0),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_default", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_default", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_infantry", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_infantry", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_ranged", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_ranged", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_mounted", 0xFFFFFF),
        (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_mounted", 0xFFFFFF),
                          
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_default", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_default", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_infantry", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_infantry", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_ranged", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_ranged", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_mounted", 0xAA),
        (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_mounted", 0xAA),
                          
        (try_begin),
          (eq, "$g_presentation_obj_coop_companion_class_0", "$g_presentation_obj_coop_companion_0"),
          (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_default", 0xd1cf9a),
          (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_default", 0xFFFFFF),
        (try_end),
        (try_begin),
          (eq, "$g_presentation_obj_coop_companion_class_1", "$g_presentation_obj_coop_companion_1"),
          (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_default", 0xd1cf9a),
          (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_default", 0xFFFFFF),
        (try_end),
        
        (assign, ":eligible_troop_count", 0),
            
        (try_for_range, ":cur_template", multiplayer_coop_class_templates_begin, multiplayer_coop_class_templates_end),
          (store_troop_faction, ":trp_faction", ":cur_template"),
          (eq, ":trp_faction", ":my_faction_no"),
          (store_character_level, ":trp_level", ":cur_template"),
          (eq, ":trp_level", 4),
          (str_store_troop_name, s0, ":cur_template"),
          (val_add, ":eligible_troop_count", 1),
          (try_begin),
            (eq, ":eligible_troop_count", 2),
            (assign, reg0, ":eligible_troop_count"),
            #(display_message, "@setting overlay class {reg0}: {s0}"),
            (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_0_infantry", s0),
            (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_1_infantry", s0),
            (try_begin),
              (eq, "$g_presentation_obj_coop_companion_class_0", ":cur_template"),
              #(display_message, "@is class of companion 0"),
              (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_infantry", 0x337540),
              (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_infantry", 0xFF),
            (try_end),
            (try_begin),
              (eq, "$g_presentation_obj_coop_companion_class_1", ":cur_template"),
              #(display_message, "@is class of companion 1"),
              (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_infantry", 0x337540),
              (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_infantry", 0xFF),
            (try_end),
          (else_try),
            (eq, ":eligible_troop_count", 1),
            (assign, reg0, ":eligible_troop_count"),
            #(display_message, "@setting overlay class {reg0}: {s0}"),
            (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_0_ranged", s0),
            (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_1_ranged", s0),
            (try_begin),
              (eq, "$g_presentation_obj_coop_companion_class_0", ":cur_template"),
              #(display_message, "@is class of companion 0"),
              (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_ranged", 0xb32e22),
              (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_ranged", 0xFF),
            (try_end),
            (try_begin),
              (eq, "$g_presentation_obj_coop_companion_class_1", ":cur_template"),
              #(display_message, "@is class of companion 1"),
              (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_ranged", 0xb32e22),
              (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_ranged", 0xFF),
            (try_end),
          (else_try),
            (eq, ":eligible_troop_count", 3),
            (assign, reg0, ":eligible_troop_count"),
            #(display_message, "@setting overlay class {reg0}: {s0}"),
            (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_0_mounted", s0),
            (overlay_set_tooltip, "$g_presentation_obj_coop_companion_class_select_1_mounted", s0),
            (try_begin),
              (eq, "$g_presentation_obj_coop_companion_class_0", ":cur_template"),
              #(display_message, "@is class of companion 0"),
              (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_0_mounted", 0x5857c3),
              (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_0_mounted", 0xFF),
            (try_end),
            (try_begin),
              (eq, "$g_presentation_obj_coop_companion_class_1", ":cur_template"),
              #(display_message, "@is class of companion 1"),
              (overlay_set_color, "$g_presentation_obj_coop_companion_class_select_1_mounted", 0x5857c3),
              (overlay_set_alpha, "$g_presentation_obj_coop_companion_class_select_1_mounted", 0xFF),
            (try_end),
          (try_end),
        (try_end),
        

        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_coop_companion_select_0", "$g_presentation_obj_coop_companion_0"),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 349),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),
        
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_coop_companion_select_0", "$g_presentation_obj_coop_companion_1"),
        (position_set_x, pos1, 510),
        (position_set_y, pos1, 349),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),
        
        
        (create_button_overlay, "$g_presentation_obj_coop_companion_select_done", "str_done"),
        (position_set_x, pos1, 468),
        (position_set_y, pos1, 170),
        (overlay_set_position, "$g_presentation_obj_coop_companion_select_done", pos1),
        (overlay_set_color, "$g_presentation_obj_coop_companion_select_done", 0xFFFFFF),
        #INVASION MODE END
      (try_end),
      #INVASION MODE START
      (multiplayer_get_my_player, ":my_player_no"),
      (call_script, "script_mp_set_coop_companions", ":my_player_no"),
      (call_script, "script_multiplayer_send_item_selections"),
      #INVASION MODE END
      (presentation_set_duration, 999999),
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),

        (try_begin),
          (eq, "$g_close_equipment_selection", 0),
          #INVASION MODE START
          (eq, "$g_presentation_state", 10),
        (else_try),
          (eq, "$g_close_equipment_selection", 0),
          #INVASION MODE END
          (try_begin),
            (eq, ":enter_leave", 0),

            (assign, ":item_no", -1), 
            (try_begin),
              (ge, ":object", "$g_presentation_obj_item_select_next"),
              (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
              (store_mod, ":mod_value", ":tested_object", 2),
              (store_sub, ":mod_value", 1, ":mod_value"),
              (val_div, ":tested_object", 2),
              (store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
              (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

              (assign, ":target_obj", ":object"),
              (val_add, ":target_obj", ":mod_value"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_1"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_2"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_3"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_4"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_5"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_6"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_7"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),   
              (assign, ":target_obj", "$g_inside_obj_8"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_9"),
            (try_end),

            (try_begin),
              (ge, ":item_no", 0),
              (overlay_get_position, pos0, ":target_obj"),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_troop_id, ":my_player_troop_no", ":my_player_no"),
              (try_begin),
                (call_script, "script_cf_multiplayer_is_item_default_for_troop", ":item_no", ":my_player_troop_no"),
                (show_item_details, ":item_no", pos0, 0),
              (else_try),
                (store_troop_faction, ":my_player_faction_no", ":my_player_troop_no"),
                (store_sub, ":faction_slot", ":my_player_faction_no", npc_kingdoms_begin),
                (val_add, ":faction_slot", slot_item_multiplayer_faction_price_multipliers_begin),
                (item_get_slot, ":price_multiplier", ":item_no", ":faction_slot"),
                (show_item_details, ":item_no", pos0, ":price_multiplier"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":item_no"),
            (try_end),
          (else_try),
            (assign, ":item_no", -1), 
            (try_begin),
              (ge, ":object", "$g_presentation_obj_item_select_next"),
              (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
              (val_div, ":tested_object", 2),
              (store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
              (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_1"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_2"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_3"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_4"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_5"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_6"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_7"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),   
              (assign, ":target_obj", "$g_inside_obj_8"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_9"),
            (try_end),

            (try_begin),
              (eq, "$g_current_opened_item_details", ":item_no"),
              (close_item_details),
              (assign, "$g_current_opened_item_details", -1),
            (try_end),
          (try_end),
        (else_try),
          (assign, "$g_close_equipment_selection", 0),
          #INVASION MODE START
          (multiplayer_get_my_player, ":my_player_no"),
          (call_script, "script_mp_set_coop_companions", ":my_player_no"),
		  (call_script, "script_multiplayer_send_item_selections"),
          #INVASION MODE END
          (presentation_set_duration, 0),
        (try_end),
      ]),
        
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_troop_id, ":my_troop_no", ":my_player_no"),
      #INVASION MODE START
      (player_get_team_no, ":my_player_team", ":my_player_no"),
      #INVASION MODE END

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (eq, "$g_presentation_state", 0),
          (try_begin),
            (eq, ":object", "$g_presentation_obj_item_select_1"),
            (assign, "$g_presentation_state", 1),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_2"),
            (assign, "$g_presentation_state", 2),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_3"),
            (assign, "$g_presentation_state", 3),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_4"),
            (assign, "$g_presentation_state", 4),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_5"),
            (assign, "$g_presentation_state", 5),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_6"),
            (assign, "$g_presentation_state", 6),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_7"),
            (assign, "$g_presentation_state", 7),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_8"),
            (assign, "$g_presentation_state", 8),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_9"),
            (eq, "$g_horses_are_avaliable", 1),
            (assign, "$g_presentation_state", 9),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          #INVASION MODE START
          (else_try),#Berk
            (eq, ":object", "$g_presentation_obj_item_select_17"),
            (assign, "$g_presentation_state", 10),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          #INVASION MODE END
          (try_end),
        (else_try),
          #INVASION MODE START
          (is_between, "$g_presentation_state", 0, 10),
          #INVASION MODE END
          (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
          (val_div, ":tested_object", 2),
          (assign, ":end_cond", multi_data_item_button_indices_end),
          (try_for_range, ":cur_slot", multi_data_item_button_indices_begin, ":end_cond"),
            (neg|troop_slot_eq, "trp_multiplayer_data", ":cur_slot", -1),
            (store_sub, ":button_id", ":cur_slot", multi_data_item_button_indices_begin),
            (eq, ":tested_object", ":button_id"),
            (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

            
			(try_begin),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, "$g_presentation_state"),
              (val_sub, ":player_slot_index", 1),
              (player_set_slot, ":my_player_no", ":player_slot_index", ":item_no"),
              (call_script, "script_multiplayer_update_cost_labels"),
              (assign, ":end_cond", 0), #break
            (try_end),
          (try_end),
          (presentation_set_duration, 0),
          (assign, "$g_presentation_state", 0),
          (start_presentation, "prsnt_multiplayer_item_select"),
        (else_try),
          (eq, "$g_presentation_state", 10), # if troop panel is open
          (try_begin),
            (eq, ":object", "$g_presentation_obj_coop_companion_select_done"),
            
            (eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            (call_script, "script_multiplayer_send_item_selections"),
            (presentation_set_duration, 0),
            (assign, "$g_presentation_state", 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (multiplayer_get_my_player, ":my_player_no"),
            (player_get_troop_id, ":my_troop_no", ":my_player_no"),
            (team_get_faction, ":my_faction_no", 0),
            (player_slot_eq, ":my_player_no", slot_player_companion_ids_locked, 0),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_random_select_0"),
            (eq, ":object", "$g_presentation_obj_coop_companion_select_0"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_coop_companion_random_select_0"),
              (store_random_in_range, ":value", multiplayer_coop_companion_equipment_sets_begin, multiplayer_coop_companion_first_equipment_sets_end),
            (else_try),
              (val_add, ":value", multiplayer_coop_companion_equipment_sets_begin),
            (try_end),
            (store_sub, ":add_sub_test", ":value", "$g_presentation_obj_coop_companion_0"),
            (try_begin),
              (eq, ":value", "$g_presentation_obj_coop_companion_1"),
              (try_begin),
                (neq, ":add_sub_test", 15),
                (this_or_next|gt, ":add_sub_test", 0),
                (eq, ":add_sub_test", -15), #back to start of list (should be calculated in code)
                (val_add, ":value", 1),
                (try_begin),
                  (ge, ":value", multiplayer_coop_companion_first_equipment_sets_end),
                  (assign, ":value", multiplayer_coop_companion_equipment_sets_begin),
                (try_end),
              (else_try),
                (val_sub, ":value", 1),
                (try_begin),
                  (lt, ":value", multiplayer_coop_companion_equipment_sets_begin),
                  (assign, ":value", multiplayer_coop_companion_first_equipment_sets_end),
                  (val_sub, ":value", 1),
                (try_end),
              (try_end),
            (try_end),
            (assign, "$g_presentation_obj_coop_companion_0", ":value"),
            (try_begin),
              (is_between, "$g_presentation_obj_coop_companion_class_0", multiplayer_coop_companion_equipment_sets_begin, multiplayer_coop_companion_equipment_sets_end),
              (store_sub, ":value", "$g_presentation_obj_coop_companion_0", multiplayer_coop_companion_equipment_sets_begin),
              (val_add, ":value", multiplayer_coop_companion_equipment_sets_begin),
              #(val_add, ":value", 1),
              (assign, "$g_presentation_obj_coop_companion_class_0", ":value"),
            (try_end),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            #(assign, reg0, "$g_presentation_obj_coop_companion_0"),
            #(display_message, "@companion event change val: {reg0}"),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (player_slot_eq, ":my_player_no", slot_player_companion_ids_locked, 0),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_random_select_1"),
            (eq, ":object", "$g_presentation_obj_coop_companion_select_1"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_coop_companion_random_select_1"),
              (store_random_in_range, ":value", multiplayer_coop_companion_equipment_sets_begin, multiplayer_coop_companion_first_equipment_sets_end),
            (else_try),
              (val_add, ":value", multiplayer_coop_companion_equipment_sets_begin),
            (try_end),
            (store_sub, ":add_sub_test", ":value", "$g_presentation_obj_coop_companion_1"),
            (try_begin),
              (eq, ":value", "$g_presentation_obj_coop_companion_0"),
              (try_begin),
                (neq, ":add_sub_test", 15),
                (this_or_next|gt, ":add_sub_test", 0),
                (eq, ":add_sub_test", -15), #back to start of list (should be calculated in code)
                (val_add, ":value", 1),
                (try_begin),
                  (ge, ":value", multiplayer_coop_companion_first_equipment_sets_end),
                  (assign, ":value", multiplayer_coop_companion_equipment_sets_begin),
                (try_end),
              (else_try),
                (val_sub, ":value", 1),
                (try_begin),
                  (lt, ":value", multiplayer_coop_companion_equipment_sets_begin),
                  (assign, ":value", multiplayer_coop_companion_first_equipment_sets_end),
                  (val_sub, ":value", 1),
                (try_end),
              (try_end),
            (try_end),
            (assign, "$g_presentation_obj_coop_companion_1", ":value"),
            (try_begin),
              (is_between, "$g_presentation_obj_coop_companion_class_1", multiplayer_coop_companion_equipment_sets_begin, multiplayer_coop_companion_equipment_sets_end),
              (store_sub, ":value", "$g_presentation_obj_coop_companion_1", multiplayer_coop_companion_equipment_sets_begin),
              (val_add, ":value", multiplayer_coop_companion_equipment_sets_begin),
              #(val_add, ":value", 1),
              (assign, "$g_presentation_obj_coop_companion_class_1", ":value"),
            (try_end),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_default"),
            (assign, "$g_presentation_obj_coop_companion_class_0", "$g_presentation_obj_coop_companion_0"),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_default"),
            (assign, "$g_presentation_obj_coop_companion_class_1", "$g_presentation_obj_coop_companion_1"),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_random_select_0"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_infantry"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_ranged"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_mounted"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_random_select_1"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_infantry"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_ranged"),
            (eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_mounted"),
          (else_try),
            (presentation_set_duration, 0),
            (assign, "$g_presentation_state", 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (try_end),
          (try_begin),
            
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_random_select_0"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_infantry"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_ranged"),
            (eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_mounted"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_coop_companion_random_select_0"),
              (store_random_in_range, ":random", 0, 2),
              (assign, ":random_class", 0),
              (try_begin),
                (eq, ":random", 0),
                (assign, "$g_presentation_obj_coop_companion_class_0", "$g_presentation_obj_coop_companion_0"),
              (else_try),
                (store_random_in_range, ":random_class", 0, 4),
                (try_begin),
                  (eq, ":random_class", 0),
                  (assign, "$g_presentation_obj_coop_companion_class_0", "$g_presentation_obj_coop_companion_0"),
                (else_try),
                  (eq, ":random_class", 1),
                  (assign, ":object", "$g_presentation_obj_coop_companion_class_select_0_infantry"),
                (else_try),
                  (eq, ":random_class", 2),
                  (assign, ":object", "$g_presentation_obj_coop_companion_class_select_0_ranged"),
                (else_try),
                  (eq, ":random_class", 3),
                  (assign, ":object", "$g_presentation_obj_coop_companion_class_select_0_mounted"),
                (try_end),
              (try_end),
              (eq, ":random_class", 0),
            (else_try),
              (assign, ":eligible_troop_count", 0),
              (try_for_range, ":cur_template", multiplayer_coop_class_templates_begin, multiplayer_coop_class_templates_end),
                (store_troop_faction, ":trp_faction", ":cur_template"),
                (eq, ":trp_faction", ":my_faction_no"),
                (store_character_level, ":trp_level", ":cur_template"),
                (eq, ":trp_level", 4),
                (str_store_troop_name, s0, ":cur_template"),
                (val_add, ":eligible_troop_count", 1),
                (assign, reg0, ":eligible_troop_count"),
                (try_begin),
                  (eq, ":eligible_troop_count", 2),
                  #(display_message, "@setting selection class {reg0}: {s0}"),
                  (eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_infantry"),
                  #(display_message, "@setting companion 0 as infantry"),
                  (assign, "$g_presentation_obj_coop_companion_class_0", ":cur_template"),
                (else_try),
                  (eq, ":eligible_troop_count", 1),
                  #(display_message, "@setting selection class {reg0}: {s0}"),
                  (eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_ranged"),
                  #(display_message, "@setting companion 0 as ranged"),
                  (assign, "$g_presentation_obj_coop_companion_class_0", ":cur_template"),
                (else_try),
                  (eq, ":eligible_troop_count", 3),
                  #(display_message, "@setting selection class {reg0}: {s0}"),
                  (eq, ":object", "$g_presentation_obj_coop_companion_class_select_0_mounted"),
                  #(display_message, "@setting companion 0 as mounted"),
                  (assign, "$g_presentation_obj_coop_companion_class_0", ":cur_template"),
                (try_end),
              (try_end),
            (try_end),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_random_select_1"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_infantry"),
            (this_or_next|eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_ranged"),
            (eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_mounted"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_coop_companion_random_select_1"),
              (store_random_in_range, ":random", 0, 2),
              (assign, ":random_class", 0),
              (try_begin),
                (eq, ":random", 0),
                (assign, "$g_presentation_obj_coop_companion_class_1", "$g_presentation_obj_coop_companion_1"),
              (else_try),
                (store_random_in_range, ":random_class", 0, 4),
                (try_begin),
                  (eq, ":random_class", 0),
                  (assign, "$g_presentation_obj_coop_companion_class_1", "$g_presentation_obj_coop_companion_1"),
                (else_try),
                  (eq, ":random_class", 1),
                  (assign, ":object", "$g_presentation_obj_coop_companion_class_select_1_infantry"),
                (else_try),
                  (eq, ":random_class", 2),
                  (assign, ":object", "$g_presentation_obj_coop_companion_class_select_1_ranged"),
                (else_try),
                  (eq, ":random_class", 3),
                  (assign, ":object", "$g_presentation_obj_coop_companion_class_select_1_mounted"),
                (try_end),
              (try_end),
              (eq, ":random_class", 0),
            (else_try),
              (assign, ":eligible_troop_count", 0),
              (try_for_range, ":cur_template", multiplayer_coop_class_templates_begin, multiplayer_coop_class_templates_end),
                (store_troop_faction, ":trp_faction", ":cur_template"),
                (eq, ":trp_faction", ":my_faction_no"),
                (store_character_level, ":trp_level", ":cur_template"),
                (eq, ":trp_level", 4),
                (str_store_troop_name, s0, ":cur_template"),
                (val_add, ":eligible_troop_count", 1),
                (try_begin),
                  (eq, ":eligible_troop_count", 2),
                  (eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_infantry"),
                  (assign, "$g_presentation_obj_coop_companion_class_1", ":cur_template"),
                (else_try),
                  (eq, ":eligible_troop_count", 1),
                  (eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_ranged"),
                  (assign, "$g_presentation_obj_coop_companion_class_1", ":cur_template"),
                (else_try),
                  (eq, ":eligible_troop_count", 3),
                  (eq, ":object", "$g_presentation_obj_coop_companion_class_select_1_mounted"),
                  (assign, "$g_presentation_obj_coop_companion_class_1", ":cur_template"),
                (try_end),
              (try_end),
            (try_end),
            (call_script, "script_mp_set_coop_companions", ":my_player_no"),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (try_end),
          #INVASION MODE END
        (try_end),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_item_select_10"),
          (call_script, "script_multiplayer_set_default_item_selections_for_troop", ":my_troop_no"),
          (presentation_set_duration, 0),
          (assign, "$g_presentation_state", 0),
          (start_presentation, "prsnt_multiplayer_item_select"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_11"),
          (call_script, "script_multiplayer_send_item_selections"),
          (presentation_set_duration, 0),

          (try_begin),
            (try_begin),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
              (gt, "$g_multiplayer_number_of_respawn_count", 0),
          
              (ge, "$g_my_spawn_count", "$g_multiplayer_number_of_respawn_count"),
         
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_team_no, ":my_player_team", ":my_player_no"),

              (this_or_next|eq, ":my_player_team", 0),
              (ge, "$g_my_spawn_count", 999),
        
              (assign, "$g_show_no_more_respawns_remained", 1),
            (else_try),
              (assign, "$g_show_no_more_respawns_remained", 0),
            (try_end),

            (eq, "$g_show_no_more_respawns_remained", 1),

            (store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
            (start_presentation, "prsnt_multiplayer_respawn_time_counter"),
          (try_end),      
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_13"),
          (assign, "$g_multiplayer_bot_type_1_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_1_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_14"),
          (assign, "$g_multiplayer_bot_type_2_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_2_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_15"),
          (assign, "$g_multiplayer_bot_type_3_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_3_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_16"),
          (assign, "$g_multiplayer_bot_type_4_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_4_wanted, ":value"),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        #INVASION MODE START
	    (call_script, "script_multiplayer_send_item_selections"),
        #INVASION MODE END
        (presentation_set_duration, 0),
      (try_end),
      ]),
    
    (ti_on_presentation_mouse_press,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":mouse_state"),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (eq, ":mouse_state", 1), #right click (clears the item slot)
          (try_begin),
            (eq, "$g_presentation_state", 0),
            (multiplayer_get_my_player, ":my_player_no"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (try_end),
          (else_try),
            #INVASION MODE START
            (eq, "$g_presentation_state", 10), # if squad panel is open
          (else_try),
            #INVASION MODE END
            (gt, "$g_presentation_state", 0),
            (presentation_set_duration, 0),
            (assign, "$g_presentation_state", 0),
            (start_presentation, "prsnt_multiplayer_item_select"),      
          (try_end),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        #INVASION MODE START
		(call_script, "script_multiplayer_send_item_selections"),
        #INVASION MODE END
        (presentation_set_duration, 0),
      (try_end),      
      ]),
    
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),

## this causes an error sometimes
##      (multiplayer_get_my_player, ":my_player_no"),
##      (player_get_gold, ":player_gold", ":my_player_no"),
##      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),      
##      (try_begin),
##        (ge, ":player_gold", reg0),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
##      (else_try),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
##      (try_end),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (this_or_next|key_clicked, key_escape),
		  (key_clicked, key_xbox_start),
          (try_begin),
            (neq, "$g_current_opened_item_details", -1),
            (close_item_details),
            (assign, "$g_current_opened_item_details", -1),
          (try_end),
          (gt, ":cur_time", 200),
          #INVASION MODE START
          (multiplayer_get_my_player, ":my_player_no"),
          (call_script, "script_mp_set_coop_companions", ":my_player_no"),
          (call_script, "script_multiplayer_send_item_selections"),
          #INVASION MODE END
          (presentation_set_duration, 0),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        #daha sonra buraya siege modundaysa ve takimini yeni degistirdigi icin spawn olamiyorsa start_presentation, spawn_counter satirini ekle sdsd.
        #INVASION MODE START
        (call_script, "script_multiplayer_send_item_selections"),
        #INVASION MODE END
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_message_1", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_battle_mode),
        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin),
          (eq, ":winner_agent_team", -1),
          (assign, ":text_font_color", 0xFFFFFFFF),

          (str_store_string, s0, "str_round_draw_no_one_remained"),
        (else_try),
          (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
            (eq, ":winner_agent_team", 0),
            (assign, ":text_font_color", 0xFF33DD11),
          (else_try),
            (assign, ":text_font_color", 0xFFFF4422),
          (try_end), #initializing ends
          (try_begin),
            (lt, "$my_team_at_start_of_round", 2),
            (try_begin),
              (eq, "$my_team_at_start_of_round", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),

          (team_get_faction, ":faction_of_winner_team", ":winner_agent_team"),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
          (str_store_string, s0, "str_s1_won_round"),
        (try_end),

        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (try_begin),
          (neq, ":winner_agent_team", -1),
          (position_set_x, pos1, 375), #375
        (else_try),
          (position_set_x, pos1, 400), #400
        (try_end),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 300),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_score),

        (agent_get_team, ":winner_agent_team", "$g_multiplayer_message_value_1"), #assign given agent's team to winner agent team.
        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
              (play_sound, "snd_team_scored_a_point"),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
              (play_sound, "snd_enemy_scored_a_point"),
            (try_end),
          (try_end),
        (try_end),

        (str_store_string, s0, "str_s1_captured_flag"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_returned_home),

        (try_begin),
          (ge, "$g_multiplayer_message_value_1", 0),
          (agent_get_team, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"), 
          (team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
          (str_store_faction_name, s1, ":returned_flag_agent_faction"),
          (str_store_string, s0, "str_s1_returned_flag"),
        (else_try),
          (val_add, "$g_multiplayer_message_value_1", 1),
          (val_mul, "$g_multiplayer_message_value_1", -1),
          (assign, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"),
          (team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
          (str_store_faction_name, s1, ":returned_flag_agent_faction"),
          (str_store_string, s0, "str_s1_auto_returned_flag"),
        (try_end),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (play_sound, "snd_flag_returned"),
          (try_end),
        (try_end),
        (assign, ":text_font_color", 0xFFFFFFFF),

        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 325),
        (position_set_y, pos1, 400),
        (position_set_x, pos1, 500), #new
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_stole),

        (agent_get_team, ":stolen_flag_agent_team", "$g_multiplayer_message_value_1"), 
        (team_get_faction, ":stolen_flag_agent_faction", ":stolen_flag_agent_team"),
        (str_store_faction_name, s1, ":stolen_flag_agent_faction"),

        (assign, ":text_font_color", 0xFFFFFFFF),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":stolen_flag_agent_team"),
              (play_sound, "snd_enemy_flag_taken"),
            (else_try),
              (play_sound, "snd_your_flag_taken"),
            (try_end),
          (try_end),
        (try_end),

        (str_store_string, s0, "str_s1_taken_flag"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 365),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_captured),
      
        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
              (play_sound, "snd_team_scored_a_point"),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
              (play_sound, "snd_enemy_scored_a_point"),
            (try_end),
          (try_end),
        (try_end),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (str_store_string, s0, "str_s1_captured_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_is_pulling),
      
        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (play_sound, "snd_enemy_flag_taken"),
            (else_try),
              (play_sound, "snd_your_flag_taken"),
            (try_end),
          (try_end),
        (try_end),

        (assign, ":text_font_color", 0xFFFFFFFF),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),      

        (str_store_string, s0, "str_s1_pulling_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_neutralized),      

        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (play_sound, "snd_flag_returned"),
          (try_end),
        (try_end),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (str_store_string, s0, "str_s1_neutralized_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),     
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),      

        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_multiplayer_message_value_1", 0),
          (str_store_string, s0, "str_s1_defended_castle"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 1),
          (str_store_string, s0, "str_s1_captured_castle"),
        (else_try),
          (str_store_string, s0, "str_round_draw"),
          (assign, ":text_font_color", 0xFFFFFFFF),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (try_begin),
          (neq, "$g_multiplayer_message_value_1", -1),
          (position_set_x, pos1, 325),
        (else_try),
          (position_set_x, pos1, 400),
        (try_end),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_draw),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_round_draw"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 375),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_start_death_mode),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_death_mode_started"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_target_destroyed),

        (try_begin),
          (lt, "$g_multiplayer_message_value_1", 0),
          (val_mul, "$g_multiplayer_message_value_1", -1),
          (assign, ":scene_prop_team", 0),

          (team_get_faction, ":faction_of_winner_team", 1),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
        (else_try),
          (assign, ":scene_prop_team", 1),

          (team_get_faction, ":faction_of_winner_team", 0),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
        (try_end),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, "$g_multiplayer_message_value_1", 1),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (player_get_team_no, ":my_team_no", ":my_player_no"),
            (neq, ":scene_prop_team", ":my_team_no"), #if scene prop and I have different teams this means we won
            (assign, ":text_font_color", 0xFF33DD11),
          (else_try),
            (assign, ":text_font_color", 0xFFFF4422),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_multiplayer_message_value_1", 9),
          (str_store_string, s0, "str_s1_destroyed_all_targets"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 1),
          (str_store_string, s0, "str_s1_destroyed_catapult"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 2),
          (str_store_string, s0, "str_s1_destroyed_trebuchet"),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_defenders_saved_n_targets),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, "$g_defender_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", "$g_defender_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (assign, ":num_targets_saved", "$g_multiplayer_message_value_1"),

        (team_get_faction, ":faction_of_winner_team", "$g_defender_team"),
        (str_store_faction_name, s1, ":faction_of_winner_team"),

        (try_begin),
          (eq, ":num_targets_saved", 1),
          (str_store_string, s0, "str_s1_saved_1_target"),
        (else_try),
          (eq, ":num_targets_saved", 2),
          (str_store_string, s0, "str_s1_saved_2_targets"),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_attackers_won_the_round),

        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_defender_team", 0),
          (team_get_faction, ":faction_of_winner_team", 1),
        (else_try),
          (team_get_faction, ":faction_of_winner_team", 0),
        (try_end),
        (str_store_faction_name, s1, ":faction_of_winner_team"),

        (str_store_string, s0, "str_s1_won_round"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),

  ("multiplayer_message_2", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_done),
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_auto_team_balance_done"),
        (create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
        (position_set_x, pos1, 375),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_multiplayer_message_2", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_2", pos1),
        (presentation_set_duration, 300),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_next),
        (assign, ":text_font_color", 0xFFFFFFFF),

        (try_begin),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
          (str_store_string, s0, "str_auto_team_balance_in_20_seconds"),
          (position_set_x, pos1, 375),
        (else_try),
          (str_store_string, s0, "str_auto_team_balance_next_round"),
          (position_set_x, pos1, 375),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
        (position_set_y, pos1, 550),
        (position_set_x, pos1, 500), #new
        (overlay_set_position, "$g_multiplayer_message_2", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_2", pos1),
        (presentation_set_duration, 300),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),
      
  ("multiplayer_message_3", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),      
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_poll_result),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (try_begin),
          (eq, "$g_multiplayer_message_value_3", 1),
          (str_store_string, s0, "str_poll_result_yes"),
        (else_try),
          (str_store_string, s0, "str_poll_result_no"),
        (try_end),
        (create_text_overlay, "$g_multiplayer_message_3", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_3", ":text_font_color"),
        (position_set_x, pos1, 380),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 475),
        (overlay_set_position, "$g_multiplayer_message_3", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_3", pos1),
        (presentation_set_duration, 400),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),

  ("multiplayer_round_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (assign, "$g_multiplayer_last_round_time_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_round_time_counter_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_round_time_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 690),
      (overlay_set_position, "$g_multiplayer_round_time_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_round_time_counter_overlay", pos1),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_past_in_round", ":current_time", "$g_round_start_time"),
      (store_sub, ":seconds_left_in_round", "$g_multiplayer_round_max_seconds", ":seconds_past_in_round"),
      (val_max, ":seconds_left_in_round", 0),
      (try_begin),
        (neq, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
        (assign, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
        (store_div, reg0, ":seconds_left_in_round", 60),
        (store_div, reg1, ":seconds_left_in_round", 10),
        (val_mod, reg1, 6),
        (assign, reg2, ":seconds_left_in_round"),
        (val_mod, reg2, 10),
        (str_store_string, s0, "str_reg0_dd_reg1reg2"),
        (overlay_set_text, "$g_multiplayer_round_time_counter_overlay", s0),
      (try_end),
      ]),
    ]),

  ("multiplayer_team_score_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (assign, "$g_multiplayer_team_1_last_displayed_score", -1),
      (assign, "$g_multiplayer_team_2_last_displayed_score", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_team_1_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_team_1_score_display_overlay", 0xFFFFFF),
      (position_set_x, pos1, 40),
      (position_set_y, pos1, 700),
      (overlay_set_position, "$g_multiplayer_team_1_score_display_overlay", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_multiplayer_team_1_score_display_overlay", pos1),
      (create_text_overlay, "$g_multiplayer_team_2_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_team_2_score_display_overlay", 0xFFFFFF),
      (position_set_x, pos1, 40),
      (position_set_y, pos1, 645),
      (overlay_set_position, "$g_multiplayer_team_2_score_display_overlay", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_multiplayer_team_2_score_display_overlay", pos1),

      (try_begin),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_4"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_2"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_3"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_5"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_6"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
      (try_end),

      (position_set_x, pos3, 25),
      (position_set_y, pos3, 715),
      (overlay_set_position, reg0, pos3),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),      

      (try_begin),
        (eq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_4"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_2"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_3"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_5"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_6"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
      (try_end),

      (position_set_x, pos3, 25),
      (position_set_y, pos3, 660),
      (overlay_set_position, reg0, pos3),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),      

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (team_get_score, ":team_1_score", 0),
      (team_get_score, ":team_2_score", 1),
      (try_begin),
        (this_or_next|neq, ":team_1_score", "$g_multiplayer_team_1_last_displayed_score"),
        (neq, ":team_2_score", "$g_multiplayer_team_2_last_displayed_score"),
        (assign, "$g_multiplayer_team_1_last_displayed_score", ":team_1_score"),
        (assign, "$g_multiplayer_team_2_last_displayed_score", ":team_2_score"),
      
        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
        (assign, reg0, ":team_1_score"),
        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_reg0"),
        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
        (assign, reg0, ":team_2_score"),
        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_reg0"),

##        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
##        (assign, reg0, ":team_1_score"),
##        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_s0_dd_reg0"),
##        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
##        (assign, reg0, ":team_2_score"),
##        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_s0_dd_reg0"),
      (try_end),
      ]),
    ]),


  ("multiplayer_flag_projection_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, 
    [
      (set_fixed_point_multiplier, 1000),

      (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
      (val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
      (val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),
      
      (try_begin),
        (neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
        (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
        (val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
        (val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),
      (else_try),
        (assign, ":flag_mesh", "mesh_flag_project_rb"),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
        (assign, ":flag_mesh", "mesh_flag_project_rb_miss"),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),      
      (try_end),
      
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_4", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
      (presentation_set_duration, 999999),
      ]),
      
    (ti_on_presentation_run, 
    [
      (set_fixed_point_multiplier, 1000),
      
      (scene_prop_get_instance, ":flag_red_id", "$team_1_flag_scene_prop", 0),      
      (team_get_slot, ":team_0_flag_situation", 0, slot_team_flag_situation),      
      (try_begin),
        (neq, ":team_0_flag_situation", 1),
        (prop_instance_get_position, pos1, ":flag_red_id"), #hold position of flag of team 1 (red flag) at pos1
      (else_try),
        (entry_point_get_position, pos1, multi_base_point_team_1), #moved from above to here after auto-set position      
      (try_end),            
      (position_move_z, pos1, 200, 1),
      
      (scene_prop_get_instance, ":flag_blue_id", "$team_2_flag_scene_prop", 0),      
      (team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),            
      (try_begin),
        (neq, ":team_1_flag_situation", 1),
        (prop_instance_get_position, pos2, ":flag_blue_id"), #hold position of flag of team 1 (red flag) at pos1
      (else_try),
        (entry_point_get_position, pos2, multi_base_point_team_2), #moved from above to here after auto-set position      
      (try_end),      
      (position_move_z, pos2, 200, 1),
            
      (position_get_screen_projection, pos3, pos1),
      (position_get_x, ":x_pos", pos3),
      (position_get_y, ":y_pos", pos3),
      (position_set_y, pos3, ":y_pos"),
      (try_begin),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),

        (multiplayer_get_my_player, ":my_player_number"),
        (try_begin),
          (ge, ":my_player_number", 0),
          (player_get_team_no, ":my_player_team", ":my_player_number"),
        (else_try),
          (assign, ":my_player_team", multi_team_spectator),
        (try_end),

        (try_begin),
          (neq, ":my_player_team", 1), #if I am at team 0 or spectator
          (try_begin),
            (neq, ":team_0_flag_situation", 1), #if our flag is not stolen
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
          (else_try), #if our flag is stolen
            (try_begin),
              (eq, ":my_player_team", 0), 
              (assign, ":our_base_entry_id", multi_base_point_team_1),
            (else_try), 
              (assign, ":our_base_entry_id", multi_base_point_team_2),
            (try_end),

            (entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
            (position_get_screen_projection, pos3, pos5),

            (overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
          (try_end),
        (else_try),
          (try_begin),
            (neq, ":team_0_flag_situation", 1),
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
          (try_end),
        (try_end),      
      (else_try),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (try_end),
      
      (position_get_screen_projection, pos3, pos2),
      (position_get_x, ":x_pos", pos3),
      (position_get_y, ":y_pos", pos3),
      (position_set_y, pos3, ":y_pos"),
      (try_begin),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),

        (team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),

        (multiplayer_get_my_player, ":my_player_number"),
        (try_begin),
          (ge, ":my_player_number", 0),
          (player_get_team_no, ":my_player_team", ":my_player_number"),
        (else_try),
          (assign, ":my_player_team", multi_team_spectator),
        (try_end),

        (try_begin),
          (neq, ":my_player_team", 0), #if I am at team 0 or spectator
          (try_begin),
            (neq, ":team_1_flag_situation", 1), #if our flag is not stolen
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
          (else_try), #if our flag is stolen      
            (try_begin),
              (eq, ":my_player_team", 0), 
              (assign, ":our_base_entry_id", multi_base_point_team_1),
            (else_try), 
              (assign, ":our_base_entry_id", multi_base_point_team_2),
            (try_end),

            (entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
            (position_get_screen_projection, pos3, pos5),
      
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_4", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
          (try_end),
        (else_try),
          (try_begin),
            (neq, ":team_1_flag_situation", 1),
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
          (try_end),
        (try_end),
      (else_try),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_flag_projection_display_bt", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),

      (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),

      (try_begin),
        (neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
        (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (else_try),
        (assign, ":flag_mesh", "mesh_flag_project_rb"),
      (try_end),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),

      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),

      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (try_begin),
        (eq, "$g_round_ended", 0),
        (set_fixed_point_multiplier, 1000),
        (scene_prop_get_instance, ":flag_1_id", "$team_1_flag_scene_prop", 0),
        (prop_instance_get_position, pos1, ":flag_1_id"), #hold position of flag of team 1 at pos1
        (position_move_z, pos1, 250, 1),
      
        (scene_prop_get_instance, ":flag_2_id", "$team_2_flag_scene_prop", 0),
        (prop_instance_get_position, pos2, ":flag_2_id"), #hold position of flag of team 2 at pos2
        (position_move_z, pos2, 250, 1),
      
        (position_get_screen_projection, pos3, pos1),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (try_end),
      
        (position_get_screen_projection, pos3, pos2),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_destructible_targets_display", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),     

      (try_begin),
        (eq, "$g_defender_team", 0),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (else_try),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
      (try_end),
      
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),

      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),

      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (try_begin),
        (eq, "$g_round_ended", 0),
        (set_fixed_point_multiplier, 1000),
        (scene_prop_get_instance, ":target_1_id", "$g_destructible_target_1", 0),
        (prop_instance_get_position, pos1, ":target_1_id"), 
        (prop_instance_get_position, pos1, ":target_1_id"), 
        (position_move_z, pos1, 250, 1),
        (scene_prop_get_instance, ":target_2_id", "$g_destructible_target_2", 0),
        (prop_instance_get_position, pos2, ":target_2_id"), 
        (prop_instance_get_position, pos2, ":target_2_id"), 
        (position_move_z, pos2, 250, 1),
      
        (position_get_screen_projection, pos3, pos1),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),
      
          (prop_instance_get_starting_position, pos0, ":target_1_id"),
          (prop_instance_get_position, pos1, ":target_1_id"),
          (get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
          (le, ":dist", 2), #this can be 0 or 1 too.

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (try_end),
      
        (position_get_screen_projection, pos3, pos2),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (prop_instance_get_starting_position, pos0, ":target_2_id"),
          (prop_instance_get_position, pos1, ":target_2_id"),
          (get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
          (le, ":dist", 2), #this can be 0 or 1 too.

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

    
  ("multiplayer_respawn_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_respawn_counter_overlay", -1),
      (assign, "$g_multiplayer_respawn_remained_overlay", -1),
      
      (assign, ":do_not_show_respawn_counter", 0),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
        (this_or_next|eq, "$g_round_ended", 1),
        (eq, "$g_flag_is_not_ready", 1),
        (assign, ":do_not_show_respawn_counter", 1),
      (try_end),
      (eq, ":do_not_show_respawn_counter", 0),

      (assign, "$g_multiplayer_last_respawn_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_respawn_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_respawn_counter_overlay", pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_remained_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_remained_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 570),
      (overlay_set_position, "$g_multiplayer_respawn_remained_overlay", pos1),
      (position_set_x, pos1, 1400),
      (position_set_y, pos1, 1400),
      (overlay_set_size, "$g_multiplayer_respawn_remained_overlay", pos1),

      #(store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_respawn_counter_overlay", 0),
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (ge, ":my_player_no", 0),
        (player_get_team_no, ":player_team", ":my_player_no"),
        (try_begin),
          (eq, ":player_team", multi_team_spectator),
          (presentation_set_duration, 0),
        (else_try),
          (store_mission_timer_a, ":current_time"),
          (store_sub, ":seconds_past_in_respawn", ":current_time", "$g_multiplayer_respawn_start_time"),
          (try_begin),
            (eq, "$g_show_no_more_respawns_remained", 0),
            (assign, ":total_respawn_time", "$g_multiplayer_respawn_period"),
            (try_begin),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
              (player_get_team_no, ":player_team", ":my_player_no"),
              (eq, ":player_team", 0),
              (val_add, ":total_respawn_time", multiplayer_siege_mod_defender_team_extra_respawn_time),
            (try_end),
          (else_try),
            (assign, ":total_respawn_time", 6),
          (try_end),
          (store_sub, ":seconds_left_in_respawn", ":total_respawn_time", ":seconds_past_in_respawn"),
          (try_begin),
            (le, ":seconds_left_in_respawn", 0),
            (presentation_set_duration, 0),
          (else_try),
            (neq, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
            (assign, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
            (try_begin),
              (eq, "$g_show_no_more_respawns_remained", 0),
              (assign, reg0, ":seconds_left_in_respawn"),
              (str_store_string, s0, "str_respawning_in_reg0_seconds"),
              (try_begin),
                (gt, "$g_multiplayer_number_of_respawn_count", 0),
                (store_sub, reg0, "$g_multiplayer_number_of_respawn_count", "$g_my_spawn_count"),

                (multiplayer_get_my_player, ":my_player_no"),
                (player_get_team_no, ":my_player_team", ":my_player_no"),
                (eq, ":my_player_team", 0),
      
                (try_begin),
                  (gt, reg0, 1),
                  (str_store_string, s1, "str_reg0_respawns_remained"),
                (else_try),
                  (str_store_string, s1, "str_this_is_your_last_respawn"),
                (try_end),
              (else_try),
                (str_clear, s1),                
              (try_end),
            (else_try),
              (eq, "$g_show_no_more_respawns_remained", 1),
              ##(assign, "$g_informed_about_no_more_respawns_remained", 1),
              (str_store_string, s0, "str_no_more_respawns_remained_this_round"),
              (str_clear, s1),
              (str_store_string, s1, "str_wait_next_round"),
            (try_end),
            (overlay_set_text, "$g_multiplayer_respawn_counter_overlay", s0),
            (overlay_set_text, "$g_multiplayer_respawn_remained_overlay", s1),
          (try_end),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),

      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
        (this_or_next|eq, "$g_round_ended", 1),
        (eq, "$g_flag_is_not_ready", 1),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_stats_chart", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_score_b"),
      (position_set_x, pos1, 100),
      (position_set_y, pos1, 100),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (assign, ":team_1_rows", 0),
      (assign, ":team_2_rows", 0),
      (assign, ":spectator_rows", 0),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 0, ":num_players"),
        (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
        (try_begin),
          (player_is_active, ":player_no"),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (try_begin),
            (eq, ":player_team", 0),
            (val_add, ":team_1_rows", 1),
          (else_try),
            (eq, ":player_team", 1),
            (val_add, ":team_2_rows", 1),
          (else_try),
            (eq, ":player_team", multi_team_spectator),
            (val_add, ":spectator_rows", 1),
          (try_end),
        (else_try),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
        (try_end),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_team_1", 0),
        (val_add, ":team_1_rows", 1),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_team_2", 0),
        (val_add, ":team_2_rows", 1),
      (try_end),

      (assign, ":total_rows", ":team_1_rows"),
      (val_max, ":total_rows", ":team_2_rows"),
      (val_add, ":total_rows", ":spectator_rows"),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_stats_chart_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 100),
      (position_set_y, pos1, 120),#120
      (overlay_set_position, "$g_presentation_obj_stats_chart_container", pos1),
      (position_set_x, pos1, 746),
      (position_set_y, pos1, 530),#530
      (overlay_set_area_size, "$g_presentation_obj_stats_chart_container", pos1),
      (set_container_overlay, "$g_presentation_obj_stats_chart_container"),

      (store_mul, ":y_needed", ":total_rows", 20),
      (val_add, ":y_needed", 100),
      (try_begin),
        (gt, ":spectator_rows", 0),
        (val_add, ":y_needed", 70),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),       

      (try_begin),
        (gt, ":y_needed", 490),
        (assign, "$g_stats_chart_update_period", 8),
      (else_try),
        (assign, "$g_stats_chart_update_period", 1),
      (try_end),

      (try_begin), #counting number of flags each team has.
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        (call_script, "script_get_headquarters_scores"),
        (assign, ":team_1_num_flags", reg0),
        (assign, ":team_2_num_flags", reg1),
      (try_end),

      #assuming only 2 teams in scene
      (try_for_range, ":i_team", 0, multi_team_spectator),
        (assign, ":number_of_players", 0),
        (get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_team_no, ":team_no", ":player_no"),
          (eq, ":team_no", ":i_team"),
          (val_add, ":number_of_players", 1),
        (try_end),
        (assign, reg0, ":number_of_players"),
        (try_begin),
          (neq, ":number_of_players", 1),
          (create_text_overlay, reg1, "str_reg0_players", 0),
        (else_try),
          (create_text_overlay, reg1, "str_reg0_player", 0),
        (try_end),

        (assign, ":cur_y", ":y_needed"),
        (team_get_faction, ":cur_faction", ":i_team"),
        (str_store_faction_name, s1, ":cur_faction"),
        (create_text_overlay, reg0, s1, 0),
        (try_begin),
          (eq, ":i_team", 0),
          (overlay_set_color, reg0, 0xFF0000),
          (overlay_set_color, reg1, 0xFF0000),
        (else_try),
          (overlay_set_color, reg0, 0x0099FF),
          (overlay_set_color, reg1, 0x0099FF),
        (try_end),
        (assign, ":distance_between_teams", 373),
        (store_mul, ":cur_x", ":distance_between_teams", ":i_team"),
        (val_add, ":cur_x", 42),
        (store_add, ":cur_x_add_15", ":cur_x", 15),
        (position_set_x, pos3, ":cur_x_add_15"),
        (position_set_y, pos3, ":cur_y"),
        (store_add, ":cur_x_add_35", ":cur_x", 35),
        (position_set_x, pos1, ":cur_x_add_35"),
        (position_set_y, pos1, ":cur_y"),
        (copy_position, pos2, pos1),
        (store_sub, ":cur_y_sub_10", ":cur_y", 10),
        (position_set_x, pos2, ":cur_x_add_35"),
        (position_set_y, pos2, ":cur_y_sub_10"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_position, reg1, pos2),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (position_set_x, pos2, 600),
        (position_set_y, pos2, 600),
        (overlay_set_size, reg0, pos1),
        (overlay_set_size, reg1, pos2),

        (team_get_faction, ":faction_of_team_1", 0),
        (team_get_faction, ":faction_of_team_2", 1),
          
        (try_begin),
          (eq, ":faction_of_team_1", ":faction_of_team_2"),
          (eq, ":i_team", 1),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_4"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_2"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_3"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_5"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_6"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_1"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
        (try_end),
      
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos3),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),      

        (team_get_score, reg0, ":i_team"),
        (create_text_overlay, reg0, "str_score_reg0", tf_right_align),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 325), #325
        (store_add, ":sub_cur_y", ":cur_y", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_size, reg0, pos1),      

        (try_begin), #counting number of flags each team has only at hq mod.
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
          (try_begin),
            (eq, ":i_team", 0),
            (assign, reg0, ":team_1_num_flags"),
          (else_try),
            (eq, ":i_team", 1),
            (assign, reg0, ":team_2_num_flags"),
          (try_end),
          (create_text_overlay, reg0, "str_flags_reg0", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (store_add, ":sub_cur_x", ":cur_x", 258),
          (store_add, ":sub_cur_y", ":cur_y", -10),
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":sub_cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg0, pos1),      
        (try_end),

        (val_sub, ":cur_y", 60),
      
        (create_text_overlay, reg0, "str_player_name", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        (try_begin), #at headquarters and capture the flag write score instead before kill count
          (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      
          (create_text_overlay, reg0, "str_score", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (store_add, ":sub_cur_x", ":cur_x", 138),
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
        (try_end),
      
        (create_text_overlay, reg0, "str_kills", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 206), #191
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_deaths", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 260), #232
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
      
        (create_text_overlay, reg0, "str_ping", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 308), #291
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
      
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 16500),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),

        (val_sub, ":cur_y", 35),
      
        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":unused", 0, ":end_cond"),
          (assign, ":max_score_plus_death", -30030),
          (assign, ":max_score_plus_death_player_no", -1),
          (try_for_range, ":player_no", 0, ":num_players"),            
            (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
            (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
            (player_get_team_no, ":player_team", ":player_no"),
            (eq, ":player_team", ":i_team"),

            (try_begin),
              (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      
              (player_get_score, ":kill_count", ":player_no"), #get score in "capture the flag" or "headquarters"
            (else_try),
              (player_get_kill_count, ":kill_count", ":player_no"), 
            (try_end),
      
            (player_get_death_count, ":death_count", ":player_no"), #get_death_count

            (store_mul, ":player_score_plus_death", ":kill_count", 1000),
            (val_sub, ":player_score_plus_death", ":death_count"),
      
            (this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
            (eq, ":player_score_plus_death", -30030),
      
            (assign, ":max_score_plus_death", ":player_score_plus_death"),
            (assign, ":max_score_plus_death_player_no", ":player_no"),
          (try_end),
          (try_begin),
            (ge, ":max_score_plus_death_player_no", 0),
            (store_add, ":slot_index", ":max_score_plus_death_player_no", multi_data_player_index_list_begin),
            (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
      
            (try_begin),
              (eq, ":my_player_no", ":max_score_plus_death_player_no"),
              (create_mesh_overlay, reg0, "mesh_white_plane"),
              (overlay_set_color, reg0, 0xFFFFFF),
              (overlay_set_alpha, reg0, 0x35),
              (store_add, ":sub_cur_x", ":cur_x", 0),
              (position_set_x, pos1, ":sub_cur_x"),
              (store_add, ":sub_cur_y", ":cur_y", 0),
              (position_set_y, pos1, ":sub_cur_y"),
              (overlay_set_position, reg0, pos1),
              (position_set_x, pos1, 16500),
              (position_set_y, pos1, 1000),
              (overlay_set_size, reg0, pos1),
            (try_end),
  
            (try_begin), #at headquarters and capture the flag write score instead dead label before kill count
              (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      

              (assign, ":font_color", 0xFFFFFF),
              (player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
              (try_begin),
                (this_or_next|lt, ":max_score_plus_death_agent_id", 0),
                (neg|agent_is_alive, ":max_score_plus_death_agent_id"),
                (assign, ":font_color", 0xFF0000),
              (try_end),

              (player_get_score, reg0, ":max_score_plus_death_player_no"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),      
              (store_add, ":sub_cur_x", ":cur_x", 165), #150
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
            (else_try),
              (assign, ":font_color", 0xFFFFFF),
              (player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
              (try_begin),
                (this_or_next|lt, ":max_score_plus_death_agent_id", 0),
                (neg|agent_is_alive, ":max_score_plus_death_agent_id"),
                (assign, ":font_color", 0xFF0000),
                (create_text_overlay, reg0, "str_dead", 0),
                (overlay_set_color, reg0, ":font_color"),
                (position_set_x, pos1, 750),
                (position_set_y, pos1, 750),
                (overlay_set_size, reg0, pos1),
                (store_add, ":sub_cur_x", ":cur_x", 130),
                (position_set_x, pos1, ":sub_cur_x"),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
              (try_end),
            (try_end),

            (str_store_player_username, s1, ":max_score_plus_death_player_no"),
            #INVASION MODE START
			(try_begin),
		      (eq, "$g_multiplayer_is_game_type_captain", 1),
			  (create_text_overlay, reg0, "str_s1_team", 0),
			(else_try),
		      (create_text_overlay, reg0, s1, 0),
			(try_end), 
            #INVASION MODE END
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, ":cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_kill_count, reg0, ":max_score_plus_death_player_no"), #get_kill_count
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),      
            (store_add, ":sub_cur_x", ":cur_x", 215), #200
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_death_count, reg0, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),      
            (store_add, ":sub_cur_x", ":cur_x", 265), #250
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_ping, reg0, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),
            (store_add, ":sub_cur_x", ":cur_x", 315), #300
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (val_sub, ":cur_y", 20),
          (else_try),
            (try_begin),
              (try_begin),
                (eq, ":i_team", 0),
                (assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_1"),
              (else_try),
                (assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_2"),
              (try_end),
             
              (team_get_bot_kill_count, reg0, ":i_team"),
              (team_get_bot_death_count, reg1, ":i_team"),
              (try_begin),
                (this_or_next|neq, reg0, 0),
                (this_or_next|neq, reg1, 0),
                (neq, ":number_of_bots_in_cur_team", 0),
                (assign, ":write_bot_informations_of_team", 1),
              (else_try),
                (assign, ":write_bot_informations_of_team", 0),
              (try_end),
      
              (eq, ":write_bot_informations_of_team", 1),

              (assign, ":number_of_alive_bots", 0),
              (try_for_agents, ":cur_agent"),
                (agent_is_non_player, ":cur_agent"),
                (agent_is_alive, ":cur_agent"),
                (agent_get_team, ":cur_agent_team", ":cur_agent"),
                (eq, ":cur_agent_team", ":i_team"),
                (val_add, ":number_of_alive_bots", 1),
              (try_end),
              (store_sub, ":number_of_dead_bots", ":number_of_bots_in_cur_team", ":number_of_alive_bots"),
              (try_begin),
                (eq, ":number_of_alive_bots", 0),
                (assign, ":font_color", 0xFF0000),
              (else_try),
                (assign, ":font_color", 0xD0D0D0),
              (try_end),

              (try_begin),
                (gt, ":number_of_dead_bots", 0),
                (try_begin),
                  (eq, ":number_of_bots_in_cur_team", 1),
                  (create_text_overlay, reg0, "str_dead", 0),
                  (store_add, ":sub_cur_x", ":cur_x", 130),
                (else_try),
                  (assign, reg0, ":number_of_dead_bots"),
                  (create_text_overlay, reg0, "str_reg0_dead", 0),
                  (store_add, ":sub_cur_x", ":cur_x", 123),
                (try_end),      
                (overlay_set_color, reg0, ":font_color"),
                (position_set_x, pos1, 750),
                (position_set_y, pos1, 750),
                (overlay_set_size, reg0, pos1),
                (position_set_x, pos1, ":sub_cur_x"),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
              (try_end),

              (try_begin),
                (gt, ":number_of_bots_in_cur_team", 1),
                (assign, reg0, ":number_of_bots_in_cur_team"),
                (create_text_overlay, reg0, "str_bots_reg0_agents", 0),
              (else_try),
                (create_text_overlay, reg0, "str_bot_1_agent", 0),
              (try_end),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (position_set_x, pos1, ":cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
      
              (team_get_bot_kill_count, reg0, ":i_team"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (store_add, ":sub_cur_x", ":cur_x", 215), #200
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
      
              (team_get_bot_death_count, reg0, ":i_team"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (store_add, ":sub_cur_x", ":cur_x", 265), #250
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
              (val_sub, ":cur_y", 20),
            (try_end),
            (assign, ":end_cond", 0), #all players are written for this team, break
          (try_end),
        (try_end),

        (try_begin),
          (eq, ":i_team", 0),
          (assign, ":old_cur_y", ":cur_y"),
        (try_end),
      (try_end),

      (try_begin),
        (le, ":old_cur_y", ":cur_y"),
        (assign, ":cur_y", ":old_cur_y"),
      (try_end),

      (assign, ":cur_x", 42),

      #white line between playing players and spectators
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", 10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 36000),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1), 

      (try_begin),
        (gt, ":spectator_rows", 0),

        (assign, ":cur_x", 280),
        (val_sub, ":cur_y", 50),

        #"spectators" text 
        (create_text_overlay, reg0, "str_spectators", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_ping", tf_right_align),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 215), #200
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        #white line for spectators list
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),

        (val_sub, ":cur_y", 30),

        (assign, ":font_color", 0xC0C0C0),

        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":player_no", 0, ":end_cond"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

          (player_get_team_no, ":player_team", ":player_no"),
          (eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

          (try_begin),
            (eq, ":my_player_no", ":player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 12000),
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (str_store_player_username, s1, ":player_no"),
          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          
          (player_get_ping, reg0, ":player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 215), #200
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),      
        (try_end),
      (try_end),

      (omit_key_once, key_mouse_scroll_up),
      (omit_key_once, key_mouse_scroll_down),
      
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_mouse_scroll_up),
        (key_clicked, key_mouse_scroll_down),
        (omit_key_once, key_mouse_scroll_up),
        (omit_key_once, key_mouse_scroll_down),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_stats_chart_opened_manually", 1),
        (neg|game_key_is_down, gk_leave),
        (assign, "$g_multiplayer_stats_chart_opened_manually", 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (try_begin),
        (store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
        (gt, ":cur_time", ":update_period_time_limit"),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_stats_chart"),
      (try_end),
      ]),
    ]),

  #this score table is used in only deathmatch
  ("multiplayer_stats_chart_deathmatch", prsntf_read_only|prsntf_manual_end_only, 0, [ 
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_score_a"),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, 115),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (assign, ":team_rows", 0),
      (assign, ":spectator_rows", 0),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 0, ":num_players"),
        (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
        (try_begin),
          (player_is_active, ":player_no"),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (try_begin),
            (this_or_next|eq, ":player_team", 0),
            (eq, ":player_team", 1),
            (val_add, ":team_rows", 1),
          (else_try),
            (eq, ":player_team", multi_team_spectator),
            (val_add, ":spectator_rows", 1),
          (try_end),
        (else_try),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
        (try_end),
      (try_end),
      (try_begin),
        (this_or_next|gt, "$g_multiplayer_num_bots_team_1", 0),
        (gt, "$g_multiplayer_num_bots_team_2", 0),
        (val_add, ":team_rows", 1),
      (try_end),

      (store_add, ":total_rows", ":team_rows", ":spectator_rows"),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_stats_chart_deathmatch_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 300),
      (position_set_y, pos1, 140),
      (overlay_set_position, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
      (position_set_x, pos1, 346),
      (position_set_y, pos1, 530),
      (overlay_set_area_size, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
      (set_container_overlay, "$g_presentation_obj_stats_chart_deathmatch_container"),

      (store_mul, ":y_needed", ":total_rows", 20),
      (val_add, ":y_needed", 80),
      (try_begin),
        (gt, ":spectator_rows", 0),
        (val_add, ":y_needed", 70),
      (try_end),

      (try_begin),
        (ge, ":total_rows", 17),
        (assign, "$g_stats_chart_update_period", 10),
      (else_try),
        (assign, "$g_stats_chart_update_period", 1),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),

      #assuming only 2 teams in scene
      (assign, ":cur_y", ":y_needed"),
      (assign, ":cur_x", 42),

      #INVASION MODE START
	  (try_begin),
		# if captain coop mode
		(eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
		
		# hide it if every player is spectator
		(assign, ":has_player_in_team", 0),
		(get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_team_no, ":team_no", ":player_no"),
          (eq, ":team_no", 0),
		  (assign, ":has_player_in_team", 1),
        (try_end),
		(eq, ":has_player_in_team", 1),
		
		(assign, ":cur_x",  40),
        (val_sub, ":cur_y", 50),

        #"ZITATS" text		
        (create_text_overlay, reg0, "str_wave_info", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 850),
        (overlay_set_size, reg0, pos1),
		
		(val_sub, ":cur_y", 22),

		(try_begin),
		  (gt, "$g_multiplayer_ccoop_wave_no", 0),
		  (assign, ":font_color", 0xF0F0F0),
		  (store_sub, reg1, "$g_multiplayer_ccoop_wave_no", "$g_mp_coop_last_king_wave"),
		  (try_begin),
		    (ge, "$g_mp_coop_king_waves", 1), # wave++
		    (create_text_overlay, reg0, "str_elite_wave_no_reg1", 0),

		  (else_try),
		    (create_text_overlay, reg0, "str_wave_no_reg1", 0),
		  (try_end),
		  
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
		  (val_sub, ":cur_y", 22),
		(try_end),
		
		(call_script, "script_multiplayer_ccoop_get_alive_enemy_count"),
		(assign, ":total_alive_enemy_count", reg0),
		
		(try_begin),
			(le, "$g_multiplayer_ccoop_enemy_respawn_secs", 10000),
			(this_or_next|gt, "$g_multiplayer_ccoop_enemy_respawn_secs", 31),
			(gt, ":total_alive_enemy_count", 0),
			(eq, "$g_round_ended", 0),
			(assign, reg1, "$g_multiplayer_ccoop_enemy_respawn_secs"),
			(try_begin),
			  (ge, reg1, 60),
			  (store_div, reg2, reg1, 60),
			  (val_mod, reg1, 60),
			  (create_text_overlay, reg0, "str_time_left_reg2_mins_reg1_secs", 0),
			(else_try),
			  (create_text_overlay, reg0, "str_time_left_reg1_secs", 0),
			(try_end),
			(overlay_set_color, reg0, ":font_color"),
			(position_set_x, pos1, ":cur_x"),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 750),
			(position_set_y, pos1, 750),
			(overlay_set_size, reg0, pos1),
			(val_sub, ":cur_y", 22),
		(try_end),
		
		(assign, ":total_arriving_enemy_count", 0),
		(troop_get_slot, ":num_bot_types", "trp_multiplayer_data", multi_data_ccoop_wave_spawn_data_begin),
		(try_for_range, ":cur_bot_type", 0, ":num_bot_types"),
			(store_mul, ":cur_slot", ":cur_bot_type", 3),			
			(val_add, ":cur_slot", multi_data_ccoop_wave_spawn_data_begin + 2),			
			(troop_get_slot, ":bot_count", "trp_multiplayer_data", ":cur_slot"),
			(val_add, ":total_arriving_enemy_count", ":bot_count"),
		(try_end),
					
		(assign, ":enemies_caption_printed", 0),		
		(try_for_range, ":cur_bot_type", 0, ":num_bot_types"),
			(store_mul, ":cur_slot", ":cur_bot_type", 3),
			(val_add, ":cur_slot", multi_data_ccoop_wave_spawn_data_begin + 1),
			(troop_get_slot, ":bot_type", "trp_multiplayer_data", ":cur_slot"),	

			# check if current bot type has already written
			(assign, ":already_printed", 0),
			(try_for_range, ":cur_bot_type2", 0, ":cur_bot_type"),
				(eq, ":already_printed", 0), # break condition
				(store_mul, ":cur_slot2", ":cur_bot_type2", 3),
				(val_add, ":cur_slot2", multi_data_ccoop_wave_spawn_data_begin + 1),
				(troop_get_slot, ":bot_type2", "trp_multiplayer_data", ":cur_slot2"),
				(try_begin),
					(eq, ":bot_type", ":bot_type2"),
					(assign, ":already_printed", 1),
				(try_end),
			(try_end),
			
			(try_begin),
				(eq, ":already_printed", 0),
				
				(val_add, ":cur_slot", 1),
				(troop_get_slot, ":bot_count", "trp_multiplayer_data", ":cur_slot"),
				
				# now check forward for same bot type
				(store_add, ":cur_bot_type_plus_1", ":cur_bot_type", 1),				
				(try_for_range, ":cur_bot_type2", ":cur_bot_type_plus_1", ":num_bot_types"),					
					(store_mul, ":cur_slot2", ":cur_bot_type2", 3),
					(val_add, ":cur_slot2", multi_data_ccoop_wave_spawn_data_begin + 1),
					(troop_get_slot, ":bot_type2", "trp_multiplayer_data", ":cur_slot2"),
					
					(try_begin),
						(eq, ":bot_type", ":bot_type2"),
						(val_add, ":cur_slot2", 1),
						(troop_get_slot, ":bot_count2", "trp_multiplayer_data", ":cur_slot2"),
						(val_add, ":bot_count", ":bot_count2"),
					(try_end),
				(try_end),
						
				
				# count alive troops
				(assign, ":alive_enemy_count", 0),
				(try_for_agents, ":cur_agent"),
					(try_begin),
						(agent_is_human, ":cur_agent"),
						(agent_is_alive, ":cur_agent"),
						(agent_get_team, ":cur_agent_team", ":cur_agent"),
						(eq, ":cur_agent_team", 1),
						(agent_get_troop_id, ":cur_agent_troop_id", ":cur_agent"),
						(eq, ":cur_agent_troop_id", ":bot_type"),
						(val_add, ":alive_enemy_count", 1),
					(try_end),
				(try_end),
										
				(try_begin),
					(this_or_next|gt, ":bot_count", 0),
					(gt, ":alive_enemy_count", 0),
					
					(try_begin),
						(eq, ":enemies_caption_printed", 0),					
						(assign, ":enemies_caption_printed", 1),
						
						(assign, reg1, ":total_alive_enemy_count"),
						(assign, reg2, ":total_arriving_enemy_count"),
						(create_text_overlay, reg0, "str_enemies_reg1_total_reg2_arriving", 0),
						(overlay_set_color, reg0, ":font_color"),
						(position_set_x, pos1, ":cur_x"),
						(position_set_y, pos1, ":cur_y"),
						(overlay_set_position, reg0, pos1),
						(position_set_x, pos1, 750),
						(position_set_y, pos1, 750),
						(overlay_set_size, reg0, pos1),
						(val_sub, ":cur_y", 20),
					(try_end),
									
					(try_begin),
                      (this_or_next|eq, ":alive_enemy_count", 1),
                      (this_or_next|is_between, ":bot_type", lords_begin, lords_end),
                      (is_between, ":bot_type", kings_begin, kings_end),
                      #(is_between, ":bot_type", quick_battle_troops_begin, quick_battle_troops_end),
					  (str_store_troop_name, s0, ":bot_type"),							
					(else_try),
					  (str_store_troop_name_plural, s0, ":bot_type"),							
					(try_end),
					(assign, reg3, ":bot_count"),
					(assign, reg4, ":alive_enemy_count"),
					(create_text_overlay, reg0, "str_ccoop_enemy_info", 0),
					(overlay_set_color, reg0, ":font_color"),
					(position_set_x, pos1, ":cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(val_sub, ":cur_y", 18),
				(try_end),
			(try_end),
		(try_end),

		
		(assign, ":cur_x", 42),
		
		#white line between playing players and spectators
		(create_mesh_overlay, reg0, "mesh_white_plane"),
		(overlay_set_color, reg0, 0xFFFFFF),
		(overlay_set_alpha, reg0, 0xD0),
		(store_add, ":sub_cur_x", ":cur_x", 0),
		(position_set_x, pos1, ":sub_cur_x"),
		(store_add, ":sub_cur_y", ":cur_y", 10),
		(position_set_y, pos1, ":sub_cur_y"),
		(overlay_set_position, reg0, pos1),
		(position_set_x, pos1, 15250),
		(position_set_y, pos1, 50),
		(overlay_set_size, reg0, pos1), 	
	  (try_end),
	  
	  (val_sub, ":cur_y", 13),
      #INVASION MODE END
      (create_text_overlay, reg0, "str_player_name", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, ":cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_kills", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 179), #164
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_deaths", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 233), #205
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_ping", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 282), #264
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", -10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 15250),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),

      (val_sub, ":cur_y", 35),
      
      (store_add, ":end_cond", ":num_players", 1),
      (try_for_range, ":unused", 0, ":end_cond"),
        (assign, ":max_score_plus_death", -30030),
        (assign, ":max_kills_player_no", -1),
        (try_for_range, ":player_no", 0, ":num_players"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (this_or_next|eq, ":player_team", 0),
          (eq, ":player_team", 1),

          (player_get_kill_count, ":kill_count", ":player_no"),
          (player_get_death_count, ":death_count", ":player_no"), #get_death_count
          (store_mul, ":player_score_plus_death", ":kill_count", 1000),
          (val_sub, ":player_score_plus_death", ":death_count"),
      
          (this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
          (eq, ":player_score_plus_death", -30030),
      
          (assign, ":max_score_plus_death", ":player_score_plus_death"),
          (assign, ":max_kills_player_no", ":player_no"),
        (try_end),
        (try_begin),
          (ge, ":max_kills_player_no", 0),
          (store_add, ":slot_index", ":max_kills_player_no", multi_data_player_index_list_begin),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
          (str_store_player_username, s1, ":max_kills_player_no"),
      
          (try_begin),
            (eq, ":my_player_no", ":max_kills_player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 16000),
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          #INVASION MODE START
          (assign, ":font_color", 0xFFFFFF),
		  (try_begin),
			(eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
			
			(player_get_agent_id, ":max_score_plus_death_agent_id", ":max_kills_player_no"),
			(this_or_next|lt, ":max_score_plus_death_agent_id", 0),
			(neg|agent_is_alive, ":max_score_plus_death_agent_id"),
			(assign, ":font_color", 0xFF0000),
			(create_text_overlay, reg0, "str_dead", 0),
			(overlay_set_color, reg0, ":font_color"),
			(position_set_x, pos1, 750),
			(position_set_y, pos1, 750),
			(overlay_set_size, reg0, pos1),
			(store_add, ":sub_cur_x", ":cur_x", 130),
			(position_set_x, pos1, ":sub_cur_x"),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
		  (try_end),
		  (try_begin),
			(eq, "$g_multiplayer_game_type", multiplayer_game_type_captain_coop),
			(create_text_overlay, reg0, "str_s1_team", 0),
		  (else_try),
		    (create_text_overlay, reg0, s1, 0),
		  (try_end),
		  (overlay_set_color, reg0, ":font_color"),
          #INVASION MODE END

          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_kill_count, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),      
          (store_add, ":sub_cur_x", ":cur_x", 188), #173
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_death_count, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),      
          (store_add, ":sub_cur_x", ":cur_x", 238), #223
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_ping, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 288), #273
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
        (else_try),
          (store_add, ":number_of_bots", "$g_multiplayer_num_bots_team_1", "$g_multiplayer_num_bots_team_2"),
          (ge, ":number_of_bots", 1),

          (try_begin),
            (gt, ":number_of_bots", 1),
            (assign, reg0, ":number_of_bots"),
            (create_text_overlay, reg0, "str_bots_reg0_agents", 0),
          (else_try),
            (create_text_overlay, reg0, "str_bot_1_agent", 0),
          (try_end),
      
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (team_get_bot_kill_count, reg0, 0),
          (assign, ":bot_kill_count", reg0),
          (team_get_bot_kill_count, reg0, 1),
          (val_add, ":bot_kill_count", reg0),
          (assign, reg0, ":bot_kill_count"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 188), #173
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (team_get_bot_death_count, reg0, 0),
          (assign, ":bot_death_count", reg0),
          (team_get_bot_death_count, reg0, 1),
          (val_add, ":bot_death_count", reg0),
          (assign, reg0, ":bot_death_count"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 238), #223
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),

          (assign, ":end_cond", 0), #all players are written, break
        (else_try),
          (assign, ":end_cond", 0), #all players are written, break
        (try_end),
      (try_end),

      (assign, ":cur_x", 42),

      #white line between playing players and spectators
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", 10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 15250),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1), 

      (try_begin),
        (gt, ":spectator_rows", 0),

        (assign, ":cur_x", 75),
        (val_sub, ":cur_y", 50),

        #"spectators" text
        (create_text_overlay, reg0, "str_spectators", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_ping", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 218), #200
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        #white line for spectators list
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1), 

        (val_sub, ":cur_y", 30),

        (assign, ":font_color", 0xC0C0C0),

        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":player_no", 0, ":end_cond"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

          (player_get_team_no, ":player_team", ":player_no"),
          (eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

          (try_begin),
            (eq, ":my_player_no", ":player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 12000), #16500
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (str_store_player_username, s1, ":player_no"),
          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          
          (player_get_ping, reg0, ":player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 215), #200
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),      
        (try_end),
      (try_end),

      (omit_key_once, key_mouse_scroll_up),
      (omit_key_once, key_mouse_scroll_down),
      
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_mouse_scroll_up),
        (key_clicked, key_mouse_scroll_down),
        (omit_key_once, key_mouse_scroll_up),
        (omit_key_once, key_mouse_scroll_down),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_stats_chart_opened_manually", 1),
        (neg|game_key_is_down, gk_leave),
        (assign, "$g_multiplayer_stats_chart_opened_manually", 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (try_begin),
        (store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
        (gt, ":cur_time", ":update_period_time_limit"),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_stats_chart_deathmatch"),
      (try_end),
      ]),
    ]),

  ("multiplayer_escape_menu", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_escape_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 75),
      (overlay_set_position, "$g_presentation_obj_escape_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 550),
      (overlay_set_area_size, "$g_presentation_obj_escape_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_escape_menu_container"),

      (assign, ":cur_y", 500),

      (create_text_overlay, reg0, "str_choose_an_option", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (create_button_overlay, "$g_presentation_obj_escape_menu_1", "str_choose_faction", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_1", 0xFFFFFF),
      (multiplayer_get_my_team, ":my_team"),
      (assign, "$g_presentation_obj_escape_menu_2", -1),
      (assign, "$g_presentation_obj_escape_menu_3", -1),
      (assign, "$g_presentation_obj_escape_menu_6", -1),
      (assign, "$g_presentation_obj_escape_menu_7", -1),
      (assign, "$g_presentation_obj_escape_menu_8", -1),
      (assign, "$g_presentation_obj_escape_menu_9", -1),
      (assign, "$g_presentation_obj_escape_menu_10", -1),
      (assign, "$g_presentation_obj_escape_menu_11", -1),
      (assign, "$g_presentation_obj_escape_menu_12", -1),
      (assign, "$g_presentation_obj_escape_menu_13", -1),
      (try_begin),
        (lt, ":my_team", multi_team_spectator),
        (create_button_overlay, "$g_presentation_obj_escape_menu_2", "str_choose_troop", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_2", 0xFFFFFF),
        (multiplayer_get_my_troop, ":my_troop"),
        (try_begin),
          (ge, ":my_troop", 0),
          (create_button_overlay, "$g_presentation_obj_escape_menu_3", "str_choose_items", 0),
          (overlay_set_color, "$g_presentation_obj_escape_menu_3", 0xFFFFFF),
        (try_end),
      (try_end),
      (create_button_overlay, "$g_presentation_obj_escape_menu_4", "str_options", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_4", 0xFFFFFF),
      (create_button_overlay, "$g_presentation_obj_escape_menu_5", "str_redefine_keys", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_5", 0xFFFFFF),

      (create_button_overlay, "$g_presentation_obj_escape_menu_13", "@Show game rules", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_13", 0xFFFFFF),

      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (this_or_next|eq, "$g_multiplayer_maps_voteable", 1),
        (this_or_next|eq, "$g_multiplayer_factions_voteable", 1),
        (this_or_next|gt, "$g_multiplayer_num_bots_voteable", 0),
        (this_or_next|eq, "$g_multiplayer_kick_voteable", 1),
        (eq, "$g_multiplayer_ban_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_escape_menu_6", "str_submit_a_poll", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_6", 0xFFFFFF),
        (assign, "$g_presentation_obj_escape_menu_6_available", 1),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_slot, ":last_poll_time", ":my_player_no", slot_player_poll_disabled_until_time),
          (store_mission_timer_a, ":mission_timer"),
          (lt, ":mission_timer", ":last_poll_time"),
          (overlay_set_color, "$g_presentation_obj_escape_menu_6", 0x888888),
          (overlay_set_hilight_color, "$g_presentation_obj_escape_menu_6", 0x888888),
          (assign, "$g_presentation_obj_escape_menu_6_available", 0),
        (try_end),
      (try_end),

      (try_begin),
        (ge, ":my_player_no", 0),
        (player_is_admin, ":my_player_no"),
        (create_button_overlay, "$g_presentation_obj_escape_menu_7", "str_administrator_panel", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_7", 0xFFFFFF),
        (create_button_overlay, "$g_presentation_obj_escape_menu_8", "str_kick_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_8", 0xFFFFFF),
        (create_button_overlay, "$g_presentation_obj_escape_menu_9", "str_ban_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_9", 0xFFFFFF),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_escape_menu_11", "str_mute_player", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_11", 0xFFFFFF),

      (try_begin),
        (assign, "$g_presentation_obj_escape_menu_12", -1),
        (assign, ":any_muted", 0),
        (get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":any_muted", 1),
        (try_end),
        (eq, ":any_muted", 1),
        (create_button_overlay, "$g_presentation_obj_escape_menu_12", "str_unmute_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_12", 0xFFFFFF),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_escape_menu_10", "str_quit", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_10", 0xFFFFFF),

      (position_set_x, pos1, 130),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_1", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_2", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_2", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_3", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_3", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_4", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_5", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_13", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_6", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_6", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_7", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_7", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_8", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_8", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_9", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_9", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_11", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_12", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_12", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_10", pos1),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_escape_menu_1"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_2"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_troop_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_3"),
        (presentation_set_duration, 0),
        (assign, "$g_presentation_state", 0),
        (start_presentation, "prsnt_multiplayer_item_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_4"),
        (presentation_set_duration, 0),
        (change_screen_options),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_5"),
        (presentation_set_duration, 0),
        (change_screen_controls),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_6"),
        (eq, "$g_presentation_obj_escape_menu_6_available", 1),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_poll_menu"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_7"),
        (presentation_set_duration, 0),
        (multiplayer_send_message_to_server, multiplayer_event_open_admin_panel),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_8"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 3), #admin kick
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_9"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 4), #admin ban
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_10"),
        (presentation_set_duration, 0),
        (finish_mission, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_11"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 5), #mute player
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_12"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 6), #unmute player
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_13"),
        (presentation_set_duration, 0),
        (multiplayer_send_message_to_server, multiplayer_event_open_game_rules),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_poll_menu", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_poll_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_poll_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_poll_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_poll_menu_container"),

      (assign, "$g_presentation_obj_poll_menu_1", -1),
      (assign, "$g_presentation_obj_poll_menu_4", -1),
      (assign, "$g_presentation_obj_poll_menu_5", -1),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_poll_type", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (position_set_x, pos1, 60),

      (try_begin),
        (eq, "$g_multiplayer_maps_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_1", "str_poll_for_changing_the_map", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_1", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_1", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_factions_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_4", "str_poll_for_changing_the_map_and_factions", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_4", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_4", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_voteable", 0),
        (create_button_overlay, "$g_presentation_obj_poll_menu_5", "str_poll_for_changing_number_of_bots", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_5", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_5", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_kick_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_2", "str_poll_for_kicking_a_player", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_2", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_2", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_ban_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_3", "str_poll_for_banning_a_player", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_3", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_3", pos1),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_poll_menu_1"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_maps_list_action_type", 1), #poll map
        (start_presentation, "prsnt_multiplayer_show_maps_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_2"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 1), #poll kick
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_3"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 2), #poll ban
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_4"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_maps_list_action_type", 2), #poll map and factions
        (start_presentation, "prsnt_multiplayer_show_maps_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_5"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_number_of_bots_list_action_type", 1), #for team 1
        (start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_players_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_players_1", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_players_1", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_players_1", pos1),
      (set_container_overlay, "$g_presentation_obj_show_players_1"),

      #(assign, ":cur_y", 450),
      (multiplayer_get_my_player, ":my_player_no"),

      (assign, ":cur_y", 10),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),

        (assign, ":continue", 0),
        (try_begin),
          (neq, "$g_multiplayer_players_list_action_type", 5),
          (neq, "$g_multiplayer_players_list_action_type", 6),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 0),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":continue", 1),
        (try_end),
        (eq, ":continue", 1),
      
        (val_add, ":cur_y", escape_menu_item_height),
      (try_end),

      (create_text_overlay, reg0, "str_choose_a_player", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),
        (player_set_slot, ":player_no", slot_player_button_index, -1),

        (assign, ":continue", 0),
        (try_begin),
          (neq, "$g_multiplayer_players_list_action_type", 5),
          (neq, "$g_multiplayer_players_list_action_type", 6),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 0),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":continue", 1),
        (try_end),
        (eq, ":continue", 1),
        (str_store_player_username, s0, ":player_no"),
      
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 130),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
        (player_set_slot, ":player_no", slot_player_button_index, ":overlay_id"),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),
        (player_slot_eq, ":player_no", slot_player_button_index, ":object"),
        (try_begin),
          (is_between, "$g_multiplayer_players_list_action_type", 1, 3), #poll kick or poll ban
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, "$g_multiplayer_players_list_action_type", ":player_no"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 3), #admin kick
          (multiplayer_send_int_to_server, multiplayer_event_admin_kick_player, ":player_no"),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 4), #admin ban
          (multiplayer_send_int_to_server, multiplayer_event_admin_ban_player, ":player_no"),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5), #mute player
          (player_set_is_muted, ":player_no", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6), #unmute player
          (player_set_is_muted, ":player_no", 0),
        (try_end),
        (assign, ":num_players", 0), #break
        (presentation_set_duration, 0),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_maps_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_maps_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_maps_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_maps_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_maps_list_menu_container"),

      (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
      (assign, ":num_maps", reg0),
      (store_mul, ":cur_y", ":num_maps", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (create_text_overlay, reg0, "str_choose_a_map", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_map", 0, ":num_maps"),
        (store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
        (store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
      
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_maps_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index", ":num_maps"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
        (store_sub, ":map_slot", ":object", "$g_show_maps_list_button_list_first_index"),
        (val_add, ":map_slot", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":scene_id", "trp_multiplayer_data", ":map_slot"),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_maps_list_action_type", 1), #vote for map
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, 0, ":scene_id"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for map and factions
          (assign, "$g_multiplayer_factions_list_action_type", 1), #for team 1
          (assign, "$g_multiplayer_poll_for_map_and_faction_data_map", ":scene_id"),
          (start_presentation, "prsnt_multiplayer_show_factions_list"),
        (try_end),
        (assign, "$g_show_maps_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_factions_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_factions_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_factions_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_factions_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_factions_list_menu_container"),

      (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
      (try_begin),
        (eq, "$g_multiplayer_factions_list_action_type", 2),
        (val_sub, ":num_factions", 1),
      (try_end),
      (store_mul, ":cur_y", ":num_factions", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (assign, reg0, "$g_multiplayer_factions_list_action_type"),
      (create_text_overlay, reg0, "str_choose_a_faction_for_team_reg0", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_faction", npc_kingdoms_begin, npc_kingdoms_end),
        (this_or_next|eq, "$g_multiplayer_factions_list_action_type", 1),
        (neq, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":i_faction"),
        (str_store_faction_name, s0, ":i_faction"),
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_factions_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index", ":num_factions"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (store_sub, ":faction_no", ":object", "$g_show_factions_list_button_list_first_index"),
        (val_add, ":faction_no", npc_kingdoms_begin),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_factions_list_action_type", 2), #vote for second team
          (try_begin),
            (ge, ":faction_no", "$g_multiplayer_poll_for_map_and_faction_data_faction_1"),
            (val_add, ":faction_no", 1),
          (try_end),
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_4_int_to_server, multiplayer_event_start_new_poll, 3, "$g_multiplayer_poll_for_map_and_faction_data_map", "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for first team
          (assign, "$g_multiplayer_factions_list_action_type", 2), #for team 2
          (assign, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
          (start_presentation, "prsnt_multiplayer_show_factions_list"),
        (try_end),
        (assign, "$g_show_factions_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_number_of_bots_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container"),

      (assign, ":num_options", 0),
      (store_add, ":end_cond", "$g_multiplayer_num_bots_voteable", 1),
      (try_for_range, ":i_number", 0, ":end_cond"),
        (assign, ":i_number_mod_5", ":i_number"),
        (val_mod, ":i_number_mod_5", 5),
        (this_or_next|lt, ":i_number", 10),
        (eq, ":i_number_mod_5", 0),
        (val_add, ":num_options", 1),
      (try_end),

      (store_mul, ":cur_y", ":num_options", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (assign, reg0, "$g_multiplayer_number_of_bots_list_action_type"),
      (create_text_overlay, reg0, "str_choose_number_of_bots_for_team_reg0", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_number", 0, ":end_cond"),
        (assign, ":i_number_mod_5", ":i_number"),
        (val_mod, ":i_number_mod_5", 5),
        (this_or_next|lt, ":i_number", 10),
        (eq, ":i_number_mod_5", 0),
        (assign, reg0, ":i_number"),
        (str_store_string, s0, "str_reg0"),
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_number_of_bots_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index", ":num_options"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (store_sub, ":value_index", ":object", "$g_show_number_of_bots_list_button_list_first_index"),
        (try_begin),
          (lt, ":value_index", 10),
          (assign, ":used_value", ":value_index"),
        (else_try),
          (store_sub, ":used_value", ":value_index", 8),
          (val_mul, ":used_value", 5),
        (try_end),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_number_of_bots_list_action_type", 2), #vote for second team
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_3_int_to_server, multiplayer_event_start_new_poll, 4, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for first team
          (assign, "$g_multiplayer_number_of_bots_list_action_type", 2), #for team 2
          (assign, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
          (start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
        (try_end),
        (assign, "$g_show_number_of_bots_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_poll", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0x000000),
      (overlay_set_alpha, reg0, 0x44),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 37500),
      (position_set_y, pos1, 4500),
      (overlay_set_size, reg0, pos1),

      (try_begin),
        (eq, "$g_multiplayer_poll_to_show", 0),
        (store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (create_text_overlay, reg0, "str_poll_change_map", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 1),
        (str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
        (create_text_overlay, reg0, "str_poll_kick_player", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 2),
        (str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
        (create_text_overlay, reg0, "str_poll_ban_player", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 3),
        (store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (str_store_faction_name, s1, "$g_multiplayer_poll_value_2_to_show"),
        (str_store_faction_name, s2, "$g_multiplayer_poll_value_3_to_show"),
        (create_text_overlay, reg0, "str_poll_change_map_with_faction", tf_center_justify|tf_scrollable_style_2),
      (else_try),
        (assign, reg0, "$g_multiplayer_poll_value_to_show"),
        (assign, reg1, "$g_multiplayer_poll_value_2_to_show"),
        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
        (str_store_faction_name, s1, "$g_multiplayer_team_2_faction"),
        (create_text_overlay, reg0, "str_poll_change_number_of_bots", tf_center_justify|tf_scrollable_style_2),
      (try_end),
      (overlay_set_color, reg0, 0xFFFFFF),
      (try_begin),
        (neq, "$g_multiplayer_poll_to_show", 3),
        (neq, "$g_multiplayer_poll_to_show", 4),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 60),
        (overlay_set_area_size, reg0, pos1),
      (try_end),

      (store_mission_timer_a, ":mission_timer"),
      (store_sub, "$g_multiplayer_poll_last_written_seconds_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
      (assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),

      (create_text_overlay, "$g_presentation_obj_poll_1", "str_poll_time_left", tf_right_align|tf_single_line),
      (overlay_set_color, "$g_presentation_obj_poll_1", 0xFFFFFF),
      (position_set_x, pos1, 790),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_poll_1", pos1),

      (omit_key_once, key_1),
      (omit_key_once, key_2),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(this_or_next|key_clicked, key_xbox_start),
        (key_clicked, key_2),
        (gt, ":cur_time", 500),
        (multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (else_try),
        (key_clicked, key_1),
        (gt, ":cur_time", 500),
        (multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 1),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (store_mission_timer_a, ":mission_timer"),
      (store_sub, ":time_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
      (try_begin),
        (neq, ":time_left", "$g_multiplayer_poll_last_written_seconds_left"),
        (try_begin),
          (lt, ":time_left", 0),
          (clear_omitted_keys),
          (presentation_set_duration, 0),
        (else_try),
          (assign, "$g_multiplayer_poll_last_written_seconds_left", ":time_left"),
          (assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),
          (overlay_set_text, "$g_presentation_obj_poll_1", "str_poll_time_left"),
        (try_end),
      (try_end),
      ]),
    ]),

  ("tutorial_show_mouse_movement",prsntf_read_only|prsntf_manual_end_only,0,[
      (ti_on_presentation_load,
       [
         (try_begin),
           (this_or_next|eq, "$g_tutorial_mouse_dir", -1),
           (eq, "$g_tutorial_mouse_click", -1),
           (presentation_set_duration, 0),
         (else_try),
           (set_fixed_point_multiplier, 1000),
           (assign, "$g_tutorial_displayed_mouse_dir", "$g_tutorial_mouse_dir"),
           (assign, "$g_tutorial_displayed_mouse_click", "$g_tutorial_mouse_click"),
           (store_add, ":arrow_mesh", "$g_tutorial_mouse_dir", "mesh_mouse_arrow_down"),
           (create_mesh_overlay, reg0, ":arrow_mesh"),
           (position_set_x, pos1, 800),
           (position_set_y, pos1, 800),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 380),
           (position_set_y, pos1, 500),
           (overlay_set_position, reg0, pos1),
           (try_begin),
             (eq, "$g_tutorial_mouse_click", 0),
             (create_mesh_overlay, reg0, "mesh_mouse_left_click"),
           (else_try),
             (create_mesh_overlay, reg0, "mesh_mouse_right_click"),
           (try_end),
           (position_set_x, pos1, 800),
           (position_set_y, pos1, 800),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 540),
           (position_set_y, pos1, 500),
           (overlay_set_position, reg0, pos1),
           (create_mesh_overlay, reg0, "mesh_mouse_arrow_plus"),
           (overlay_set_color, reg0, 0xFFFFFF),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 470),
           (position_set_y, pos1, 510),
           (overlay_set_position, reg0, pos1),
           (presentation_set_duration, 999999),
         (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|neq, "$g_tutorial_displayed_mouse_dir", "$g_tutorial_mouse_dir"),
          (neq, "$g_tutorial_displayed_mouse_click", "$g_tutorial_mouse_click"),
          (presentation_set_duration, 0),
          (try_begin),
            (ge, "$g_tutorial_mouse_dir", 0),
            (ge, "$g_tutorial_mouse_click", 0),
            (start_presentation, "prsnt_tutorial_show_mouse_movement"),
          (try_end),
        (try_end),
        ]),
      ]),

  ("name_kingdom",0,mesh_load_window2,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
	   
        (create_text_overlay, "$g_presentation_obj_name_kingdom_0", "@Choose name for your faction:", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_0", pos1),
        (create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"),
        (position_set_x, pos1, 410),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
        (try_begin),
          (eq, "$players_kingdom_name_set", 1),
          (str_store_faction_name, s7, "fac_player_supporters_faction"),
          (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s7),
        (else_try),
          (str_store_troop_name, s0, "trp_player"),
          (overlay_set_text, "$g_presentation_obj_name_kingdom_1", "str_default_kingdom_name"),
          (str_store_string, s7, "str_default_kingdom_name"),
        (try_end),
				
        (create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@Continue...", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
	   
	(try_begin),
		(eq, ":object", "$g_presentation_obj_name_kingdom_1"),
		(str_store_string, s7, s0),
	(else_try),
		(eq, ":object", "$g_presentation_obj_name_kingdom_2"),
		(faction_set_name, "fac_player_supporters_faction", s7),
		(assign, "$players_kingdom_name_set", 1),
		(try_begin),
			(le, "$player_faction_preset", 0),
			(call_script, "script_player_faction_troops"),
		(try_end),
		(presentation_set_duration, 0),
	(try_end),
        ]),
		
		
    (ti_on_presentation_run,
     [
      (set_fixed_point_multiplier, 1000),
	 
		#(call_script, "script_presentation_run"),	
	 
	  ]),

      ]),

("custom_faction_settings",0,mesh_load_window2,[
(ti_on_presentation_load, [
(set_fixed_point_multiplier, 1000),
(create_simple_text_box_overlay, "$overlay_textbox_name"),
(position_set_x, pos1, 400), (position_set_y, pos1, 690), (overlay_set_position, "$overlay_textbox_name", pos1),
(create_mesh_overlay, "$overlay_mesh_faction_flag", "mesh_menu_flag1"),
(position_set_x, pos1, 400), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_mesh_faction_flag", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 650), (overlay_set_position, "$overlay_mesh_faction_flag", pos1),
(faction_get_slot, ":material_string", "fac_player_supporters_faction", slot_faction_flag_material), (str_store_string, s1, ":material_string"), (overlay_set_material, "$overlay_mesh_faction_flag", s1),
	(try_begin),
	(eq, "$players_kingdom_name_set", 1),
	(str_store_faction_name, s10, "fac_player_supporters_faction"),
	(overlay_set_text, "$overlay_textbox_name", s10),
	(else_try),
	(str_store_troop_name, s0, "trp_player"),
	(overlay_set_text, "$overlay_textbox_name", "str_default_kingdom_name"),
	(str_store_string, s10, "str_default_kingdom_name"),
	(try_end),
(create_text_overlay, "$overlay_text_faction_color", "@Faction color:", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_faction_color", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 590), (overlay_set_position, "$overlay_text_faction_color", pos1),
(create_combo_label_overlay, "$overlay_combolabel_faction_color"),
(position_set_x, pos1, 200), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_combolabel_faction_color", pos1),
(position_set_x, pos1, 670), (position_set_y, pos1, 577), (overlay_set_position, "$overlay_combolabel_faction_color", pos1),
	(try_for_range, ":unused", 0, 16),
	(overlay_add_item, "$overlay_combolabel_faction_color", "@ "),
	(try_end),
(overlay_set_val, "$overlay_combolabel_faction_color", "$custom_faction_color_number"),
(call_script, "script_custom_faction_settings_get_color_from_number"),
(create_text_overlay, "$overlay_text_faction_color_cirle", "@®", tf_center_justify),
(position_set_x, pos1, 535), (position_set_y, pos1, 585), (overlay_set_position, "$overlay_text_faction_color_cirle", pos1),
(overlay_set_color, "$overlay_text_faction_color_cirle", reg1),
(create_text_overlay, "$overlay_text_party_name", "@Your political party:", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_party_name", pos1),
(position_set_x, pos1, 150), (position_set_y, pos1, 540), (overlay_set_position, "$overlay_text_party_name", pos1),
(create_simple_text_box_overlay, "$overlay_textbox_party_name"),
(position_set_x, pos1, 120), (position_set_y, pos1, 500), (overlay_set_position, "$overlay_textbox_party_name", pos1),
(str_store_faction_name, s10, "fac_culture_33"), (overlay_set_text, "$overlay_textbox_party_name", s10),
(create_combo_label_overlay, "$overlay_combolabel_party_color"),
(position_set_x, pos1, 200), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_combolabel_party_color", pos1),
(position_set_x, pos1, 190), (position_set_y, pos1, 493), (overlay_set_position, "$overlay_combolabel_party_color", pos1),
	(try_for_range, ":unused", 0, 16),
	(overlay_add_item, "$overlay_combolabel_party_color", "@ "),
	(try_end),
(create_image_button_overlay, "$overlay_mesh_faction_color", "mesh_pps_party1", "mesh_pps_party1"),
(position_set_x, pos1, 54), (position_set_y, pos1, 513), (overlay_set_position, "$overlay_mesh_faction_color", pos1),
(faction_get_slot, ":string", "fac_player_supporters_faction", slot_faction_political_party3_color_material_string),
(str_store_string, s1, ":string"), (overlay_set_material, "$overlay_mesh_faction_color", s1),
(val_sub, ":string", "str_party_color1"), (overlay_set_val, "$overlay_combolabel_party_color", ":string"),
(create_combo_label_overlay, "$overlay_combolabel_goverment_type"),
(position_set_x, pos1, 1100), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_combolabel_goverment_type", pos1),
(position_set_x, pos1, 550), (position_set_y, pos1, 500), (overlay_set_position, "$overlay_combolabel_goverment_type", pos1),
	(try_for_range, ":government_type", government_type_absolute_monarchy, government_type_soviet_republic+1),
	(call_script, "script_pps_get_government_name", ":government_type", s1),
	(overlay_add_item, "$overlay_combolabel_goverment_type", "@{s1}"),
	(try_end),
(create_text_overlay, "$overlay_text_laws", "@Your party laws:", tf_center_justify),
(position_set_x, pos1, 950), (position_set_y, pos1, 950), (overlay_set_size, "$overlay_text_laws", pos1),
(position_set_x, pos1, 600), (position_set_y, pos1, 450), (overlay_set_position, "$overlay_text_laws", pos1),
(create_text_overlay, "$overlay_text_law_voting_franchise", "@Voting Franchise:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_voting_franchise", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_law_voting_franchise", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_voting_franchise"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_voting_franchise", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 390), (overlay_set_position, "$overlay_combolabel_law_voting_franchise", pos1),
(overlay_add_item, "$overlay_combolabel_law_voting_franchise", "@Aristocracy Only"),
(overlay_add_item, "$overlay_combolabel_law_voting_franchise", "@Upper Class Only"),
(overlay_add_item, "$overlay_combolabel_law_voting_franchise", "@Upper and Middle Class Only"),
(overlay_add_item, "$overlay_combolabel_law_voting_franchise", "@Universal Weighted"),
(overlay_add_item, "$overlay_combolabel_law_voting_franchise", "@Universal"),
(create_text_overlay, "$overlay_text_law_nomination_rules", "@Nomination Rules:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_nomination_rules", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 360), (overlay_set_position, "$overlay_text_law_nomination_rules", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_nomination_rules"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_nomination_rules", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 330), (overlay_set_position, "$overlay_combolabel_law_nomination_rules", pos1),
(overlay_add_item, "$overlay_combolabel_law_nomination_rules", "@Upper Class Only"),
(overlay_add_item, "$overlay_combolabel_law_nomination_rules", "@Universal"),
(create_text_overlay, "$overlay_text_law_voting_openness", "@Ruling Party Influence:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_voting_openness", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 300), (overlay_set_position, "$overlay_text_law_voting_openness", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_voting_openness"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_voting_openness", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 270), (overlay_set_position, "$overlay_combolabel_law_voting_openness", pos1),
(overlay_add_item, "$overlay_combolabel_law_voting_openness", "@Harassment"),
(overlay_add_item, "$overlay_combolabel_law_voting_openness", "@Non-secret ballot"),
(overlay_add_item, "$overlay_combolabel_law_voting_openness", "@Secret ballot"),
(create_text_overlay, "$overlay_text_law_press", "@Press Censorship:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_press", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 240), (overlay_set_position, "$overlay_text_law_press", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_press"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_press", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 210), (overlay_set_position, "$overlay_combolabel_law_press", pos1),
(overlay_add_item, "$overlay_combolabel_law_press", "@State Press"),
(overlay_add_item, "$overlay_combolabel_law_press", "@Heavy Censorship"),
(overlay_add_item, "$overlay_combolabel_law_press", "@Light Censorship"),
(overlay_add_item, "$overlay_combolabel_law_press", "@Free Press"),
(create_text_overlay, "$overlay_text_law_executive_branch", "@Executive Branch Posts:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_executive_branch", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 180), (overlay_set_position, "$overlay_text_law_executive_branch", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_executive_branch"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_executive_branch", pos1),
(position_set_x, pos1, 450), (position_set_y, pos1, 150), (overlay_set_position, "$overlay_combolabel_law_executive_branch", pos1),
(overlay_add_item, "$overlay_combolabel_law_executive_branch", "@Appointed by state"),
(overlay_add_item, "$overlay_combolabel_law_executive_branch", "@Partially Elected"),
(overlay_add_item, "$overlay_combolabel_law_executive_branch", "@Mostly Elected"),
(create_text_overlay, "$overlay_text_law_workers_conditions", "@Maximum Work Hours", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_workers_conditions", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_law_workers_conditions", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_workers_conditions"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_workers_conditions", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 390), (overlay_set_position, "$overlay_combolabel_law_workers_conditions", pos1),
(overlay_add_item, "$overlay_combolabel_law_workers_conditions", "@Unlimited"),
(overlay_add_item, "$overlay_combolabel_law_workers_conditions", "@12 hours a day"),
(overlay_add_item, "$overlay_combolabel_law_workers_conditions", "@10 hours a day"),
(overlay_add_item, "$overlay_combolabel_law_workers_conditions", "@8 hours a day"),
(create_text_overlay, "$overlay_text_law_workers_wage", "@Minimum Wage", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_workers_wage", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 360), (overlay_set_position, "$overlay_text_law_workers_wage", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_workers_wage"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_workers_wage", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 330), (overlay_set_position, "$overlay_combolabel_law_workers_wage", pos1),
(overlay_add_item, "$overlay_combolabel_law_workers_wage", "@No Minimum"),
(overlay_add_item, "$overlay_combolabel_law_workers_wage", "@Low Minimum"),
(overlay_add_item, "$overlay_combolabel_law_workers_wage", "@Acceptable Minimum"),
(overlay_add_item, "$overlay_combolabel_law_workers_wage", "@Good Minimum"),
(create_text_overlay, "$overlay_text_law_trade_unions", "@Trade Unions:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_trade_unions", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 300), (overlay_set_position, "$overlay_text_law_trade_unions", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_trade_unions"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_trade_unions", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 270), (overlay_set_position, "$overlay_combolabel_law_trade_unions", pos1),
(overlay_add_item, "$overlay_combolabel_law_trade_unions", "@Banned"),
(overlay_add_item, "$overlay_combolabel_law_trade_unions", "@Allowed"),
(create_text_overlay, "$overlay_text_law_public_meetings", "@Public Meetings:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_public_meetings", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 240), (overlay_set_position, "$overlay_text_law_public_meetings", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_public_meetings"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_public_meetings", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 210), (overlay_set_position, "$overlay_combolabel_law_public_meetings", pos1),
(overlay_add_item, "$overlay_combolabel_law_public_meetings", "@Banned"),
(overlay_add_item, "$overlay_combolabel_law_public_meetings", "@Authorized Only"),
(overlay_add_item, "$overlay_combolabel_law_public_meetings", "@Allowed"),
(create_text_overlay, "$overlay_text_law_child_labour", "@Child Labour:", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_law_child_labour", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 180), (overlay_set_position, "$overlay_text_law_child_labour", pos1),
(create_combo_label_overlay, "$overlay_combolabel_law_child_labour"),
(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_combolabel_law_child_labour", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 150), (overlay_set_position, "$overlay_combolabel_law_child_labour", pos1),
(overlay_add_item, "$overlay_combolabel_law_child_labour", "@Allowed"),
(overlay_add_item, "$overlay_combolabel_law_child_labour", "@Restrictions"),
(overlay_add_item, "$overlay_combolabel_law_child_labour", "@Outlawed"),

	(try_begin),
	(eq, "$players_kingdom_name_set", 1),
	(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_combolabel_goverment_type", pos1),
	(try_end),

(create_game_button_overlay, "$overlay_button_done", "@Done", tf_center_justify),
(position_set_x, pos1, 500), (position_set_y, pos1, 50), (overlay_set_position, "$overlay_button_done", pos1),


(presentation_set_duration, 999999),
]),

(ti_on_presentation_event_state_change, [
(store_trigger_param_1, ":object"),
(store_trigger_param_2, ":value"),
	(try_begin),
	(eq, ":object", "$overlay_combolabel_law_trade_unions"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_trade_unions, law_trade_unions_not_allowed),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_trade_unions, law_trade_unions_allowed),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_public_meetings"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_public_meetings, law_public_meetings_not_allowed),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_public_meetings, law_public_meetings_sanctioned_only),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_public_meetings, law_public_meetings_allowed),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_child_labour"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_child_labour, law_child_labour_allowed),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_child_labour, law_child_labour_restrictions),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_child_labour, law_child_labour_outlawed),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_workers_conditions"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_conditions, law_workers_conditions_very_bad),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_conditions, law_workers_conditions_bad),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_conditions, law_workers_conditions_medium),
		(else_try),
		(eq, ":value", 3),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_conditions, law_workers_conditions_good),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_workers_wage"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_wage, law_workers_wage_very_small),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_wage, law_workers_wage_small),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_wage, law_workers_wage_medium),
		(else_try),
		(eq, ":value", 3),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_workers_wage, law_workers_wage_big),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_press"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_press, law_press_state_press),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_press, law_press_heavy_censorship),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_press, law_press_light_censorship),
		(else_try),
		(eq, ":value", 3),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_press, law_press_free_press),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_executive_branch"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_executive_branch, law_executive_branch_selected_by_state),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_executive_branch, law_executive_branch_partially_by_voting),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_executive_branch, law_executive_branch_mostly_by_voting),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_voting_openness"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_openness, law_voting_openness_harassment),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_openness, law_voting_openness_non_secret_ballot),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_openness, law_voting_openness_secret_ballot),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_nomination_rules"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_nomination_rules, law_nomination_rules_rich_only),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_nomination_rules, law_nomination_rules_universal),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_law_voting_franchise"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_franchise, law_voting_franchise_aristocracy_only),
		(else_try),
		(eq, ":value", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_franchise, law_voting_franchise_rich_only),
		(else_try),
		(eq, ":value", 2),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_franchise, law_voting_franchise_middle_and_upper_class_only),
		(else_try),
		(eq, ":value", 3),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_franchise, law_voting_franchise_universal_weighted),
		(else_try),
		(eq, ":value", 4),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_pvol_voting_franchise, law_voting_franchise_universal),
		(try_end),
	(else_try),
	(eq, ":object", "$overlay_combolabel_goverment_type"),
	(val_add, ":value", 1),
	(call_script, "script_pps_faction_change_government_type", "fac_player_supporters_faction", ":value"),
	(else_try),
	(eq, ":object", "$overlay_combolabel_party_color"),
	(store_add, ":string", ":value", "str_party_color1"),
	(str_store_string, s1, ":string"), (overlay_set_material, "$overlay_mesh_faction_color", s1),
	(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_color_material_string, ":string"),
	(else_try),
	(eq, ":object", "$overlay_combolabel_faction_color"),
	(assign, "$custom_faction_color_number", ":value"),
	(call_script, "script_custom_faction_settings_get_color_from_number"),
	(faction_set_color, "fac_player_supporters_faction", reg1), (faction_set_color, "fac_player_faction", reg1),
	(overlay_set_color, "$overlay_text_faction_color_cirle", reg1),
	(else_try),
	(eq, ":object", "$overlay_textbox_name"),
	(faction_set_name, "fac_player_supporters_faction", s0),
	(else_try),
	(eq, ":object", "$overlay_textbox_party_name"),
	(faction_set_name, "fac_culture_33", s0),
	(else_try),
	(eq, ":object", "$overlay_button_done"),
		(try_begin),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_political_party3_name, "str_players_political_party_name"),
		(call_script, "script_pps_faction_calculate_support_of_parties", "fac_player_supporters_faction"),
		(neq, "$players_kingdom_name_set", 1),
		(assign, "$players_kingdom_name_set", 1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_ruling_political_party, 2),
		(call_script, "script_pps_faction_enforce_ruling_party_pvols_to_laws", "fac_player_supporters_faction"),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_capital, "p_town_1"),
		(call_script, "script_pps_faction_iteration", "fac_player_supporters_faction"),
		(try_end),
	(presentation_set_duration, 0),
	(try_end),
]),		

(ti_on_presentation_run, [
(set_fixed_point_multiplier, 1000),
]),
]),
  
  ("banner_selection",0,mesh_load_window2,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_banner_selection_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_banner_selection_1", "@Next Page", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_banner_selection_1", pos1),

        (assign, ":x_pos", 150),
        (assign, ":y_pos", 575),
        (assign, ":try_end", banner_meshes_end_minus_one),
        (store_sub, ":num_npc_kingdoms", npc_kingdoms_end, npc_kingdoms_begin),
        (val_sub, ":try_end", ":num_npc_kingdoms"), #do not allow kingdom banners to be selected
        (store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
        (val_add, ":begin_mesh", banner_meshes_begin),
        (store_add, ":try_end_2", ":begin_mesh", 16),
        (val_min, ":try_end", ":try_end_2"),
        (store_add, "$g_presentation_banner_start", "$g_presentation_obj_banner_selection_1", 1),
        (try_for_range, ":cur_banner_mesh", ":begin_mesh", ":try_end"),
          (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
          (position_set_x, pos1, ":x_pos"),
          (position_set_y, pos1, ":y_pos"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (val_add, ":x_pos", 100),
          (ge, ":x_pos", 900),
          (assign, ":x_pos", 150),
          (val_sub, ":y_pos", 250),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_banner_selection_1"),
          (val_add, "$g_presentation_page_no", 1),
          (val_mod, "$g_presentation_page_no", 8),
          (start_presentation, "prsnt_banner_selection"),
        (else_try),
          (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
          (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
          (val_add, ":selected_banner", ":page_adder"),
          (store_add, ":selected_banner_map_icon", ":selected_banner", banner_map_icons_begin),
          (party_set_banner_icon, "p_main_party", ":selected_banner_map_icon"),
          (store_add, ":selected_banner_spr", ":selected_banner", banner_scene_props_begin),
          (troop_set_slot, "trp_player", slot_troop_banner_scene_prop, ":selected_banner_spr"),
                    
          #Correcting banners according to the player banner
          #(assign, ":end_cond", active_npcs_end),
          #(try_for_range, ":cur_troop", original_kingdom_heroes_begin, ":end_cond"),
          #  (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
          #  (str_store_troop_name, s7, ":cur_troop"),
          #  (display_message, "@DEBUGS : {s7}'s banner is changed"),
          #  (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
          #  (assign, ":end_cond", 0),
          #(try_end),
                    
          (presentation_set_duration, 0),
          (assign, ":troop_to_change", 0),
          (assign, ":end_cond", active_npcs_end),
          (try_for_range, ":cur_troop", active_npcs_begin, ":end_cond"),
            (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
            (assign, ":troop_to_change", ":cur_troop"),
            (assign, ":end_cond", 0),
            (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
            (troop_get_slot, ":cur_party", ":cur_troop", slot_troop_leaded_party),
            (gt, ":cur_party", 0),
            (party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),             
          (try_end),
          (try_for_range, ":cur_center", walled_centers_begin, walled_centers_end),
            (try_begin),
              (party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
              (party_set_banner_icon, ":cur_center", ":selected_banner_map_icon"),
            (else_try),
              (party_slot_eq, ":cur_center", slot_town_lord, ":troop_to_change"),
              (party_set_banner_icon, ":cur_center", banner_map_icons_end_minus_one), 
            (try_end),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
		  (this_or_next|key_clicked, key_xbox_ltrigger),
          (key_clicked, key_xbox_rtrigger),
          (presentation_set_duration, 0),
        (try_end),

        ]),
      ]),

  ("custom_banner", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (troop_get_slot, ":flag_type", "trp_player", slot_troop_custom_banner_flag_type),
        (val_max, ":flag_type", 0),
        (val_add, ":flag_type", custom_banner_flag_types_begin),
        (troop_get_slot, ":map_flag_type", "trp_player", slot_troop_custom_banner_map_flag_type),
        (val_max, ":map_flag_type", 0),
        (val_add, ":map_flag_type", custom_banner_flag_map_types_begin),
##        (create_mesh_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_1", ":flag_type", "tableau_custom_banner_square", "trp_player"),
        (troop_get_slot, ":bg_color_1", "trp_player", slot_troop_custom_banner_bg_color_1),
        (troop_get_slot, ":bg_color_2", "trp_player", slot_troop_custom_banner_bg_color_2),
        
        (create_text_overlay, reg1, "str_color_no_1", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_color_no_2", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_22", "mesh_color_picker", "tableau_color_picker", ":bg_color_1"),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_23", "mesh_color_picker", "tableau_color_picker", ":bg_color_2"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 565),
        (overlay_set_position, "$g_presentation_obj_custom_banner_22", pos1),
        (position_set_y, pos1, 515),
        (overlay_set_position, "$g_presentation_obj_custom_banner_23", pos1),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 250),
        (overlay_set_size, "$g_presentation_obj_custom_banner_22", pos1),
        (overlay_set_size, "$g_presentation_obj_custom_banner_23", pos1),
        
        (create_button_overlay, "$g_presentation_obj_custom_banner_2", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_3", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_4", "str_change_background", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_5", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_19", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_20", "str_accept", tf_center_justify),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (create_button_overlay, "$g_presentation_obj_custom_banner_16", "str_randomize", tf_center_justify),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_17", ":flag_type", "tableau_custom_banner_default", "trp_player"),
        (try_begin),
          (eq, ":map_flag_type", "mesh_custom_map_banner_01"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_square", "trp_player"),
        (else_try),
          (eq, ":map_flag_type", "mesh_custom_map_banner_02"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_short", "trp_player"),
        (else_try),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_tall", "trp_player"),
        (try_end),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_1", -1, "tableau_custom_banner_square_no_mesh", "trp_player"),
        (create_text_overlay, reg1, "str_sample_banner", tf_center_justify),
        (position_set_x, pos1, 825),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_sample_map_banner", tf_center_justify),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (position_set_x, pos1, 800),
        (position_set_y, pos1, 640),
        (overlay_set_position, "$g_presentation_obj_custom_banner_17", pos1),
        (position_set_x, pos1, 780),
        (position_set_y, pos1, 315),
        (overlay_set_position, "$g_presentation_obj_custom_banner_18", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_custom_banner_17", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_custom_banner_18", pos1),
        

        (create_text_overlay, reg1, "str_number_of_charges", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),

        (assign, reg1, ":num_charges"),
        (create_text_overlay, reg2, "str_reg1", tf_center_justify),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg2, pos1),
        (try_begin),
          (lt, ":num_charges", 4),
          (create_button_overlay, "$g_presentation_obj_custom_banner_15", "str_plus", tf_center_justify),
          (position_set_x, pos1, 385),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_custom_banner_15", pos1),
        (else_try),
          (assign, "$g_presentation_obj_custom_banner_15", -1),
        (try_end),
        (try_begin),
          (gt, ":num_charges", 0),
          (create_button_overlay, "$g_presentation_obj_custom_banner_21", "str_minus", tf_center_justify),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_custom_banner_21", pos1),
        (else_try),
          (assign, "$g_presentation_obj_custom_banner_21", -1),
        (try_end),

        (try_begin),
          (ge, ":num_charges", 1),
          (create_text_overlay, reg1, "str_charge", tf_center_justify),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_text_overlay, reg1, "str_color", tf_center_justify),
          (position_set_x, pos1, 550),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_14", "str_change_charge_position", tf_center_justify),
          (position_set_y, pos1, 350),
          (position_set_x, pos1, 550),
          (overlay_set_position, "$g_presentation_obj_custom_banner_14", pos1),

          (create_text_overlay, reg1, "str_charge_no_1", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 240),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_6", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_6", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_7", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_7", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_1),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_24", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_custom_banner_24", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_24", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_1),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_28", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_custom_banner_28", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_28", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_32", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 240),
          (overlay_set_position, "$g_presentation_obj_custom_banner_32", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_33", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_33", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 2),
          (create_text_overlay, reg1, "str_charge_no_2", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 180),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_8", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_8", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_9", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_9", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_2),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_25", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_custom_banner_25", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_25", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_2),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_29", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_custom_banner_29", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_29", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_34", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 180),
          (overlay_set_position, "$g_presentation_obj_custom_banner_34", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_35", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_35", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 3),
          (create_text_overlay, reg1, "str_charge_no_3", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 120),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_10", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_10", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_11", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_11", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_3),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_26", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_custom_banner_26", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_26", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_3),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_30", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_custom_banner_30", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_30", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_36", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 120),
          (overlay_set_position, "$g_presentation_obj_custom_banner_36", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_37", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_37", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 4),
          (create_text_overlay, reg1, "str_charge_no_4", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 60),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_12", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_12", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_13", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_13", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_4),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_27", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_custom_banner_27", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_27", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_4),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_31", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_custom_banner_31", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_31", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_38", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 60),
          (overlay_set_position, "$g_presentation_obj_custom_banner_38", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_39", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_39", pos1),
        (try_end),
        
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_custom_banner_1", pos1),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_custom_banner_2", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_custom_banner_3", pos1),
        (position_set_x, pos1, 175),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_custom_banner_4", pos1),
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 575),
        (overlay_set_position, "$g_presentation_obj_custom_banner_5", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_custom_banner_19", pos1),
        (position_set_y, pos1, 650),
        (position_set_x, pos1, 175),
        (overlay_set_position, "$g_presentation_obj_custom_banner_16", pos1),
        (position_set_y, pos1, 150),
        (position_set_x, pos1, 850),
        (overlay_set_position, "$g_presentation_obj_custom_banner_20", pos1),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_2"),
          (eq, ":object", "$g_presentation_obj_custom_banner_22"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_3"),
          (eq, ":object", "$g_presentation_obj_custom_banner_23"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_4"),
          (eq, ":object", "$g_presentation_obj_custom_banner_1"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_background_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_5"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_6"),
          (eq, ":object", "$g_presentation_obj_custom_banner_24"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_1),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_7"),
          (eq, ":object", "$g_presentation_obj_custom_banner_28"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_8"),
          (eq, ":object", "$g_presentation_obj_custom_banner_25"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_2),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_9"),
          (eq, ":object", "$g_presentation_obj_custom_banner_29"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_10"),
          (eq, ":object", "$g_presentation_obj_custom_banner_26"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_3),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_11"),
          (eq, ":object", "$g_presentation_obj_custom_banner_30"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_3),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_12"),
          (eq, ":object", "$g_presentation_obj_custom_banner_27"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_4),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_13"),
          (eq, ":object", "$g_presentation_obj_custom_banner_31"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_4),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (eq, ":object", "$g_presentation_obj_custom_banner_14"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_charge_positioning"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_15"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_add, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_21"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_sub, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_16"),
          (call_script, "script_get_random_custom_banner", "trp_player"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_17"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_18"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_19"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_32"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_34"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_36"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_38"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_33"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_35"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_37"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_39"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_20"),
          (troop_get_slot, ":flag_icon", "trp_player", slot_troop_custom_banner_map_flag_type),
          (try_begin),
            (ge, ":flag_icon", 0),
            (val_add, ":flag_icon", custom_banner_map_icons_begin),
            (party_set_banner_icon, "p_main_party", ":flag_icon"),
          (try_end),
          (presentation_set_duration, 0),
        (try_end),
        ]),
##     (ti_on_presentation_run,
##      [(try_begin),
##         (this_or_next|key_clicked, key_space),
##         (this_or_next|key_clicked, key_enter),
##         (this_or_next|key_clicked, key_escape),
##         (key_clicked, key_back_space),
##         (presentation_set_duration, 0),
##       (try_end),
##       ]),
     ]),

  ("banner_charge_positioning", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_position", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 125),
        (assign, ":pos_y", 400),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (store_mul, ":x_needed", ":num_positionings", 125),
        (val_sub, ":x_needed", 25),
        (store_div, ":pos_x", ":x_needed", 2),
        (store_sub, ":pos_x", 500, ":pos_x"),
        (try_for_range, ":cur_positioning", 0, ":num_positionings"),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_positioning_selection", ":cur_positioning"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_positioning", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (try_for_range, ":trp_slot_index", 0, ":num_positionings"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_positioning, ":trp_slot_index"),
          (assign, ":num_positionings", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_charge_selection", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_charge", tf_center_justify),

        (position_set_x, pos1, 500),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 100),
        (assign, ":pos_y", 600),
        (try_for_range, ":cur_charge", custom_banner_charges_begin, custom_banner_charges_end),
          (create_image_button_overlay, reg1, ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 100),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 100),
            (val_sub, ":pos_y", 100),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 80),
          (position_set_y, pos1, 80),
          (overlay_set_size, reg1, pos1),
          (store_sub, ":slot_index", ":cur_charge", custom_banner_charges_begin),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_charges_end),
        (val_sub, ":end_cond", custom_banner_charges_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_background_selection", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_background", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 75),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_banner", custom_banner_backgrounds_begin, custom_banner_backgrounds_end),
          (store_sub, ":slot_index", ":cur_banner", custom_banner_backgrounds_begin),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_background_selection", ":slot_index"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 75),
            (val_sub, ":pos_y", 125),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_backgrounds_end),
        (val_sub, ":end_cond", custom_banner_backgrounds_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_bg_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_type_selection", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 435),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_flag", custom_banner_flag_types_begin, custom_banner_flag_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":slot_index"),
          (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_default", "trp_player"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 130),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_types_end),
        (val_sub, ":end_cond", custom_banner_flag_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_map_type_selection", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_map_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (troop_get_slot, ":bg_type", "trp_player", slot_troop_custom_banner_bg_type),
        (val_add, ":bg_type", custom_banner_backgrounds_begin),
        (assign, ":pos_x", 250),
        (assign, ":pos_y", 150),
        (try_for_range, ":cur_flag", custom_banner_flag_map_types_begin, custom_banner_flag_map_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_map_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":slot_index"),
          (try_begin),
            (eq, ":cur_flag", "mesh_custom_map_banner_01"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_square", "trp_player"),
          (else_try),
            (eq, ":cur_flag", "mesh_custom_map_banner_02"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_short", "trp_player"),
          (else_try),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_tall", "trp_player"),
          (try_end),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 200),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_map_types_end),
        (val_sub, ":end_cond", custom_banner_flag_map_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("color_selection", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_color", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 125),
        (assign, ":pos_y", 450),
        (try_for_range, ":i_color", 0, 42),
          (call_script, "script_get_custom_banner_color_from_index", ":i_color"),
          (assign, ":cur_color", reg0),
          (create_image_button_overlay_with_tableau_material, reg1, "mesh_color_picker", "tableau_color_picker", ":cur_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 50),
          (try_begin),
            (store_mod, ":mod_i_color", ":i_color", 7),
            (eq, ":mod_i_color", 6),
            (assign, ":pos_x", 125),
            (val_sub, ":pos_y", 50),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 500),
          (overlay_set_size, reg1, pos1),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_index", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_color", ":cur_color"),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", 64),
        (try_for_range, ":i_color", 0, ":end_cond"),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_get_slot, ":output_color", "trp_temp_array_a", ":trp_slot_color"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":output_color"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("marshall_selection", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (assign, "$g_presentation_obj_marshall_selection_1", -1),
        (assign, "$g_presentation_obj_marshall_selection_2", -1),
        (assign, "$g_presentation_obj_marshall_selection_3", -1),
        (set_fixed_point_multiplier, 1000),
        (assign, "$g_presentation_next_presentation", -1),

        (store_add, ":total_renown", "$g_presentation_marshall_selection_max_renown_1", "$g_presentation_marshall_selection_max_renown_2"),
        (faction_get_slot, ":king", "$players_kingdom", slot_faction_leader),

        (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
        (create_text_overlay, reg1, "@Candidate #1: {s1}", tf_center_justify),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
        (create_text_overlay, reg1, "@Candidate #2: {s1}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_1_troop"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_2_troop"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),

        (assign, ":lord_index", "$g_presentation_input"),
        (val_add, "$g_presentation_input", 1),

        (try_begin),
          (lt, ":lord_index", 0),
          (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
          (str_store_troop_name, s3, ":king"),
          (str_store_faction_name, s4, "$players_kingdom"),
          (create_text_overlay, reg1, "@{s3} of {s4} wishes to select a new marshall and invites his vassals for a counsel. {s1} and {s2} are the likely candidates.", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 200),
          (overlay_set_position, reg1, pos1),

          (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 100),
          (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
          (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),
        (else_try),
          (assign, ":cur_index", ":lord_index"),
          (try_for_range_backwards, ":loop_var", "trp_kingdom_heroes_including_player_begin", active_npcs_end),
            (ge, ":cur_index", 0),
            (assign, ":cur_troop", ":loop_var"),
            (assign, ":continue", 0),
            (try_begin),
              (eq, ":loop_var", "trp_kingdom_heroes_including_player_begin"),
              (assign, ":cur_troop", "trp_player"),
              (try_begin),
                (eq, "$g_player_is_captive", 0),
                (assign, ":continue", 1),
              (try_end),
            (else_try),
              (store_troop_faction, ":cur_troop_faction", ":cur_troop"),
              (eq, "$players_kingdom", ":cur_troop_faction"),
              #(troop_slot_eq, ":cur_troop", slot_troop_is_prisoner, 0),
              (neg|troop_slot_ge, ":cur_troop", slot_troop_prisoner_of_party, 0),
              (troop_slot_ge, ":cur_troop", slot_troop_leaded_party, 1),
              (troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
              (neg|faction_slot_eq, ":cur_troop_faction", slot_faction_leader, ":cur_troop"),
              (assign, ":continue", 1),
            (try_end),
            (eq, ":continue", 1),

            (neq, "$g_presentation_marshall_selection_max_renown_1_troop", ":cur_troop"),
            (neq, "$g_presentation_marshall_selection_max_renown_2_troop", ":cur_troop"),

            (val_sub, ":cur_index", 1),
            (lt, ":cur_index", 0),

            (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),

            (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", ":cur_troop"),
            (position_set_x, pos1, 300),
            (position_set_y, pos1, 300),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, 440),
            (position_set_y, pos1, 400),
            (overlay_set_position, reg1, pos1),

            (try_begin),
              (eq, ":cur_troop", "trp_player"),
              (create_text_overlay, reg1, "@Who do you wish to support?", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 200),
              (overlay_set_position, reg1, pos1),
              (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (create_button_overlay, "$g_presentation_obj_marshall_selection_2", "@{!}{s1}", tf_center_justify),
              (position_set_x, pos1, 300),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_marshall_selection_2", pos1),
              (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
              (create_button_overlay, "$g_presentation_obj_marshall_selection_3", "@{!}{s1}", tf_center_justify),
              (position_set_x, pos1, 700),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_marshall_selection_3", pos1),
            (else_try),
              (str_store_troop_name, s1, ":cur_troop"),
              (store_random_in_range, ":random_renown", 0, ":total_renown"),
              (val_sub, ":random_renown", "$g_presentation_marshall_selection_max_renown_1"),
              (try_begin),
                (lt, ":random_renown", 0),
                (val_add, "$g_presentation_marshall_selection_1_vote", 1),
                (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (else_try),
                (val_add, "$g_presentation_marshall_selection_2_vote", 1),
                (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
              (try_end),
              (create_text_overlay, reg1, "@{s1} gives his support to {s2}.", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 200),
              (overlay_set_position, reg1, pos1),

              (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
            (try_end),
          (try_end),
        (try_end),

        (assign, reg0, "$g_presentation_marshall_selection_1_vote"),
        (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, "$g_presentation_marshall_selection_2_vote"),
        (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (try_begin),
          (lt, "$g_presentation_next_presentation", 0),
          (try_begin),
            (gt, "$g_presentation_marshall_selection_2_vote", "$g_presentation_marshall_selection_1_vote"),
            (assign, ":local_temp", "$g_presentation_marshall_selection_max_renown_1_troop"),
            (assign, "$g_presentation_marshall_selection_max_renown_1_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
            (assign, "$g_presentation_marshall_selection_max_renown_2_troop", ":local_temp"),
          (try_end),
          #Winner is set to g_presentation_marshall_selection_max_renown_1_troop
          (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          (str_store_troop_name, s2, ":king"),
          (str_store_faction_name, s3, "$players_kingdom"),
          (create_text_overlay, reg1, "@{s2} has heard his vassals' counsel. He selects {s1} as the marshall of {s3}.", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 200),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 100),
          (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
        (try_end),

        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_marshall_selection_2"),
          (val_add, "$g_presentation_marshall_selection_1_vote", 1),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", 2),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -2),
        (else_try),
          (eq, ":object", "$g_presentation_obj_marshall_selection_3"),
          (val_add, "$g_presentation_marshall_selection_2_vote", 1),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", -2),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", 2),
        (try_end),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_1"),
          (this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_2"),
          (eq, ":object", "$g_presentation_obj_marshall_selection_3"),
          (try_begin),
            (ge, "$g_presentation_next_presentation", 0),
            (start_presentation, "$g_presentation_next_presentation"),
          (else_try),
            (try_begin),
              (neg|faction_slot_eq, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (call_script, "script_check_and_finish_active_army_quests_for_faction", "$players_kingdom"),
            (try_end),

           (faction_get_slot, ":old_marshall", "$players_kingdom", slot_faction_marshall),
           (try_begin),
             (ge, ":old_marshall", 0),
             (party_is_active, ":old_marshall"),
             (party_set_marshall, ":old_marshall", 0),
           (try_end),  

            (faction_set_slot, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
            (try_begin),
              (eq, "$g_presentation_marshall_selection_max_renown_1_troop", "trp_player"),
              (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -3),
            (try_end),
            (assign, "$g_recalculate_ais", 1),
            (assign, "$g_presentation_marshall_selection_ended", 1),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
     ]),
  
  ("battle",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_group0_selected", 0),
        (assign, "$g_formation_group1_selected", 0),
        (assign, "$g_formation_group2_selected", 0),
        (assign, "$g_formation_group3_selected", 0),
        (assign, "$g_formation_group4_selected", 0),
        (assign, "$g_formation_group5_selected", 0),
        (assign, "$g_formation_group6_selected", 0),
        (assign, "$g_formation_group7_selected", 0),
        (assign, "$g_formation_group8_selected", 0),
        (assign, "$g_presentation_obj_battle_but0", -1),
        (assign, "$g_presentation_obj_battle_but1", -1),
        (assign, "$g_presentation_obj_battle_but2", -1),
        (assign, "$g_presentation_obj_battle_but3", -1),
        (assign, "$g_presentation_obj_battle_but4", -1),
        (assign, "$g_presentation_obj_battle_but5", -1),
        (assign, "$g_presentation_obj_battle_but6", -1),
        (assign, "$g_presentation_obj_battle_but7", -1),
        (assign, "$g_presentation_obj_battle_but8", -1),
        (str_clear, s7),

        (try_for_agents, ":agent_no"),
          (agent_set_slot, ":agent_no", slot_agent_map_overlay_id, 0),
        (try_end),

        (get_player_agent_no, ":player_agent"),
        (agent_get_troop_id, ":player_troop_id", ":player_agent"),

        (position_set_y, pos1, 700),
        (create_text_overlay, reg1, "@ ", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 270),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Mount", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Attack Type", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (assign, "$group0_has_troops", 0),
        (assign, "$group1_has_troops", 0),
        (assign, "$group2_has_troops", 0),
        (assign, "$group3_has_troops", 0),
        (assign, "$group4_has_troops", 0),
        (assign, "$group5_has_troops", 0),
        (assign, "$group6_has_troops", 0),
        (assign, "$group7_has_troops", 0),
        (assign, "$group8_has_troops", 0),
        (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
        (assign, "$num_classes", 0),
        (try_for_range, ":troop_iterator", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":troop_iterator"),
          (troop_get_class, ":troop_class", ":cur_troop_id"),
          (neq, ":player_troop_id", ":cur_troop_id"),
          (try_begin),
            (eq, ":troop_class", 0),
            (try_begin),
              (neq, "$group0_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group0_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 1),
            (try_begin),
              (neq, "$group1_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group1_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 2),
            (try_begin),
              (neq, "$group2_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group2_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 3),
            (try_begin),
              (neq, "$group3_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group3_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 4),
            (try_begin),
              (neq, "$group4_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group4_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 5),
            (try_begin),
              (neq, "$group5_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group5_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 6),
            (try_begin),
              (neq, "$group6_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group6_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 7),
            (try_begin),
              (neq, "$group7_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group7_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 8),
            (try_begin),
              (neq, "$group8_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group8_has_troops", 1),
          (try_end),
        (try_end),
		
(assign, "$group0_has_troops", 0),
(assign, "$group1_has_troops", 0),
(assign, "$group2_has_troops", 0),
(assign, "$group3_has_troops", 0),
(assign, "$group4_has_troops", 0),
(assign, "$group5_has_troops", 0),
(assign, "$group6_has_troops", 0),
(assign, "$group7_has_troops", 0),
(assign, "$group8_has_troops", 0),
(try_begin), #parabellum
(neq, "$player_company1_type", 0),
(assign, "$group0_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company2_type", 0),
(assign, "$group1_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company3_type", 0),
(assign, "$group2_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company4_type", 0),
(assign, "$group3_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company5_type", 0),
(assign, "$group4_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company6_type", 0),
(assign, "$group5_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company7_type", 0),
(assign, "$group6_has_troops", 1),
(try_end),
(try_begin),
(neq, "$player_company8_type", 0),
(assign, "$group7_has_troops", 1),
(try_end),
(assign, "$group8_has_troops", 0),

        (assign, ":stat_position_x", 0),
        (assign, ":stat_position_y", 653),
        (assign, ":stat_position_check_x", 20),
        (assign, ":stat_position_check_y", 662),
        (assign, ":stat_position_name_x", 50),
        (assign, ":stat_position_name_y", 660),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but0", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but0", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but0", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but0", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but0", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check0", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check0", pos2),
          (val_add, ":stat_position_check_y", -40),

          (create_text_overlay, "$g_presentation_obj_battle_name0", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name0", pos3),
        
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but0_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but0_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but0_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group1_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but1", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but1", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but1", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but1", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but1", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check1", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check1", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name1", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name1", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but1_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group2_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but2", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but2", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but2", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but2", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but2", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check2", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check2", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name2", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name2", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but2_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group3_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but3", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but3", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but3", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but3", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but3", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check3", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check3", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name3", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name3", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but3_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group4_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but4", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but4", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but4", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but4", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but4", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check4", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check4", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name4", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name4", pos3),
          (val_add, ":stat_position_name_y", -40),
        
          (create_text_overlay, "$g_presentation_but4_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group5_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but5", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but5", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but5", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but5", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but5", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check5", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check5", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name5", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name5", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but5_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group6_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but6", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but6", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but6", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but6", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but6", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check6", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check6", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name6", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name6", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but6_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group7_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but7", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but7", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but7", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but7", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but7", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check7", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check7", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name7", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name7", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but7_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group8_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but8", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but8", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but8", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but8", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but8", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check8", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check8", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name8", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name8", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but8_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_weapon_usage", s7, tf_center_justify),
        (try_end),
        
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),
        
        (call_script, "script_update_order_panel", ":player_team"),

        
        (assign, ":y_position_for_order_buttons", 400),
        (assign, ":addition_y_position", "$num_classes"),
        (val_mul, ":addition_y_position", -40),
        (val_add, ":y_position_for_order_buttons", ":addition_y_position"),

        (create_listbox_overlay, "$g_presentation_obj_battle_10", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_11", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_12", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_13", "str_space", 0),
        
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Retreat"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Spread Out"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Closer"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Fall Back"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Advance"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Charge"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Follow Me"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Form Square"),

        (create_button_overlay, "$g_presentation_obj_battle_14", "@Spread Out", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_14", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_15", "@Stand Closer", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_15", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_16", "@Fall Back", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_16", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_17", "@Advance", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_17", 0xFFFFFFFF),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_10", pos1),

        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_x, pos1, 205),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 35),
        (overlay_set_position, "$g_presentation_obj_battle_10", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_10", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_10", "$g_latest_order_1"),

        (val_add, ":y_position_for_order_buttons", -40), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 40), #new
        (overlay_set_position, "$g_presentation_obj_battle_14", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_14", 0x60), #new

        (val_add, ":y_position_for_order_buttons", -20), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 20), #new
        (overlay_set_position, "$g_presentation_obj_battle_15", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_15", 0x60), #new

        (val_add, ":y_position_for_order_buttons", -0), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 0), #new
        (overlay_set_position, "$g_presentation_obj_battle_16", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_16", 0x60), #new

        (val_add, ":y_position_for_order_buttons", 20), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", -20), #new
        (overlay_set_position, "$g_presentation_obj_battle_17", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_17", 0x60), #new



        (overlay_add_item, "$g_presentation_obj_battle_11", "@Dismount"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Mount"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_11", pos1),

        (position_set_x, pos1, 350),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_11", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_11", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_11", "$g_latest_order_2"),



        (overlay_add_item, "$g_presentation_obj_battle_12", "@Fire At Will"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Hold Your Fire"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_12", pos1),

        (position_set_x, pos1, 495),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_12", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_12", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_12", "$g_latest_order_3"),



        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Ranged Weapons"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Melee Weapons"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_13", pos1),

        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_x, pos1, 495),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 35),
        (overlay_set_position, "$g_presentation_obj_battle_13", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_13", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_13", "$g_latest_order_4"),



        (create_text_overlay, "$g_presentation_obj_battle_22", "str_us_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_23", "str_allies_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_24", "str_enemies_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_25", "@Ready", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_26", "@Wounded", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_28", "str_routed", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_27", "@Dead", tf_center_justify),

        (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),
        
        (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),


        (create_image_button_overlay, "$g_battle_report_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_report_plane", 0),
        (position_set_x, pos1, 15500),
        (position_set_y, pos1, 6000),
        (overlay_set_size, "$g_battle_report_plane", pos1),
        (position_set_x, pos1, 672),
        (position_set_y, pos1, 275),
        (overlay_set_position, "$g_battle_report_plane", pos1),
        (overlay_set_alpha, "$g_battle_report_plane", 0x44),
        (overlay_set_color, "$g_battle_report_plane", 0x1166BB),


        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),

        (overlay_set_size, "$g_presentation_obj_battle_14", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_15", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_16", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_17", pos1), #new

        (overlay_set_size, "$g_presentation_obj_battle_22", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_23", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_24", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_25", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_26", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_27", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_28", pos1),
        (overlay_set_size, "$g_battle_us_ready", pos1),
        (overlay_set_size, "$g_battle_us_wounded", pos1),
        (overlay_set_size, "$g_battle_us_routed", pos1),
        (overlay_set_size, "$g_battle_us_dead", pos1),
        (overlay_set_size, "$g_battle_enemies_ready", pos1),
        (overlay_set_size, "$g_battle_enemies_wounded", pos1),
        (overlay_set_size, "$g_battle_enemies_routed", pos1),
        (overlay_set_size, "$g_battle_enemies_dead", pos1),
        (overlay_set_size, "$g_battle_allies_ready", pos1),        
        (overlay_set_size, "$g_battle_allies_wounded", pos1),
        (overlay_set_size, "$g_battle_allies_routed", pos1),
        (overlay_set_size, "$g_battle_allies_dead", pos1),

        (assign, ":stat_position_x", 675),
        (assign, ":stat_position_y", 280),

        (val_add, ":stat_position_x", 70),
        (val_add, ":stat_position_y", 90),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_25", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_26", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_28", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_27", pos1),

        (val_add, ":stat_position_x", -280),
        (val_add, ":stat_position_y", -30),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_22", pos1),
        (val_add, ":stat_position_y", -30),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_23", pos1),
        (val_add, ":stat_position_y", -30),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_24", pos1),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          (assign, "$g_battle_map_width", 300),
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          (assign, "$g_battle_map_height", 300),
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),
        
        (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x44),

        (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
        (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
        (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
        (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),

        (call_script, "script_update_order_panel_checked_classes"),
        (call_script, "script_update_order_panel_statistics_and_map"),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (assign, ":update_listeners", 0),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check0"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group0_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group1_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check1"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group1_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group2_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check2"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group2_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group3_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check3"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group3_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group4_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check4"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group4_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group5_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check5"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group5_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group6_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check6"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group6_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group7_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check7"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group7_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group8_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check8"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group8_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (assign, ":update_listeners", 1),
        
          (assign, "$g_formation_group0_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check0", 1),

          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group1_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check1", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group2_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check2", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group3_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check3", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group4_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check4", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group5_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check5", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group6_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check6", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group7_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check7", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group8_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check8", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_14"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_15"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_16"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_17"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_10"), # Forming square
          (try_begin),
            (eq, ":value", 3),
			(call_script, "script_update_order_panel", ":player_team"),
			(assign, ":company_number", 0),
				(try_for_range, ":company", 0, 8),
				(class_is_listening_order, ":player_team", ":company"),
				(val_add, ":company_number", 1),
				(try_end),
				(try_begin),
				(gt, ":company_number", 2),
				(display_message, "@Cannot form square: too many companies selected."),
				(try_end),
			(gt, ":company_number", 0),
			(lt, ":company_number", 3),
			(assign, ":types_are_ok", 1),
				(try_for_range, ":company", 0, 8),
				(class_is_listening_order, ":player_team", ":company"),
				(store_add, ":slot_team_type", slot_team_company1_type, ":company"),
					(try_begin),
					(neg|team_slot_eq, ":player_team", ":slot_team_type", pbs_troop_type_line),
					(neg|team_slot_eq, ":player_team", ":slot_team_type", pbs_troop_type_guard),
					(assign, ":types_are_ok", 0),
					(try_end),
				(try_end),
				(try_begin),
				(eq, ":types_are_ok", 0),
				(display_message, "@Cannot form square: wrong company types (only line infantry and guard inantry can form square)."),
				(try_end),
			(eq, ":types_are_ok", 1),
			(call_script, "script_player_team_form_square"),
            (assign, "$g_latest_order_1", 3),
          (else_try),
            (eq, ":value", 2),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 2),
          (else_try),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
            (call_script, "script_update_order_panel", ":player_team"),
				(try_for_range, ":company", 0, 8),
				(class_is_listening_order, ":player_team", ":company"),
				(store_add, ":slot_team_state", slot_team_company1_state, ":company"),
				(store_add, ":slot_team_type", slot_team_company1_type, ":company"),
				(neg|team_slot_eq, ":player_team", ":slot_team_state", pbs_state_retreating),
				(call_script, "script_company_charge", ":player_team", ":company"),
					(try_begin),
					(this_or_next|team_slot_eq, ":player_team", ":slot_team_type", pbs_troop_type_cavmelee),
					(this_or_next|team_slot_eq, ":player_team", ":slot_team_type", pbs_troop_type_cavranged),
					(team_slot_eq, ":player_team", ":slot_team_type", pbs_troop_type_cavguard),
					(call_script, "script_company_play_bugle", ":player_team", ":company", "snd_bugle_cavalry_charge"),
					(try_end),
				(try_end),
##          (else_try),
##            (eq, ":value", 4),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 3),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 2),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 1),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
##            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_retreat),
            (call_script, "script_update_order_panel", ":player_team"),
			(set_show_messages, 0),
				(try_for_range, ":company", 0, 8),
				(class_is_listening_order, ":player_team", ":company"),
				(call_script, "script_company_retreat", ":player_team", ":company"),
				(call_script, "script_company_play_bugle", ":player_team", ":company", "snd_bugle_retreat"),
				(try_end),
			(set_show_messages, 1),
            (assign, "$g_latest_order_1", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_11"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_2", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_2", 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_12"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold_fire),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_3", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_will),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_3", 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_13"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_melee_weapons),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_ranged_weapons),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_battle_map_plane"),
          (get_scene_boundaries, pos2, pos3),
          (mouse_get_position, pos1),
          (set_fixed_point_multiplier, 1000),
          (position_get_x, ":mouse_x", pos1),
          (position_get_y, ":mouse_y", pos1),
          (store_sub, ":map_x", 980, "$g_battle_map_width"),
          (store_sub, ":map_y", 730, "$g_battle_map_height"),
          (val_sub, ":mouse_x", ":map_x"),
          (val_sub, ":mouse_y", ":map_y"),
          (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
          (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
          (val_mul, ":mouse_x", "$g_battle_map_scale"),
          (val_mul, ":mouse_y", "$g_battle_map_scale"),
          (set_fixed_point_multiplier, 1000),
          (position_set_x, pos1, ":mouse_x"),
          (position_set_y, pos1, ":mouse_y"),
          (position_transform_position_to_parent, pos3, pos2, pos1),
          (try_begin),
            (eq, "$g_formation_group0_selected", 1),
            (team_give_order, ":player_team", 0, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 0),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group1_selected", 1),
            (team_give_order, ":player_team", 1, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 1),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group2_selected", 1),
            (team_give_order, ":player_team", 2, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 2),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group3_selected", 1),
            (team_give_order, ":player_team", 3, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group4_selected", 1),
            (team_give_order, ":player_team", 4, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 4),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group5_selected", 1),
            (team_give_order, ":player_team", 5, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 5),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group6_selected", 1),
            (team_give_order, ":player_team", 6, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 6),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group7_selected", 1),
            (team_give_order, ":player_team", 7, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 7),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group8_selected", 1),
            (team_give_order, ":player_team", 8, mordr_hold),
		   (copy_position, pos30, pos3),
		   (call_script, "script_company_hold_pos30", "$g_player_team", 7),
          (try_end),        
          (call_script, "script_update_order_flags_on_map"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        
        (try_begin),
          (eq, ":update_listeners", 1),
          (team_set_order_listener, ":player_team", -1),
          (try_begin),
            (this_or_next|eq, "$g_formation_group0_selected", 1),
            (eq, "$group0_has_troops", 0),
            (this_or_next|eq, "$g_formation_group1_selected", 1),
            (eq, "$group1_has_troops", 0),
            (this_or_next|eq, "$g_formation_group2_selected", 1),
            (eq, "$group2_has_troops", 0),
            (this_or_next|eq, "$g_formation_group3_selected", 1),
            (eq, "$group3_has_troops", 0),
            (this_or_next|eq, "$g_formation_group4_selected", 1),
            (eq, "$group4_has_troops", 0),
            (this_or_next|eq, "$g_formation_group5_selected", 1),
            (eq, "$group5_has_troops", 0),
            (this_or_next|eq, "$g_formation_group6_selected", 1),
            (eq, "$group6_has_troops", 0),
            (this_or_next|eq, "$g_formation_group7_selected", 1),
            (eq, "$group7_has_troops", 0),
            (this_or_next|eq, "$g_formation_group8_selected", 1),
            (eq, "$group8_has_troops", 0),
            (team_set_order_listener, ":player_team", grc_everyone),
          (else_try),
            (eq, "$g_formation_group0_selected", 1),
            (team_set_order_listener, ":player_team", 0, 1),
          (else_try),
            (eq, "$g_formation_group1_selected", 1),
            (team_set_order_listener, ":player_team", 1, 1),
          (else_try),
            (eq, "$g_formation_group2_selected", 1),
            (team_set_order_listener, ":player_team", 2, 1),
          (else_try),
            (eq, "$g_formation_group3_selected", 1),
            (team_set_order_listener, ":player_team", 3, 1),
          (else_try),
            (eq, "$g_formation_group4_selected", 1),
            (team_set_order_listener, ":player_team", 4, 1),
          (else_try),
            (eq, "$g_formation_group5_selected", 1),
            (team_set_order_listener, ":player_team", 5, 1),
          (else_try),
            (eq, "$g_formation_group6_selected", 1),
            (team_set_order_listener, ":player_team", 6, 1),
          (else_try),
            (eq, "$g_formation_group7_selected", 1),
            (team_set_order_listener, ":player_team", 7, 1),
          (else_try),
            (eq, "$g_formation_group8_selected", 1),
            (team_set_order_listener, ":player_team", 8, 1),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
        (try_begin),
          (this_or_next|game_key_clicked, gk_group0_hear),
          (this_or_next|game_key_clicked, gk_group1_hear),
          (this_or_next|game_key_clicked, gk_group2_hear),
          (this_or_next|game_key_clicked, gk_group3_hear),
          (this_or_next|game_key_clicked, gk_group4_hear),
          (this_or_next|game_key_clicked, gk_group5_hear),
          (this_or_next|game_key_clicked, gk_group6_hear),
          (this_or_next|game_key_clicked, gk_group7_hear),
          (this_or_next|game_key_clicked, gk_group8_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (call_script, "script_update_order_panel_checked_classes"),
        (try_end),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_1),
          (this_or_next|game_key_clicked, gk_order_2),
          (this_or_next|game_key_clicked, gk_order_3),
          (this_or_next|game_key_clicked, gk_order_4),
          (this_or_next|game_key_clicked, gk_order_5),
          (game_key_clicked, gk_order_6),
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (try_for_agents, ":cur_agent"),
            (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
          (try_end),
          (presentation_set_duration, 0),
         # (start_presentation, "prsnt_troop_ratio_bar"),
        (try_end),
        ]),
      ]),
      

    ("sliders",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (create_slider_overlay, "$g_presentation_obj_sliders_1", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_2", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_3", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_4", 0, 100),
        (assign, reg1, 25),
        (str_store_string, s1, "str_reg1"),
        (create_text_overlay, "$g_presentation_obj_sliders_5", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_6", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_7", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_8", s1),
        (assign, "$g_presentation_obj_sliders_1_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_1", 25),
        (assign, "$g_presentation_obj_sliders_2_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_2", 25),
        (assign, "$g_presentation_obj_sliders_3_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_3", 25),
        (assign, "$g_presentation_obj_sliders_4_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_4", 25),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_sliders_3", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_4", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_sliders_5", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_6", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_sliders_7", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_8", pos1),
        (position_set_x, pos1, 500),
        (overlay_set_size, "$g_presentation_obj_sliders_3", pos1),
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (assign, ":val_changed", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_1_val", ":value"),
            (assign, "$g_presentation_obj_sliders_1_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_2"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_2_val", ":value"),
            (assign, "$g_presentation_obj_sliders_2_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_3"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_3_val", ":value"),
            (assign, "$g_presentation_obj_sliders_3_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_4"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_4_val", ":value"),
            (assign, "$g_presentation_obj_sliders_4_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":val_changed", 1),
          (assign, ":sum_values", 0),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_1_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_2_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_3_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_4_val"),
          (store_sub, ":difference", 100, ":sum_values"),
          (assign, ":obj_1_new_val", "$g_presentation_obj_sliders_1_val"),
          (assign, ":obj_2_new_val", "$g_presentation_obj_sliders_2_val"),
          (assign, ":obj_3_new_val", "$g_presentation_obj_sliders_3_val"),
          (assign, ":obj_4_new_val", "$g_presentation_obj_sliders_4_val"),
          (assign, ":adder", 1),
          (assign, ":between_1", 0),
          (assign, ":between_2", 100),
          (try_begin),
            (lt, ":difference", 0),
            (val_mul, ":difference", -1),
            (assign, ":adder", -1),
            (assign, ":between_1", 1),
            (assign, ":between_2", 101),
          (try_end),
          (store_sub, ":sum_non_changed_values", ":sum_values", ":value"),
          (val_add, ":sum_non_changed_values", 30),
          (try_for_range, ":unused", 0, ":difference"),
            (store_random_in_range, ":random_no", 0, ":sum_non_changed_values"),
            (try_begin),
              (neq, ":object", "$g_presentation_obj_sliders_1"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_1_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_1_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_1_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_sliders_2"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_2_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_2_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_2_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_sliders_3"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_3_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_3_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_3_new_val", ":adder"),
            (else_try),
              (is_between, ":obj_4_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_4_new_val", ":adder"),
            (else_try),
              (val_add, ":difference", 1),
            (try_end),
          (try_end),
          (assign, "$g_presentation_obj_sliders_1_val", ":obj_1_new_val"),
          (assign, "$g_presentation_obj_sliders_2_val", ":obj_2_new_val"),
          (assign, "$g_presentation_obj_sliders_3_val", ":obj_3_new_val"),
          (assign, "$g_presentation_obj_sliders_4_val", ":obj_4_new_val"),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_sliders_1", "$g_presentation_obj_sliders_1_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_2", "$g_presentation_obj_sliders_2_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_3", "$g_presentation_obj_sliders_3_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_4", "$g_presentation_obj_sliders_4_val"),
        (assign, reg1, "$g_presentation_obj_sliders_1_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_5", s1),
        (assign, reg1, "$g_presentation_obj_sliders_2_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_6", s1),
        (assign, reg1, "$g_presentation_obj_sliders_3_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_7", s1),
        (assign, reg1, "$g_presentation_obj_sliders_4_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_8", s1),
        ]),
      ]),

  ("arena_training", prsntf_read_only|prsntf_manual_end_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Number of men knocked down: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_arena_training_1", s1),
        (overlay_set_color, "$g_presentation_obj_arena_training_1", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_arena_training_1", pos1),
        (assign, reg1, 0),
        (str_store_string, s1, "@Number of men left: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_arena_training_2", s1),
        (overlay_set_color, "$g_presentation_obj_arena_training_2", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 670),
        (overlay_set_position, "$g_presentation_obj_arena_training_2", pos1),
        ]),
      (ti_on_presentation_run,
       [(get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Opponents Beaten: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_arena_training_1", s1),
        (assign, ":num_left", "$g_arena_training_max_opponents"),
        (try_for_agents, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (neg|agent_is_alive, ":agent_no"),
          (neq, ":agent_no", ":player_agent"),
          (val_sub, ":num_left", 1),
        (try_end),
        (assign, reg1, ":num_left"),
        (str_store_string, s1, "@Opponents Remaining: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_arena_training_2", s1),
        ]),
      ]),

  ("retirement", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (create_button_overlay, "$g_presentation_obj_retirement_1", "@Remain in retirement.", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_retirement_2", "@Go back to the adventuring.", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_retirement_1", pos1),
        (position_set_y, pos1, 40),
        (overlay_set_position, "$g_presentation_obj_retirement_2", pos1),
        (assign, ":total_effect", 0),
        #wealth
        (store_troop_gold, ":wealth", "trp_player"),
        (store_div, ":wealth_effect", ":wealth", 200),
        (val_add, ":total_effect", ":wealth_effect"),
        #ruled centers and friendly/enemy centers
        (assign, ":num_towns", 0),
        (assign, ":num_castles", 0),
        (assign, ":num_villages", 0),
        (assign, ":num_friendly_towns", 0),
        (assign, ":num_friendly_villages", 0),
        (assign, ":num_enemy_towns", 0),
        (assign, ":num_enemy_villages", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_get_slot, ":type", ":center_no", slot_party_type),
          (try_begin),
            (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_towns", 1),
            (else_try),
              (eq, ":type", spt_castle),
              (val_add, ":num_castles", 1),
            (else_try),
              (val_add, ":num_villages", 1),
            (try_end),
          (try_end),
          (party_get_slot, ":relation", ":center_no", slot_center_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_friendly_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_friendly_villages", 1),
            (try_end),
          (else_try),
            (le, ":relation", -40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_enemy_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_enemy_villages", 1),
            (try_end),
          (try_end),
        (try_end),
        (store_mul, ":num_towns_effect", ":num_towns", 100),
        (store_mul, ":num_castles_effect", ":num_castles", 50),
        (store_mul, ":num_villages_effect", ":num_villages", 20),
        (store_add, ":num_centers", ":num_towns", ":num_castles"),
        (val_add, ":num_centers", ":num_villages"),
        (store_add, ":ruled_centers_effect", ":num_towns_effect", ":num_castles_effect"),
        (val_add, ":ruled_centers_effect", ":num_villages_effect"),
        (val_add, ":total_effect", ":ruled_centers_effect"),
        (store_mul, ":num_friendly_towns_effect", ":num_friendly_towns", 20),
        (store_mul, ":num_friendly_villages_effect", ":num_friendly_villages", 4),
        (store_add, ":num_friendly_centers", ":num_friendly_towns", ":num_friendly_villages"),
        (store_add, ":friendly_centers_effect", ":num_friendly_towns_effect", ":num_friendly_villages_effect"),
        (val_add, ":total_effect", ":friendly_centers_effect"),
        (store_mul, ":num_enemy_towns_effect", ":num_enemy_towns", -40),
        (store_mul, ":num_enemy_villages_effect", ":num_enemy_villages", -8),
        (store_add, ":num_enemy_centers", ":num_enemy_towns", ":num_enemy_villages"),
        (store_add, ":enemy_centers_effect", ":num_enemy_towns_effect", ":num_enemy_villages_effect"),
        (val_add, ":total_effect", ":enemy_centers_effect"),
        #inventory
        (assign, ":total_item_value", 0),
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (try_for_range, ":i_inv", 0, ":capacity"),
          (troop_get_inventory_slot, ":item", "trp_player", ":i_inv"),
          (ge, ":item", 0),
          (store_item_value, ":item_value", ":item"),
          (val_add, ":total_item_value", ":item_value"),
        (try_end),
        (store_div, ":total_item_value_effect", ":total_item_value", 200),
        (val_add, ":total_effect", ":total_item_value_effect"),
        #renown
        (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
        (store_div, ":renown_effect", ":renown", 1),
        (val_add, ":total_effect", ":renown_effect"),
        #enemies and friends
        (assign, ":num_enemies", 0),
        (assign, ":num_friends", 0),
        (try_for_range, ":troop_no", heroes_begin, heroes_end),
          (this_or_next|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
          (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_lady),
          (call_script, "script_troop_get_player_relation", ":troop_no"),
          (assign, ":relation", reg0),
          #(troop_get_slot, ":relation", ":troop_no", slot_troop_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (val_add, ":num_friends", 1),
          (else_try),
            (le, ":relation", -40),
            (val_add, ":num_enemies", 1),
          (try_end),
        (try_end),
        (store_mul, ":num_friends_effect", ":num_friends", 10),
        (val_add, ":total_effect", ":num_friends_effect"),
        (store_mul, ":num_enemies_effect", ":num_enemies", -10),
        (val_add, ":total_effect", ":num_enemies_effect"),
        #current day
        (store_current_day, ":cur_day"),
        (store_div, ":cur_day_effect", ":cur_day", -1),
        (val_add, ":total_effect", ":cur_day_effect"),
        #g_total_victories
        (store_mul, ":total_victories_effect", "$g_total_victories", 2),
        (val_add, ":total_effect", ":total_victories_effect"),
        #g_total_defeats
        (store_mul, ":total_defeats_effect", "$g_total_defeats", -3),
        (val_add, ":total_effect", ":total_defeats_effect"),
        #g_total_quests_completed
        (store_mul, ":total_quests_completed_effect", "$g_total_quests_completed", 4),
        (val_add, ":total_effect", ":total_quests_completed_effect"),
        #xp
        (troop_get_xp, ":xp", "trp_player"),
        (store_div, ":xp_effect", ":xp", 5000),
        (val_add, ":total_effect", ":xp_effect"),
        #companions joined / departed
        (assign, ":num_companions_joined", 0),
        (assign, ":num_companions_departed", 0),
        (try_for_range, ":troop_no", companions_begin, companions_end),
          (try_begin),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
            (val_add, ":num_companions_joined", 1),
          (else_try),
            (troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
            (val_add, ":num_companions_departed", 1),
          (try_end),
        (try_end),
        (store_div, ":num_companions_joined_effect", ":num_companions_joined", 2),
        (val_add, ":total_effect", ":num_companions_joined_effect"),
        (store_div, ":num_companions_departed_effect", ":num_companions_departed", -4),
        (val_add, ":total_effect", ":num_companions_departed_effect"),
        #difficulty
        (get_average_game_difficulty, ":difficulty"),
        (assign, ":difficulty_effect", ":total_effect"),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (store_sub, ":difficulty_effect", ":total_effect", ":difficulty_effect"),

        (assign, reg5, ":cur_day"),
        (store_character_level, reg4, "trp_player"),
        (create_text_overlay, reg1, "@You have retired at level {reg4} after {reg5} days of adventuring.", tf_center_justify),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 950),
        (overlay_set_size, reg1, pos1),
##        (overlay_set_color, reg1, 0),
        (create_text_overlay, reg2, "@Effect on Score", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg2, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg2, pos1),
        (assign, reg0, ":num_centers"),
        (create_text_overlay, reg1, "@Settlements owned by you: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":ruled_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_friendly_centers"),
        (create_text_overlay, reg1, "@Friendly Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":friendly_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_enemy_centers"),
        (create_text_overlay, reg1, "@Hostile Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":enemy_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":num_friends"),
        (create_text_overlay, reg1, "@Friendly Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_friends_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_enemies"),
        (create_text_overlay, reg1, "@Enemy Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_enemies_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_victories"),
        (create_text_overlay, reg1, "@Victories: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_victories_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, "$g_total_defeats"),
        (create_text_overlay, reg1, "@Defeats: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_defeats_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_quests_completed"),
        (create_text_overlay, reg1, "@Quests Completed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_quests_completed_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_companions_joined"),
        (create_text_overlay, reg1, "@Companions Found: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_joined_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_companions_departed"),
        (create_text_overlay, reg1, "@Companions Lost/Departed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_departed_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":wealth"),
        (create_text_overlay, reg1, "@Wealth: {reg0} $", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":wealth_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":total_item_value"),
        (create_text_overlay, reg1, "@Inventory: {reg0} $", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_item_value_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":renown"),
        (create_text_overlay, reg1, "@Renown: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":renown_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":xp"),
        (create_text_overlay, reg1, "@Experience: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":xp_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":cur_day"),
        (create_text_overlay, reg1, "@Days Passed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":cur_day_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":difficulty"),
        (create_text_overlay, reg1, "@Difficulty: {reg0}%", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":difficulty_effect"),
        (assign, reg3, reg0),
        (val_max, reg3, 0),
        (create_text_overlay, reg1, "@{!}{reg3?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":total_effect"),
        (create_text_overlay, reg1, "@TOTAL SCORE: {reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg1, pos1),

        (assign, ":total_villages", 0),
        (assign, ":total_castles", 0),
        (assign, ":total_towns", 0),
        (assign, ":total_village_rels", 0),
        (assign, ":total_castle_rels", 0),
        (assign, ":total_town_rels", 0),
        (try_for_range, ":cur_center_no", centers_begin, centers_end),
          (try_begin),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_towns", 1),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castles", 1),
            (else_try),
              (val_add, ":total_villages", 1),
            (try_end),
          (else_try),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_town_rels", ":center_relation"),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castle_rels", ":center_relation"),
            (else_try),
              (val_add, ":total_village_rels", ":center_relation"),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (gt, ":total_towns", 0),
          (store_random_in_range, ":random_town", 0, ":total_towns"),
          (try_for_range, ":cur_center_no", towns_begin, towns_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_town", 1),
            (lt, ":random_town", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_town_rels", 0),
          (store_random_in_range, ":random_town_rel", 0, ":total_town_rels"),
          (try_for_range, ":cur_center_no", towns_begin, towns_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_town_rel", ":center_relation"),
            (lt, ":random_town_rel", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_town", towns_begin, towns_end),
          (str_store_party_name, s9, ":random_town"),
        (try_end),
        (try_begin),
          (gt, ":total_castles", 0),
          (store_random_in_range, ":random_castle", 0, ":total_castles"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_castle", 1),
            (lt, ":random_castle", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_castle_rels", 0),
          (store_random_in_range, ":random_castle_rel", 0, ":total_castle_rels"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_castle_rel", ":center_relation"),
            (lt, ":random_castle_rel", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_castle", castles_begin, castles_end),
          (str_store_party_name, s8, ":random_castle"),
        (try_end),
        (try_begin),
          (gt, ":total_villages", 0),
          (store_random_in_range, ":random_village", 0, ":total_villages"),
          (try_for_range, ":cur_center_no", villages_begin, villages_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_village", 1),
            (lt, ":random_village", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_village_rels", 0),
          (store_random_in_range, ":random_village_rel", 0, ":total_village_rels"),
          (try_for_range, ":cur_center_no", villages_begin, villages_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_village_rel", ":center_relation"),
            (lt, ":random_village_rel", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_village", villages_begin, villages_end),
          (str_store_party_name, s7, ":random_village"),
        (try_end),

        (try_begin),
          (lt, ":total_effect", 100),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 0),
          (str_store_string, s0, "str_retirement_text_1"),
        (else_try),
          (lt, ":total_effect", 200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 1),
          (str_store_string, s0, "str_retirement_text_2"),
        (else_try),
          (lt, ":total_effect", 400),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 2),
          (str_store_string, s0, "str_retirement_text_3"),
        (else_try),
          (lt, ":total_effect", 700),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 3),
          (str_store_string, s0, "str_retirement_text_4"),
        (else_try),
          (lt, ":total_effect", 1200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 4),
          (str_store_string, s0, "str_retirement_text_5"),
        (else_try),
          (lt, ":total_effect", 1850),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 5),
          (str_store_string, s0, "str_retirement_text_6"),
        (else_try),
          (lt, ":total_effect", 2500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 6),
          (str_store_string, s0, "str_retirement_text_7"),
        (else_try),
          (lt, ":total_effect", 3500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 7),
          (str_store_string, s0, "str_retirement_text_8"),
        (else_try),
          (lt, ":total_effect", 5000),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 8),
          (str_store_string, s0, "str_retirement_text_9"),
        (else_try),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 9),
          (str_store_string, s0, "str_retirement_text_10"),
        (try_end),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 360),
        (position_set_y, pos1, 190),
        (overlay_set_area_size, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_retirement_1"),
          (jump_to_menu, "mnu_end_game"),
          (start_presentation, "prsnt_game_credits"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_retirement_2"),
          (presentation_set_duration, 0),
          (change_screen_return),
        (try_end),
        ]),
     ]),

  ("budget_report", 0, mesh_load_window,
   [(ti_on_presentation_load,
     [(presentation_set_duration, 999999),
      (set_fixed_point_multiplier, 1000),
      
      # (create_mesh_overlay, reg1, "mesh_pic_payment"),
      # (position_set_x, pos1, 800),
      # (position_set_y, pos1, 800),
      # (overlay_set_size, reg1, pos1),
      # (position_set_x, pos1, 170),
      # (position_set_y, pos1, 0),
      # (overlay_set_position, reg1, pos1),
      
      (create_text_overlay, reg1, "str_weekly_budget", tf_center_justify),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 260),
      (position_set_y, pos1, 650),
      (overlay_set_position, reg1, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 100),
      (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
      (position_set_x, pos1, 505),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
      (set_container_overlay, "$g_presentation_obj_bugdet_report_container"),

      (game_get_reduce_campaign_ai, ":reduce_campaign_ai"),      
      (try_begin),
        (eq, ":reduce_campaign_ai", 0), #hard
        (assign, ":num_centers_needed_for_efficiency_loss", 2),
        (assign, ":tax_efficiency_loss_ratio_per_center", 5),
      (else_try),  
        (eq, ":reduce_campaign_ai", 1), #medium
        (assign, ":num_centers_needed_for_efficiency_loss", 4),
        (assign, ":tax_efficiency_loss_ratio_per_center", 4),
      (else_try),  
        (eq, ":reduce_campaign_ai", 2), #easy
        (assign, ":num_centers_needed_for_efficiency_loss", 6),
        (assign, ":tax_efficiency_loss_ratio_per_center", 3),
      (try_end),  

      (assign, ":num_lines", 0),
      (assign, ":num_owned_center_values_for_tax_efficiency", 0),
      (assign, ":all_centers_accumulated_total", 0),
      (assign, ":all_centers_accumulated_taxes_and_rents", 0),
      (try_for_range, ":center_no", centers_begin, centers_end),	  
	    (try_begin),
		  (party_slot_ge, ":center_no", slot_center_player_enterprise, 1),	
           (eq, 1, 2), # parabellum disabled	  
		  (val_add, ":num_lines", 1),
	    (try_end),	  
	  
        (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
        (eq, 1, 2), # parabellum disabled
        (val_add, ":num_lines", 1),
        (val_add, ":num_owned_center_values_for_tax_efficiency", 1),
        (try_begin),
          (is_between, ":center_no", towns_begin, towns_end),
          (val_add, ":num_lines", 1),
          (val_add, ":num_owned_center_values_for_tax_efficiency", 1),
        (try_end),
      (try_end),
      (try_begin),
        (gt, "$players_kingdom", 0),
        (neq, "$players_kingdom", "fac_player_supporters_faction"),
        (neq, "$players_kingdom", "fac_player_faction"),
        (eq, "$player_has_homage", 0),
        (val_add, ":num_lines", 1),
      (try_end),
	    (try_begin),
	  (gt, "$g_player_income_factories", 0),
	   (val_add, ":num_lines", 1),
	    (try_end),	
      (try_begin),      
        (gt, ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
      #gt accumulated total is ignored
        (val_add, ":num_lines", 1),
      (try_end),
      (try_for_parties, ":party_no"),
        (assign, ":garrison_troop", 0),
        (try_begin),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
			(party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (party_slot_eq, ":party_no", slot_town_lord, "trp_player"),
          (assign, ":garrison_troop", 1),
        (else_try),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
			(party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (neg|party_slot_ge, ":party_no", slot_town_lord, 1), #unassigned
		  (store_faction_of_party, ":center_faction", ":party_no"),
		  (eq, ":center_faction", "fac_player_supporters_faction"),
		  (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (assign, ":garrison_troop", 1),		  
		(try_end),
		
        (this_or_next|eq, ":party_no", "p_main_party"),
			(eq, ":garrison_troop", 1),
        (val_add, ":num_lines", 1), #include empty towns/castles
      (try_end),
      (try_begin),
        (gt, "$g_player_debt_to_party_members", 0),
        (val_add, ":num_lines", 2), #include new debt line
      (try_end),
      (val_add, ":num_lines", 3),
      (store_mul, ":cur_y", 27, ":num_lines"),
      (assign, ":net_change", 0), #this is the amount added
      (try_begin),	
		(gt, "$g_player_income_factories", 0),
		(val_add, ":net_change", "$g_player_income_factories"),
		(create_text_overlay, reg1, "@Income from factories share:", 0),
		(position_set_x, pos1, 900),
		(position_set_y, pos1, 900),
		(overlay_set_size, reg1, pos1),
		(position_set_x, pos1, 25),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg1, pos1),
		(assign, reg10, "$g_player_income_factories"),
		(create_text_overlay, reg1, "@{reg10}", tf_right_align|tf_single_line),
		(overlay_set_color, reg1, 0x00AA00),
		(position_set_x, pos1, 900),
		(position_set_y, pos1, 900),
		(overlay_set_size, reg1, pos1),
		(position_set_x, pos1, 500),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg1, pos1),
		(val_sub, ":cur_y", 27),
      (try_end),
      (try_for_range, ":center_no", centers_begin, centers_end),		
		#Enterprise
        (try_begin),
		  (party_get_slot, ":enterprise_output", ":center_no", slot_center_player_enterprise),
		  (gt, ":enterprise_output", 1),
		  (neg|party_slot_ge, ":center_no", slot_center_player_enterprise_days_until_complete, 1),
		  
          (str_store_party_name, s0, ":center_no"),
		  
		  (call_script, "script_process_player_enterprise", ":enterprise_output", ":center_no"),
		  (assign, ":net_profit", reg0),
		  (assign, ":price_of_single_output", reg4),
		  (assign, ":price_of_single_input", reg5),
		  (assign, ":price_of_secondary_input", reg10),
		  
		  (store_sub, ":town_order", ":center_no", towns_begin),
		  (store_add, ":craftsman_troop", ":town_order", "trp_town_1_master_craftsman"),

		  (item_get_slot, ":outputs_added_to_market", ":enterprise_output", slot_item_output_per_run),
		  (assign, ":outputs_added_to_warehouse", 0),
		  
		  #Enterprise impact of outputs
		  (try_begin),
		    #output placed in inventory: deduct selling price and add one good
			(party_slot_eq, ":center_no", slot_center_player_enterprise_production_order, 1),
			
			#Count empty slots
			(assign, ":empty_slots", 0),
			(troop_get_inventory_capacity, ":total_capacity", ":craftsman_troop"),
			(try_for_range, ":capacity_iterator", 0, ":total_capacity"),
				(troop_get_inventory_slot, ":slot", ":craftsman_troop", ":capacity_iterator"),
				(lt, ":slot", 1),
				(val_add, ":empty_slots", 1),
			(try_end),
			
			(assign, ":outputs_added_to_warehouse", ":outputs_added_to_market"),
			(val_min, ":outputs_added_to_warehouse",  ":empty_slots"),
			(gt, ":outputs_added_to_warehouse", 0),
			
			(store_mul, ":cancelled_sales", ":price_of_single_output", ":outputs_added_to_warehouse"),
			(val_sub, ":net_profit", ":cancelled_sales"),
			(val_sub, ":outputs_added_to_market", ":outputs_added_to_warehouse"),
		  (try_end),
		  
		  #If the transaction is for real, and not just a budget check
		  (try_begin),
		    (eq, "$g_apply_budget_report_to_gold", 1),
			(troop_add_items, ":craftsman_troop", ":enterprise_output", ":outputs_added_to_warehouse"),

			#Affect prices by outputs added to market
			(store_sub, ":item_slot_no", ":enterprise_output", trade_goods_begin),
			(val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
			(party_get_slot, ":current_index", ":center_no", ":item_slot_no"),			
			(store_mul, ":impact_on_price", ":outputs_added_to_market", 15),
			(val_sub, ":current_index", ":impact_on_price"),
			(party_set_slot, ":center_no", ":item_slot_no",":current_index"),			
						
			(gt, "$cheat_mode", 0),
			(str_store_troop_name, s3, ":craftsman_troop"),
			(assign, reg3, ":outputs_added_to_warehouse"),
			(display_message, "@{!}DEBUG -- Adding {reg3} items to {s3}"),
		  (try_end),
		  
		  #Enterprise impact of outputs
		  (item_get_slot, ":inputs_taken_from_market", ":enterprise_output", slot_item_input_number),		  
		  (try_begin),
			(item_slot_ge, ":enterprise_output", slot_item_secondary_raw_material, 1),
		    (assign, ":2ary_inputs_taken_from_market", ":inputs_taken_from_market"),
		  (else_try),
		    (assign, ":2ary_inputs_taken_from_market", 0),
		  (try_end),
		  
		  (assign, ":inputs_taken_from_warehouse", 0),
		  (assign, ":2ary_inputs_taken_from_warehouse", 0),
		  
		  (try_begin),
		    #input present in inventory: reimburse for input cost and remove one good
			(troop_get_inventory_capacity, ":total_capacity", ":craftsman_troop"),
			(try_for_range, ":capacity_iterator", 0, ":total_capacity"),
				(troop_get_inventory_slot, ":item_in_slot", ":craftsman_troop", ":capacity_iterator"),
			
				(lt, ":inputs_taken_from_warehouse", ":inputs_taken_from_market"),
				(item_slot_eq, ":enterprise_output", slot_item_primary_raw_material, ":item_in_slot"),
                #(troop_inventory_slot_get_item_amount, ":item_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(troop_inventory_slot_get_item_max_amount, ":item_max_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(eq, ":item_ammo", ":item_max_ammo"),
				
				(val_add, ":inputs_taken_from_warehouse", 1),
			(else_try),	
				(lt, ":2ary_inputs_taken_from_warehouse", ":2ary_inputs_taken_from_market"),
				(item_slot_eq, ":enterprise_output", slot_item_secondary_raw_material, ":item_in_slot"),
                #(troop_inventory_slot_get_item_amount, ":item_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(troop_inventory_slot_get_item_max_amount, ":item_max_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(eq, ":item_ammo", ":item_max_ammo"),

				(val_add, ":2ary_inputs_taken_from_warehouse", 1),
			(try_end),
		  
		    (try_begin),
				(gt, ":inputs_taken_from_warehouse", 0),
				(val_sub, ":inputs_taken_from_market", ":inputs_taken_from_warehouse"),
				(store_mul, ":savings_from_warehoused_inputs",	":price_of_single_input", ":inputs_taken_from_warehouse"),
				(val_add, ":net_profit", ":savings_from_warehoused_inputs"),
			(try_end),	
		    (try_begin),
				(gt, ":2ary_inputs_taken_from_warehouse", 0),
				(val_sub, ":2ary_inputs_taken_from_market", ":2ary_inputs_taken_from_warehouse"),
				(assign, ":savings_from_warehoused_inputs",	":price_of_secondary_input"),
				(val_add, ":net_profit", ":savings_from_warehoused_inputs"),
			(try_end),					
		  (try_end),
		  
		  #If the transaction is for real, and not just a budget check
		  (try_begin),
		    (eq, "$g_apply_budget_report_to_gold", 1),
			(item_get_slot, ":raw_material", ":enterprise_output", slot_item_primary_raw_material),
			(troop_remove_items, ":craftsman_troop", ":raw_material", ":inputs_taken_from_warehouse"),
			(item_get_slot, ":secondary_raw_material", ":enterprise_output", slot_item_secondary_raw_material),
			(troop_remove_items, ":craftsman_troop", ":secondary_raw_material", ":2ary_inputs_taken_from_warehouse"),
			
			#Affect prices by intputs added to market
			(store_sub, ":item_slot_no", ":raw_material", trade_goods_begin),
			(val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
			(party_get_slot, ":current_index", ":center_no", ":item_slot_no"),			
			(store_mul, ":impact_on_price", ":outputs_added_to_market", 15),
			(val_add, ":current_index", ":impact_on_price"),
			(party_set_slot, ":center_no", ":item_slot_no",":current_index"),			
			
			(try_begin),
				(gt, ":2ary_inputs_taken_from_market", 0),
				(store_sub, ":item_slot_no", ":secondary_raw_material", trade_goods_begin),
				(val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
				(party_get_slot, ":current_index", ":center_no", ":item_slot_no"),			
				(val_add, ":current_index", 15),
				(party_set_slot, ":center_no", ":item_slot_no",":current_index"),			
			(try_end),
		  (try_end),		  
		  		  
		  (call_script, "script_get_enterprise_name", ":enterprise_output"),
		  (str_store_string, s5, reg0),
		  
          (create_text_overlay, reg1, "str_enterprise_s5_at_s0", 0),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 25),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
		  
          (assign, reg0, ":net_profit"),
		  
		  #Enterprise revenue strings
          (try_begin),
     	    (store_faction_of_party, ":faction_no", ":center_no"),
		    (store_relation, ":relation", ":faction_no", "$players_kingdom"),
		    (lt, ":relation", 0),
		    (assign, reg0, 0), 
		    (assign, ":net_profit", 0), 
		  
            (create_text_overlay, reg1, "str_under_sequestration", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0xFF0000),		  
		  (else_try),
		    (ge, reg0, 0), 
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
          (else_try),
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0xFF0000),
          (try_end),
		  
          (val_add, ":all_centers_accumulated_total", ":net_profit"),
          (val_add, ":net_change", ":net_profit"),		  
		  
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (val_sub, ":cur_y", 27),
        (try_end),

		#Enterprise ends, taxes begin
        (eq, 1, 2), # parabellum disabled
        (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
        (party_get_slot, ":accumulated_rents", ":center_no", slot_center_accumulated_rents),
        (party_get_slot, ":accumulated_tariffs", ":center_no", slot_center_accumulated_tariffs),
		
        (store_add, ":accumulated_total", ":accumulated_rents", ":accumulated_tariffs"),
        (val_add, ":all_centers_accumulated_total", ":accumulated_total"),
        (val_add, ":all_centers_accumulated_taxes_and_rents", ":accumulated_total"),
        (val_add, ":net_change", ":accumulated_total"),
        (str_store_party_name, s0, ":center_no"),
        (create_text_overlay, reg1, "str_rents_from_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, ":accumulated_rents", 0),
          (assign, reg0, ":accumulated_rents"),
          (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
          (overlay_set_color, reg1, 0x00AA00),
        (else_try),
          (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
		
        (try_begin),
          (is_between, ":center_no", towns_begin, towns_end),
          (create_text_overlay, reg1, "str_tariffs_from_s0", 0),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 25),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (try_begin),
            (gt, ":accumulated_tariffs", 0),
            (assign, reg0, ":accumulated_tariffs"),
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
          (else_try),
            (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
          (try_end),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (val_sub, ":cur_y", 27),
        (try_end),								
      (try_end),

      (try_begin),
        (gt, "$players_kingdom", 0),
        (neq, "$players_kingdom", "fac_player_faction"),
        (str_store_faction_name, s0, "$players_kingdom"),
        (create_text_overlay, reg1, "str_mercenary_payment_from_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (assign, ":rank", "$pas_enlistment_rank"),
        (val_add, ":rank", 1),
        (val_mul, ":rank", ":rank"),
        (store_mul, reg0, ":rank", 50),
        (val_max, reg0, 100),
        (assign, ":offer_value", reg0),
        (val_div, ":offer_value", 2),
        (val_add, ":offer_value", 30),
        (val_add, ":net_change", reg0),
			(try_begin),
			(eq, "$players_kingdom", "fac_player_supporters_faction"),
			(assign, ":net_change", 10000),
			(try_end),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0x00AA00),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      
      (try_begin),
        (gt, ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
        (gt, ":all_centers_accumulated_total", 0),
        (store_sub, ":ratio_lost", ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
        (val_mul, ":ratio_lost", ":tax_efficiency_loss_ratio_per_center"),
        (val_min, ":ratio_lost", 65),
                
        #(store_mul, ":tax_lost", ":all_centers_accumulated_total", ":ratio_lost"),
        (store_mul, ":tax_lost", ":all_centers_accumulated_taxes_and_rents", ":ratio_lost"),
        (val_div, ":tax_lost", 100),
        (val_sub, ":net_change", ":tax_lost"),
        (create_text_overlay, reg1, "str_loss_due_to_tax_inefficiency", 0),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (store_mul, reg0, ":tax_lost", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),

      (try_for_parties, ":party_no"),
        (assign, ":garrison_troop", 0),
        (try_begin),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
          (party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (party_slot_eq, ":party_no", slot_town_lord, "trp_player"),
          (assign, ":garrison_troop", 1),
		(else_try),  
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
			(party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (neg|party_slot_ge, ":party_no", slot_town_lord, 1), #unassigned
		  (store_faction_of_party, ":center_faction", ":party_no"),
		  (eq, ":center_faction", "fac_player_supporters_faction"),
		  (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (assign, ":garrison_troop", 1),			  
        (try_end),
		
        (eq, ":party_no", "p_main_party"),
        (assign, ":total_wage", 0),
        (party_get_num_companion_stacks, ":num_stacks", ":party_no"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop", ":party_no", ":i_stack"),
          (party_stack_get_size, ":stack_size", ":party_no", ":i_stack"),
          (call_script, "script_game_get_troop_wage", ":stack_troop", ":party_no"),
          (assign, ":cur_wage", reg0),
          (val_mul, ":cur_wage", ":stack_size"),
          (val_add, ":total_wage", ":cur_wage"),
        (try_end),
        (try_begin),
          (eq, ":garrison_troop", 1),
          (val_div, ":total_wage", 2), #Half payment for garrisons
        (else_try),
          (eq, ":party_no", "p_main_party"),
          (store_sub, ":total_payment_ratio", 14, "$g_cur_week_half_daily_wage_payments"), #between 0 and 7
          (val_mul, ":total_wage", ":total_payment_ratio"),
          (val_div, ":total_wage", 14),
        (try_end),
##        (gt, ":total_wage", 0),
        (val_mul, ":total_wage", -1),
        (val_add, ":net_change", ":total_wage"),
        (str_store_party_name, s0, ":party_no"),
        (try_begin),
          (eq, ":party_no", "p_main_party"),
          (str_store_string, s0, "str_s0s_party"),
        (try_end),
        (create_text_overlay, reg1, "str_wages_for_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, ":total_wage", 0),
          (assign, reg0, ":total_wage"),
          (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
          (overlay_set_color, reg1, 0xFF0000),
        (else_try),
          (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),

      (try_begin),
        (gt, "$g_player_debt_to_party_members", 0),
        (val_sub, ":net_change", "$g_player_debt_to_party_members"),
        (create_text_overlay, reg1, "str_earlier_debts", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (store_mul, reg0, "$g_player_debt_to_party_members", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      (create_mesh_overlay, reg1, "mesh_white_plane"),
      (overlay_set_color, reg1, 0x000000),
      (position_set_x, pos1, 24000),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (store_add, ":line_y", ":cur_y", 25),
      (position_set_y, pos1, ":line_y"),
      (overlay_set_position, reg1, pos1),
      (create_text_overlay, reg1, "str_net_change", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (assign, reg0, ":net_change"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (try_begin),
        (gt, reg0, 0),
        (overlay_set_color, reg1, 0x00AA00),
      (else_try),
        (lt, reg0, 0),
        (overlay_set_color, reg1, 0xFF0000),
      (try_end),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      (create_text_overlay, reg1, "str_earlier_wealth", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (store_troop_gold, ":player_wealth", "trp_player"),
      (assign, reg0, ":player_wealth"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      (val_mul, ":net_change", -1),
      (try_begin),
        (ge, ":player_wealth", ":net_change"),
        (assign, ":player_wealth_dif", ":net_change"),
        (assign, ":player_new_debt_to_party_members", 0),
      (else_try),
        (assign, ":player_wealth_dif", ":player_wealth"),
        (store_sub, ":player_new_debt_to_party_members", ":net_change", ":player_wealth"),
      (try_end),
      (create_text_overlay, reg1, "str_new_wealth", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (store_sub, reg0, ":player_wealth", ":player_wealth_dif"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),

      (try_begin),
        (gt, ":player_new_debt_to_party_members", 0),
        (create_text_overlay, reg1, "str_new_debts", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":player_new_debt_to_party_members"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
        (neq, "$g_apply_budget_report_to_gold", 0),
        (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_unpaid"),
      (try_end),

      (set_container_overlay, -1),

      (create_button_overlay, "$g_presentation_obj_budget_report_1", "@Continue..."),
      (position_set_x, pos1, 225),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_budget_report_1", pos1),

      (try_begin),
        (eq, "$g_apply_budget_report_to_gold", 1),
		(assign, "$g_player_income_factories", 0),
        (assign, "$g_player_debt_to_party_members", ":player_new_debt_to_party_members"),
        (try_begin),
          (gt, ":player_wealth_dif", 0),
          (troop_remove_gold, "trp_player", ":player_wealth_dif"),
        (else_try),
          (val_mul, ":player_wealth_dif", -1),
          (troop_add_gold, "trp_player", ":player_wealth_dif"),
        (try_end),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
          (party_set_slot, ":center_no", slot_center_accumulated_rents, 0),
          (party_set_slot, ":center_no", slot_center_accumulated_tariffs, 0),
        (try_end),
        (assign, "$g_cur_week_half_daily_wage_payments", 0),#Reseting the weekly half wage payments
      (try_end),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_budget_report_1"),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),


  ("game_before_quit", 0, mesh_load_window2,
   [
     (ti_on_presentation_load,
      [
        (try_begin),
          (is_trial_version),
          (set_fixed_point_multiplier, 1000),
          (create_mesh_overlay, reg0, "mesh_quit_adv"),
          (position_set_x, pos1, -1),
          (position_set_y, pos1, -1),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 1002),
          (position_set_y, pos1, 1002),
          (overlay_set_size, reg0, pos1),
          (assign, "$g_game_before_quit_state", 0),
          (presentation_set_duration, 999999),
        (try_end),
      ]),
     (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (gt, ":cur_time", 500),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (this_or_next|key_clicked, key_right_mouse_button),
          (this_or_next|key_clicked, key_xbox_ltrigger),
          (key_clicked, key_xbox_rtrigger),
          (try_begin),
            (eq, "$g_game_before_quit_state", 0),
            (val_add, "$g_game_before_quit_state", 1),
            (create_mesh_overlay, reg0, "mesh_quit_adv_b"),
            (position_set_x, pos1, -1),
            (position_set_y, pos1, -1),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 1002),
            (position_set_y, pos1, 1002),
            (overlay_set_size, reg0, pos1),
          (else_try),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
     ]),

  ("multiplayer_duel_start_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_duel_start_counter_overlay", -1),
      (assign, "$g_multiplayer_last_duel_start_counter_value", -1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_duel_start_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_duel_start_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_duel_start_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_duel_start_counter_overlay", pos1),

      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_duel_start_counter_overlay", 0),
      (store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_past_in_duel_start", ":current_time", "$g_multiplayer_duel_start_time"),
      (store_sub, ":seconds_left_in_duel_start", 3, ":seconds_past_in_duel_start"),
      (try_begin),
        (le, ":seconds_left_in_duel_start", 0),
        (presentation_set_duration, 0),
      (else_try),
        (neq, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
        (assign, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
        (assign, reg0, ":seconds_left_in_duel_start"),
        (str_store_string, s0, "str_duel_starts_in_reg0_seconds"),
        (overlay_set_text, "$g_multiplayer_duel_start_counter_overlay", s0),
      (try_end),
      ]),
    ]),

    #INVASION MODE START
	("multiplayer_flag_projection_display_ccoop", prsntf_read_only|prsntf_manual_end_only, 0, [
      (ti_on_presentation_load, 
      [
        (set_fixed_point_multiplier, 1000),
      
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", "mesh_prison_cart_pos"),
        
        (position_set_x, pos1, 69),
        (position_set_y, pos1, 92),
        (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (presentation_set_duration, 999999),
        ]),
        
      (ti_on_presentation_run,
      [
	    (try_begin),
	    
	  	  # hide flag
	      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
	  	
	  	  # if prison cart is visible
	  	  #(scene_prop_get_instance, ":prison_cart", "spr_prison_cart", 0),
	  	  #(scene_prop_get_visibility, ":is_prison_cart_visible", ":prison_cart"),
	  	  #(eq, ":is_prison_cart_visible", 1),
		  (gt, "$g_prison_cart_point", 0), # if prison cart visible
	  	  
		  # get the avarage position of two cart doors
		  (scene_prop_get_instance, ":prison_cart_door_left", "spr_prison_cart_door_left", 0),
	  	  (scene_prop_get_instance, ":prison_cart_door_right", "spr_prison_cart_door_right", 0),
	  	  (prop_instance_get_position, pos1, ":prison_cart_door_left"),
	  	  (prop_instance_get_position, pos2, ":prison_cart_door_right"),
		  (call_script, "script_avarage_of_two_points"),
		  (position_move_z, pos1, 50, 1),
	  	  
	  	  #(prop_instance_get_position, pos1, ":prison_cart"),
	  	  #(position_move_z, pos1, 200, 1),
	  	  (position_get_screen_projection, pos3, pos1),
          (position_get_x, ":x_pos", pos3),
          (position_get_y, ":y_pos", pos3),
          (try_begin),
            (is_between, ":x_pos", -100, 1100),
            (is_between, ":y_pos", -100, 850),
	  	  
	  	    # show flag if its on screen
	  	    (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
	  	    (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
	  	  (try_end),
	  	
	    (try_end),
      
        ]),
      ]),
	  
	  
	# MCA  display flag over wave spawn points
	("multiplayer_flag_projection_display_ccoop_wave", prsntf_read_only|prsntf_manual_end_only, 0, 
	[
		(ti_on_presentation_load, 
		[
			(set_fixed_point_multiplier, 1000),
			
			(assign, ":enemy_spawn_entry_point_1", -1),
			(assign, ":enemy_spawn_entry_point_2", -1),
			
			(troop_get_slot, ":num_bot_types", "trp_multiplayer_data", multi_data_ccoop_wave_spawn_data_begin),
			(try_for_range, ":cur_bot_type", 0, ":num_bot_types"),
				(store_mul, ":cur_slot", ":cur_bot_type", 3),
				(val_add, ":cur_slot", multi_data_ccoop_wave_spawn_data_begin + 2),
				(troop_get_slot, ":cur_bot_spawn_amount", "trp_multiplayer_data", ":cur_slot"),
				(val_add, ":cur_slot", 1),
				(troop_get_slot, ":cur_bot_entry_point", "trp_multiplayer_data", ":cur_slot"),
				(gt, ":cur_bot_spawn_amount", 0),
				(try_begin),
					(neq, ":enemy_spawn_entry_point_1", -1),
					(neq, ":enemy_spawn_entry_point_1", ":cur_bot_entry_point"),
					(assign, ":enemy_spawn_entry_point_2", ":cur_bot_entry_point"),
				(else_try),
					(assign, ":enemy_spawn_entry_point_1", ":cur_bot_entry_point"),
				(try_end),
			(try_end),

			(try_begin),
				(gt, ":enemy_spawn_entry_point_1", 0),
				(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", "mesh_incoming_enemy"),
				(position_set_x, pos1, 250),
				(position_set_y, pos1, 250),
				(overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
				(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
			(try_end),
			
			(try_begin),
				(gt, ":enemy_spawn_entry_point_2", 0),
				(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", "mesh_incoming_enemy"),
				(position_set_x, pos1, 250),
				(position_set_y, pos1, 250),
				(overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
				(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
			(try_end),
			
			(presentation_set_duration, 999999),			
		]),

		(ti_on_presentation_run,
		[
			(assign, ":enemy_spawn_entry_point_1", -1),
			(assign, ":enemy_spawn_entry_point_2", -1),
			
			(troop_get_slot, ":num_bot_types", "trp_multiplayer_data", multi_data_ccoop_wave_spawn_data_begin),
			(try_for_range, ":cur_bot_type", 0, ":num_bot_types"),
				(store_mul, ":cur_slot", ":cur_bot_type", 3),
				(val_add, ":cur_slot", multi_data_ccoop_wave_spawn_data_begin + 2),
				(troop_get_slot, ":cur_bot_spawn_amount", "trp_multiplayer_data", ":cur_slot"),
				(val_add, ":cur_slot", 1),
				(troop_get_slot, ":cur_bot_entry_point", "trp_multiplayer_data", ":cur_slot"),
				(gt, ":cur_bot_spawn_amount", 0),
				(try_begin),
					(neq, ":enemy_spawn_entry_point_1", -1),
					(neq, ":enemy_spawn_entry_point_1", ":cur_bot_entry_point"),
					(assign, ":enemy_spawn_entry_point_2", ":cur_bot_entry_point"),
				(else_try),
					(assign, ":enemy_spawn_entry_point_1", ":cur_bot_entry_point"),
				(try_end),
			(try_end),
			
			(try_begin),
				(this_or_next|gt, ":enemy_spawn_entry_point_1", 0),
				(gt, ":enemy_spawn_entry_point_2", 0),
				
				(try_begin),
					(gt, ":enemy_spawn_entry_point_1", 0),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),			
					
					(entry_point_get_position, pos1, ":enemy_spawn_entry_point_1"),	
					(position_move_z, pos1, 150, 1),
					(position_get_screen_projection, pos3, pos1),
					(position_get_x, ":x_pos", pos3),
					(position_get_y, ":y_pos", pos3),
					(is_between, ":x_pos", -100, 1100),
					(is_between, ":y_pos", -100, 850),

					# show flag if its on screen
					(overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
				(try_end),
				
				(try_begin),
					(gt, ":enemy_spawn_entry_point_2", 0),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
					
					(entry_point_get_position, pos1, ":enemy_spawn_entry_point_2"),
					(position_move_z, pos1, 50, 1),
					(position_get_screen_projection, pos3, pos1),
					(position_get_x, ":x_pos", pos3),
					(position_get_y, ":y_pos", pos3),
					
					(is_between, ":x_pos", -100, 1100),
					(is_between, ":y_pos", -100, 850),

					# show flag if its on screen
					(overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
				(try_end),
			(else_try),
				(presentation_set_duration, 0),
			(try_end),
		]),
    ]),	

  ("coop_assign_drop_to_group_member", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
     
      (assign, ":item_id", reg0),
      (assign, ":living_companion_1", reg1),
      (assign, ":living_companion_2", reg2),
      
      (play_sound, "snd_draw_shield"),
      

        
      

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),
      
      (create_mesh_overlay, reg0, "mesh_ccoop_drop_chest_top"),
      (position_set_x, pos1, 387),
      (position_set_y, pos1, 474),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 562),
      (position_set_y, pos1, 374),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay_with_item_id, reg0, ":item_id"),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 450),
      (overlay_set_position, reg0, pos1),
      (position_set_y, pos1, 528),
      (overlay_animate_to_position, reg0, 400, pos1),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1200),
      (overlay_set_size, reg0, pos1),
      
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1200),
      #(overlay_animate_to_size, reg0, 400, pos1),
      
      
      (create_mesh_overlay, reg0, "mesh_ccoop_drop_chest_bottom"),
      (position_set_x, pos1, 387),
      (position_set_y, pos1, 375),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 562),
      (position_set_y, pos1, 250),
      (overlay_set_size, reg0, pos1),


      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_assign_drop_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 75),
      (overlay_set_position, "$g_presentation_obj_assign_drop_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 550),
      (overlay_set_area_size, "$g_presentation_obj_assign_drop_container", pos1),
      (set_container_overlay, "$g_presentation_obj_assign_drop_container"),

      (create_text_overlay, reg0, "str_ccoop_assign_drop", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 500),
      (overlay_set_position, reg0, pos1),

      (set_container_overlay, -1),

      (assign, ":cur_y", 355),
      
      (str_store_item_name_plural, s0, ":item_id"),

      (val_sub, ":cur_y", 3),
      
      (create_text_overlay, reg0, s0, tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      
      (val_sub, ":cur_y", 25),
      
      (store_sub, ":item_string_index", ":item_id", coop_drops_begin),
      (val_add, ":item_string_index", coop_drops_descriptions_begin),
      (try_begin),
        (is_between, ":item_string_index", coop_drops_descriptions_begin, coop_drops_descriptions_end),
        (str_store_string, s0, ":item_string_index"),
      (else_try),
        (str_clear, s0),
      (try_end),
      
      (create_text_overlay, reg0, s0, tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      
      
      (multiplayer_get_my_player, ":player_id"),
      (str_store_player_username, s0, ":player_id"),
      
      (val_sub, ":cur_y", 176),
      
      (try_begin),
        (ge, ":living_companion_1", 0),
        (ge, ":living_companion_2", 0),
        (assign, ":cur_x", 270),
      (else_try),
        (this_or_next|ge, ":living_companion_1", 0),
        (ge, ":living_companion_2", 0),
        (assign, ":cur_x", 331),
      (else_try),
        (assign, ":cur_x", 393),
      (try_end),
     
      (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_coop_assign_drop_player", -1, "tableau_coop_companion_select_0", -1),
      (overlay_set_tooltip, "$g_presentation_obj_coop_assign_drop_player", s0),
      (overlay_set_color, "$g_presentation_obj_coop_assign_drop_player", 0xFFFFFF),
      (position_set_x, pos1, ":cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_coop_assign_drop_player", pos1),
      (position_set_x, pos1, 563),
      (position_set_y, pos1, 750),
      (overlay_set_size, "$g_presentation_obj_coop_assign_drop_player", pos1),
      
      
      (try_begin),
        (ge, ":living_companion_1", 0),
        (val_add, ":cur_x", 123),
        (assign, "$g_coop_assign_drop_companion_1", ":living_companion_1"),
        (agent_get_troop_id, ":troop_id", ":living_companion_1"),
        (str_store_troop_name, s0, ":troop_id"),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_coop_assign_drop_companion_1", -1, "tableau_coop_companion_select_0", ":troop_id"),
        (overlay_set_tooltip, "$g_presentation_obj_coop_assign_drop_companion_1", s0),

        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_coop_assign_drop_companion_1", pos1),
        (position_set_x, pos1, 563),
        (position_set_y, pos1, 750),
        (overlay_set_size, "$g_presentation_obj_coop_assign_drop_companion_1", pos1),
      (try_end),
      
      
      (try_begin),
        (ge, ":living_companion_2", 0),
        (val_add, ":cur_x", 123),
        (assign, "$g_coop_assign_drop_companion_2", ":living_companion_2"),
        (agent_get_troop_id, ":troop_id", ":living_companion_2"),
        (str_store_troop_name, s0, ":troop_id"),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_coop_assign_drop_companion_2", -1, "tableau_coop_companion_select_0", ":troop_id"),
        (overlay_set_tooltip, "$g_presentation_obj_coop_assign_drop_companion_2", s0),

        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_coop_assign_drop_companion_2", pos1),
        (position_set_x, pos1, 563),
        (position_set_y, pos1, 750),
        (overlay_set_size, "$g_presentation_obj_coop_assign_drop_companion_2", pos1),
      (try_end),
      
      (val_sub, ":cur_y", escape_menu_item_height),
      
      (val_sub, ":cur_y", 2),
      
      (create_button_overlay, "$g_presentation_obj_coop_assign_drop_noone", "str_noone", 0),
      (overlay_set_color, "$g_presentation_obj_coop_assign_drop_noone", 0xFFFFFF),
      (position_set_x, pos1, 645),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_coop_assign_drop_noone", pos1),
      (presentation_set_duration, 999999),
      
		]),
        
      
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_coop_assign_drop_player"),
        (multiplayer_send_2_int_to_server, multiplayer_event_other_events, multiplayer_event_coop_send_drop_assignment_to_server, 0),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_coop_assign_drop_companion_1"),
        (multiplayer_send_2_int_to_server, multiplayer_event_other_events, multiplayer_event_coop_send_drop_assignment_to_server, "$g_coop_assign_drop_companion_1"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_coop_assign_drop_companion_2"),
        (multiplayer_send_2_int_to_server, multiplayer_event_other_events, multiplayer_event_coop_send_drop_assignment_to_server, "$g_coop_assign_drop_companion_2"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_coop_assign_drop_noone"),
        (multiplayer_send_2_int_to_server, multiplayer_event_other_events, multiplayer_event_coop_send_drop_assignment_to_server, -1),
        (presentation_set_duration, 0),
      (try_end),
      ]),
      
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (close_item_details),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
	    (key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
        (multiplayer_send_2_int_to_server, multiplayer_event_other_events, multiplayer_event_coop_send_drop_assignment_to_server, -1),
      (try_end),
      ]),
    ]),	
    #INVASION MODE END
    #INVASION MODE START
	#MCA: ccoop next wave counter presentation 
	
	("multiplayer_ccoop_next_wave_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_respawn_counter_overlay", -1),
      (assign, "$g_multiplayer_respawn_remained_overlay", -1),
      
      (assign, "$g_multiplayer_last_respawn_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_respawn_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_respawn_counter_overlay", pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_remained_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_remained_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 570),
      (overlay_set_position, "$g_multiplayer_respawn_remained_overlay", pos1),
      (position_set_x, pos1, 1400),
      (position_set_y, pos1, 1400),
      (overlay_set_size, "$g_multiplayer_respawn_remained_overlay", pos1),
	  
	  (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_wave_hint_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_wave_hint_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 480),
      (overlay_set_position, "$g_multiplayer_respawn_wave_hint_overlay", pos1),
      (position_set_x, pos1, 1400),
      (position_set_y, pos1, 1400),
      (overlay_set_size, "$g_multiplayer_respawn_wave_hint_overlay", pos1),
      
      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_respawn_counter_overlay", 0),      
      (store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_left_in_respawn", "$g_multiplayer_ccoop_next_wave_start_time", ":current_time"),
      (try_begin),            
        (gt, ":seconds_left_in_respawn", 0),
		(gt, "$g_multiplayer_ccoop_wave_no", 0),
        (assign, reg0, ":seconds_left_in_respawn"),
		(store_sub, reg1, "$g_multiplayer_ccoop_wave_no", "$g_mp_coop_last_king_wave"),
		
		(str_store_string, s1, "str_blank_string"),
		(try_begin),
		  (troop_get_slot, ":wave_leader_id", "trp_multiplayer_data", multi_data_ccoop_wave_spawn_data_begin + 1),
		  (try_begin),         
		    (this_or_next|is_between, ":wave_leader_id", lords_begin, lords_end),
		    (is_between, ":wave_leader_id", quick_battle_troops_begin, quick_battle_troops_end),

		    (str_store_troop_name, s0, ":wave_leader_id"),
		    (str_store_string, s1, "str_ccoop_lord_s0_wave_hint"),
		  (else_try),
		    (is_between, ":wave_leader_id", kings_begin, kings_end),

		    (str_store_troop_name, s0, ":wave_leader_id"),
		    (str_store_string, s1, "str_ccoop_king_s0_wave_hint"),
		  (try_end),
		  (str_store_string, s0, "str_ccoop_wave_reg1_is_coming_in_reg0_seconds"),
		(else_try),
		  (ge, "$g_mp_coop_king_waves", 1), # wave++
          (assign, reg2, "$g_mp_coop_king_waves"),
		  (str_store_string, s0, "str_ccoop_elite_wave_reg1_is_coming_in_reg0_seconds"),
		  (try_begin),         
		    (gt, reg1, 0),
		    (lt, reg1, 4),
		    (str_store_string, s1, "str_elite_wave_hint"),
		  (try_end),
		(try_end),
		
        (overlay_set_text, "$g_multiplayer_respawn_counter_overlay", s0),#TODO SARI, bunu sadece bu fonkda setle
		(overlay_set_text, "$g_multiplayer_respawn_wave_hint_overlay", s1),
	  (else_try),
	    (multiplayer_get_my_player, ":cur_player"),
	    (player_is_active, ":cur_player"),
		(player_get_agent_id, ":player_agent", ":cur_player"),
		(ge, ":player_agent", 0),
		(agent_get_team, ":player_team", ":player_agent"),
		(lt, ":player_team", multi_team_spectator),
		(neg|agent_is_alive, ":player_agent"), #if agent is dead
		
		(player_get_slot, ":player_first_spawn", ":cur_player", slot_player_first_spawn),
		(try_begin),
		  (ge, ":player_first_spawn", 0),
		  (str_store_string, s0, "str_ask_for_help_to_respawn_hint"),
		(else_try),
		  (str_store_string, s0, "str_wait_for_next_turn_to_respawn_hint"),
		(try_end),
	    (overlay_set_text, "$g_multiplayer_respawn_counter_overlay", s0),
	  (else_try),
	    (presentation_set_duration, 0),
      (try_end),     
      ]),
    ]),
    
	("multiplayer_ccoop_victory_message", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      #(assign, "$g_multiplayer_respawn_counter_overlay", -1),
      #(assign, "$g_multiplayer_respawn_remained_overlay", -1),
      #
      #(assign, "$g_multiplayer_last_respawn_counter_value", -1),
      (team_get_faction, ":wave_faction", 1),
      (str_store_faction_name, s0, ":wave_faction"),
      (try_begin),
        (is_between, ":wave_faction", kingdoms_begin, kingdoms_end),
        (assign, reg1, 0),
      (else_try),
        (assign, reg1, 1),
      (try_end),
      
      (try_begin),
        (ge, "$g_multiplayer_ccoop_difficulty_string_i", 0),
        (str_store_string, s1, "$g_multiplayer_ccoop_difficulty_string_i"),
        (str_store_string, s2, "str_ccoop_s0_enemy_defeated_s1"),
      (else_try),
        (str_store_string, s2, "str_ccoop_s0_enemy_defeated_endless_reg0"),
      (try_end),
        

      (create_text_overlay, "$g_multiplayer_ccoop_victory_overlay", "str_ccoop_victory", tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_ccoop_victory_overlay", 0x68eb4e),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_ccoop_victory_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_ccoop_victory_overlay", pos1),
	  
      (create_text_overlay, "$g_multiplayer_ccoop_victory_subtitle_overlay", s2, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_ccoop_victory_subtitle_overlay", 0x68eb4e),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 480),
      (overlay_set_position, "$g_multiplayer_ccoop_victory_subtitle_overlay", pos1),
      (position_set_x, pos1, 1400),
      (position_set_y, pos1, 1400),
      (overlay_set_size, "$g_multiplayer_ccoop_victory_subtitle_overlay", pos1),
      
      (presentation_set_duration, 2000),
      ]),
  
    (ti_on_presentation_run, [
      (is_presentation_active, "prsnt_multiplayer_ccoop_next_wave_time_counter"),      
      (presentation_set_duration, 0), 
      ]),
    ]),
    #INVASION MODE END

("prebattle_custom_deployment", 0, mesh_load_window2, [
(ti_on_presentation_load,
[
(presentation_set_duration, 999999),
(set_fixed_point_multiplier, 1000),

(create_game_button_overlay, "$overlay_button_back", "@Back", tf_center_justify),
(position_set_x, pos1, 500), (position_set_y, pos1, 50), (overlay_set_position, "$overlay_button_back", pos1),

(assign, ":x", 500),
(assign, ":y", 600),
	(try_for_range, ":company_number", 0, 8),
	(create_combo_label_overlay, ":overlay"),
	(troop_set_slot, "trp_array_1", ":company_number", ":overlay"),
	(position_set_x, pos1, ":x"), (position_set_y, pos1, ":y"), (overlay_set_position, ":overlay", pos1),
	(overlay_add_item, ":overlay", "@Empty"),
		(try_for_range, ":company_type", pbs_troop_type_line, pbs_troop_type_howitzers+1),
		(call_script, "script_company_type_get_name", ":company_type", s1),
		(overlay_add_item, ":overlay", s1),
		(try_end),
		(try_begin),
		(call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_modernartillery),
		(call_script, "script_company_type_get_name", pbs_troop_type_heavyhowitzers, s1),
		(overlay_add_item, ":overlay", s1),
		(try_end),
		(try_begin),
		(call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_infantrymgtactics),
		(call_script, "script_company_type_get_name", pbs_troop_type_mg, s1),
		(overlay_add_item, ":overlay", s1),
		(try_end),
		(try_begin),
		(call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_shocktroops),
		(call_script, "script_company_type_get_name", pbs_troop_type_shock, s1),
		(overlay_add_item, ":overlay", s1),
		(try_end),
		# (try_begin),
		# (call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_tanks),
		# (call_script, "script_company_type_get_name", pbs_troop_type_armor, s1),
		# (overlay_add_item, ":overlay", s1),
		# (try_end),
	(troop_get_slot, ":current_company_type", "trp_player_company_types", ":company_number"),
	(overlay_set_val, ":overlay", ":current_company_type"),
	(val_add, ":y", -40),
	(try_end),
]),

(ti_on_presentation_event_state_change,
[
(store_trigger_param_1, ":object"),
(store_trigger_param_2, ":value"),
	(try_begin),
	(eq, ":object", "$overlay_button_back"),
	(presentation_set_duration, 0),
	(else_try),
		(try_for_range, ":company_number", 0, 8),
		(troop_get_slot, ":overlay", "trp_array_1", ":company_number"),
		(eq, ":object", ":overlay"),
		(troop_set_slot, "trp_player_company_types", ":company_number", ":value"),
		(try_end),
	(try_end),
]),
    
	(ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_back_space),
        (key_clicked, key_escape),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

("pbs", prsntf_manual_end_only, 0, [ #PBS - Parabellum Battle System

(ti_on_presentation_load, [     
(set_fixed_point_multiplier, 1000),

(assign, ":x_infolist", 83),
(assign, ":x_name", 50),
(assign, ":x_soldiers_number", 50),
(assign, ":x_discipline", 65),
(assign, ":x_energy", 65),
(assign, ":x_activeability", 83),

(create_image_button_overlay, "$menu_pbs_company1_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company1_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company1),
(create_text_overlay, "$menu_pbs_company1_name", "@1. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company1_name", pos1),
(create_text_overlay, "$menu_pbs_company1_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company1_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company1_discipline", "@90%"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company1_discipline", pos1),
(create_text_overlay, "$menu_pbs_company1_energy", "@90%"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company1_energy", pos1),
(create_text_overlay, "$menu_pbs_company1_accuracy", "@90%"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company1_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company1_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(try_end),
(overlay_set_size, "$menu_pbs_company1_infolist", pos1),
(overlay_set_size, "$menu_pbs_company1_name", pos2),
(overlay_set_size, "$menu_pbs_company1_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company1_discipline", pos4),
(overlay_set_size, "$menu_pbs_company1_energy", pos4),
(overlay_set_size, "$menu_pbs_company1_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
(val_add, ":x_activeability", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company2_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company2_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company2),
(create_text_overlay, "$menu_pbs_company2_name", "@2. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company2_name", pos1),
(create_text_overlay, "$menu_pbs_company2_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company2_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company2_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company2_discipline", pos1),
(create_text_overlay, "$menu_pbs_company2_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company2_energy", pos1),
(create_text_overlay, "$menu_pbs_company2_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company2_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company2_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company2_infolist", pos1),
(overlay_set_size, "$menu_pbs_company2_name", pos2),
(overlay_set_size, "$menu_pbs_company2_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company2_discipline", pos4),
(overlay_set_size, "$menu_pbs_company2_energy", pos4),
(overlay_set_size, "$menu_pbs_company2_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company3_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company3_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company3),
(create_text_overlay, "$menu_pbs_company3_name", "@3. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company3_name", pos1),
(create_text_overlay, "$menu_pbs_company3_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company3_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company3_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company3_discipline", pos1),
(create_text_overlay, "$menu_pbs_company3_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company3_energy", pos1),
(create_text_overlay, "$menu_pbs_company3_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company3_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company3_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company3_infolist", pos1),
(overlay_set_size, "$menu_pbs_company3_name", pos2),
(overlay_set_size, "$menu_pbs_company3_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company3_discipline", pos4),
(overlay_set_size, "$menu_pbs_company3_energy", pos4),
(overlay_set_size, "$menu_pbs_company3_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company4_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company4_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company4),
(create_text_overlay, "$menu_pbs_company4_name", "@4. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company4_name", pos1),
(create_text_overlay, "$menu_pbs_company4_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company4_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company4_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company4_discipline", pos1),
(create_text_overlay, "$menu_pbs_company4_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company4_energy", pos1),
(create_text_overlay, "$menu_pbs_company4_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company4_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company4_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company4_infolist", pos1),
(overlay_set_size, "$menu_pbs_company4_name", pos2),
(overlay_set_size, "$menu_pbs_company4_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company4_discipline", pos4),
(overlay_set_size, "$menu_pbs_company4_energy", pos4),
(overlay_set_size, "$menu_pbs_company4_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company5_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company5_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company5),
(create_text_overlay, "$menu_pbs_company5_name", "@5. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company5_name", pos1),
(create_text_overlay, "$menu_pbs_company5_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company5_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company5_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company5_discipline", pos1),
(create_text_overlay, "$menu_pbs_company5_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company5_energy", pos1),
(create_text_overlay, "$menu_pbs_company5_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company5_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company5_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company5_infolist", pos1),
(overlay_set_size, "$menu_pbs_company5_name", pos2),
(overlay_set_size, "$menu_pbs_company5_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company5_discipline", pos4),
(overlay_set_size, "$menu_pbs_company5_energy", pos4),
(overlay_set_size, "$menu_pbs_company5_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company6_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company6_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company6),
(create_text_overlay, "$menu_pbs_company6_name", "@6. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company6_name", pos1),
(create_text_overlay, "$menu_pbs_company6_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company6_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company6_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company6_discipline", pos1),
(create_text_overlay, "$menu_pbs_company6_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company6_energy", pos1),
(create_text_overlay, "$menu_pbs_company6_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company6_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company6_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company6_infolist", pos1),
(overlay_set_size, "$menu_pbs_company6_name", pos2),
(overlay_set_size, "$menu_pbs_company6_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company6_discipline", pos4),
(overlay_set_size, "$menu_pbs_company6_energy", pos4),
(overlay_set_size, "$menu_pbs_company6_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company7_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company7_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company7),
(create_text_overlay, "$menu_pbs_company7_name", "@7. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company7_name", pos1),
(create_text_overlay, "$menu_pbs_company7_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company7_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company7_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company7_discipline", pos1),
(create_text_overlay, "$menu_pbs_company7_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company7_energy", pos1),
(create_text_overlay, "$menu_pbs_company7_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company7_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company7_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company7_infolist", pos1),
(overlay_set_size, "$menu_pbs_company7_name", pos2),
(overlay_set_size, "$menu_pbs_company7_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company7_discipline", pos4),
(overlay_set_size, "$menu_pbs_company7_energy", pos4),
(overlay_set_size, "$menu_pbs_company7_accuracy", pos4),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

(create_image_button_overlay, "$menu_pbs_company8_infolist", "mesh_pbs_company_info", "mesh_pbs_company_info"),
(position_set_x, pos1, ":x_infolist"),
(position_set_y, pos1, 40),
(overlay_set_position, "$menu_pbs_company8_infolist", pos1),
(call_script, "script_company_get_name_pbs_menu", "$g_player_team", company8),
(create_text_overlay, "$menu_pbs_company8_name", "@8. {s1}"),
(position_set_x, pos1, ":x_name"),
(position_set_y, pos1, 78),
(overlay_set_position, "$menu_pbs_company8_name", pos1),
(create_text_overlay, "$menu_pbs_company8_soldiers_number", "@  c."),
(position_set_x, pos1, ":x_soldiers_number"),
(position_set_y, pos1, 64),
(overlay_set_position, "$menu_pbs_company8_soldiers_number", pos1),
(create_text_overlay, "$menu_pbs_company8_discipline", "@ %"),
(position_set_x, pos1, ":x_discipline"),
(position_set_y, pos1, 47),
(overlay_set_position, "$menu_pbs_company8_discipline", pos1),
(create_text_overlay, "$menu_pbs_company8_energy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 26),
(overlay_set_position, "$menu_pbs_company8_energy", pos1),
(create_text_overlay, "$menu_pbs_company8_accuracy", "@ %"),
(position_set_x, pos1, ":x_energy"),
(position_set_y, pos1, 5),
(overlay_set_position, "$menu_pbs_company8_accuracy", pos1),
(position_set_x, pos1, 0), (position_set_y, pos1, 0),
(position_set_x, pos2, 0), (position_set_y, pos2, 0),
(position_set_x, pos3, 0), (position_set_y, pos3, 0),
(position_set_x, pos4, 0), (position_set_y, pos4, 0),
	(try_begin),
	(neq, "$player_company8_type", 0),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(position_set_x, pos2, 1000), (position_set_y, pos2, 1000),
	(position_set_x, pos3, 750), (position_set_y, pos3, 750),
	(position_set_x, pos4, 800), (position_set_y, pos4, 800),
	(val_add, ":x_activeability", pbs_menu_distance_between_infolists),
	(try_end),
(overlay_set_size, "$menu_pbs_company8_infolist", pos1),
(overlay_set_size, "$menu_pbs_company8_name", pos2),
(overlay_set_size, "$menu_pbs_company8_soldiers_number", pos3),
(overlay_set_size, "$menu_pbs_company8_discipline", pos4),
(overlay_set_size, "$menu_pbs_company8_energy", pos4),
(overlay_set_size, "$menu_pbs_company8_accuracy", pos4),

(val_add, ":x_activeability", -20),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
(create_image_button_overlay, "$menu_pbs_activeability_square", "mesh_pbs_activeability", "mesh_pbs_activeability"),
(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
(overlay_set_size, "$menu_pbs_activeability_square", pos1), (overlay_set_position, "$menu_pbs_activeability_square", pos2),
(overlay_set_tooltip, "$menu_pbs_activeability_square", "@\
Form Square^^Selected companies (not more than two)^\
will form a square formation. It is effective in melee^\
fighting, especially against cavalry, but vulnarable^\
to an enemy fire. To selected companies be able to^\
form square, they need to have at least 25 soldiers^\
in total.^Company types: Line infantry, Guard."),
(val_add, ":x_activeability", 35),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
(create_image_button_overlay, "$menu_pbs_activeability_merge", "mesh_pbs_activeability", "mesh_pbs_activeability"),
(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
(overlay_set_size, "$menu_pbs_activeability_merge", pos1), (overlay_set_position, "$menu_pbs_activeability_merge", pos2), (overlay_set_material, "$menu_pbs_activeability_merge", "@pbs_activeability_merge"),
(overlay_set_tooltip, "$menu_pbs_activeability_merge", "@\
Merge Companies^^Selected companies (not less than one)^\
will be merged into one that has highest number of soldiers."),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_moderndefence, 10000),
	(val_add, ":x_activeability", 35),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(create_image_button_overlay, "$menu_pbs_activeability_digin", "mesh_pbs_activeability", "mesh_pbs_activeability"),
	(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
	(overlay_set_size, "$menu_pbs_activeability_digin", pos1), (overlay_set_position, "$menu_pbs_activeability_digin", pos2), (overlay_set_material, "$menu_pbs_activeability_digin", "@pbs_activeability_digin"),
	(overlay_set_tooltip, "$menu_pbs_activeability_digin", "@Dig In^^Selected companies will dig in,^creating trenches on their position.^Only available once per battle.^Company types: Line infantry, Guard."),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_coveringfire, 10000),
	(val_add, ":x_activeability", 35),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(create_image_button_overlay, "$menu_pbs_activeability_pronemode", "mesh_pbs_activeability", "mesh_pbs_activeability"),
	(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
	(overlay_set_size, "$menu_pbs_activeability_pronemode", pos1), (overlay_set_position, "$menu_pbs_activeability_pronemode", pos2), (overlay_set_material, "$menu_pbs_activeability_pronemode", "@pbs_activeability_digin"),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_coveringfire, 10000),
	(val_add, ":x_activeability", 35),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(create_image_button_overlay, "$menu_pbs_activeability_coveringfire", "mesh_pbs_activeability", "mesh_pbs_activeability"),
	(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
	(overlay_set_size, "$menu_pbs_activeability_coveringfire", pos1), (overlay_set_position, "$menu_pbs_activeability_coveringfire", pos2), (overlay_set_material, "$menu_pbs_activeability_coveringfire", "@pbs_activeability_coveringfire_on"),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_gasattacks, 10000),
	(val_add, ":x_activeability", 35),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(create_image_button_overlay, "$menu_pbs_activeability_gasmasks", "mesh_pbs_activeability", "mesh_pbs_activeability"),
	(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
	(overlay_set_size, "$menu_pbs_activeability_gasmasks", pos1), (overlay_set_position, "$menu_pbs_activeability_gasmasks", pos2), (overlay_set_material, "$menu_pbs_activeability_gasmasks", "@pbs_activeability_gas"),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_gasattacks, 10000),
	(val_add, ":x_activeability", 35),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(create_image_button_overlay, "$menu_pbs_activeability_gas", "mesh_pbs_activeability", "mesh_pbs_activeability"),
	(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
	(overlay_set_size, "$menu_pbs_activeability_gas", pos1), (overlay_set_position, "$menu_pbs_activeability_gas", pos2), (overlay_set_material, "$menu_pbs_activeability_gas", "@pbs_activeability_gas"),
	(overlay_set_tooltip, "$menu_pbs_activeability_gas", "@Gas Attack^^.^Company types: Field Guns and Howitzers."),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_shocktroops, 10000),
	(val_add, ":x_activeability", 35),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(create_image_button_overlay, "$menu_pbs_activeability_grenades", "mesh_pbs_activeability", "mesh_pbs_activeability"),
	(position_set_x, pos2, ":x_activeability"), (position_set_y, pos2, 80),
	(overlay_set_size, "$menu_pbs_activeability_grenades", pos1), (overlay_set_position, "$menu_pbs_activeability_grenades", pos2), (overlay_set_material, "$menu_pbs_activeability_grenades", "@pbs_activeability_grenades"),
	(overlay_set_tooltip, "$menu_pbs_activeability_grenades", "@Grenade Attack^^Selected companies launch a grenade attack at range up to 50 meters, throwing^hand grenades at enemies which are at close distance.^Only available once per 3 minutes.^Company types: Shock troops."),
	(try_end),
(presentation_set_duration, 999999),
]),

(ti_on_presentation_run, [
(set_fixed_point_multiplier, 1000),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_coveringfire, 10000),
	(call_script, "script_if_pronemode_is_on_for_selected_companies"),
		(try_begin),
		(eq, reg0, 1),
		(eq, reg1, 0),
		(eq, reg2, 0),
		(str_store_string, s1, "@Position: at will"),
		(overlay_set_material, "$menu_pbs_activeability_pronemode", "@pbs_activeability_pronemode1"),
		(else_try),
		(eq, reg0, 0),
		(eq, reg1, 1),
		(eq, reg2, 0),
		(str_store_string, s1, "@Position: always crouch"),
		(overlay_set_material, "$menu_pbs_activeability_pronemode", "@pbs_activeability_pronemode2"),
		(else_try),
		(eq, reg0, 0),
		(eq, reg1, 0),
		(eq, reg2, 1),
		(str_store_string, s1, "@Position: always prone"),
		(overlay_set_material, "$menu_pbs_activeability_pronemode", "@pbs_activeability_pronemode3"),
		(else_try),
		(str_store_string, s1, "@Position: mixed"),
		(overlay_set_material, "$menu_pbs_activeability_pronemode", "@pbs_activeability_pronemode4"),
		(try_end),
	(overlay_set_tooltip, "$menu_pbs_activeability_pronemode", "@{s1}^^This toggleable ability allows to choose position for company:^at will, always crouch or always prone. Prone^position reduces damage incoming from shell explosions,^but it can close view in front of soldiers,^interrupting shooting.^Company types: any infantry company."),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_coveringfire, 10000),
	(call_script, "script_if_coveringfire_is_on_for_selected_companies"),
		(try_begin),
		(eq, reg1, 1),
		(eq, reg2, 0),
		(eq, reg3, 1),
		(str_store_string, s1, "@Suppression fire: on"),
		(overlay_set_material, "$menu_pbs_activeability_coveringfire", "@pbs_activeability_coveringfire_on"),
		(else_try),
		(eq, reg1, 0),
		(eq, reg2, 1),
		(eq, reg3, 1),
		(str_store_string, s1, "@Suppression fire: off"),
		(overlay_set_material, "$menu_pbs_activeability_coveringfire", "@pbs_activeability_coveringfire_off"),
		(else_try),
		(eq, reg3, 1),
		(str_store_string, s1, "@Suppression fire: on/off"),
		(overlay_set_material, "$menu_pbs_activeability_coveringfire", "@pbs_activeability_coveringfire_onoff"),
		(else_try),
		(str_store_string, s1, "@No companies selected"),
		(overlay_set_material, "$menu_pbs_activeability_coveringfire", "@pbs_activeability_coveringfire_noselected"),
		(try_end),
	(overlay_set_tooltip, "$menu_pbs_activeability_coveringfire", "@{s1}^^Turning on suppression fire will increase shooting speed^and decreasing enemy discipline level two times faster,^on exchange of drastically decreasing your own accuracy.^Company types: any."),
	(try_end),
	(try_begin),
	(faction_slot_ge, "fac_player_faction", slot_faction_technology_gasattacks, 10000),
	(call_script, "script_if_gasmasks_is_on_for_selected_companies"),
		(try_begin),
		(eq, reg1, 1),
		(eq, reg2, 0),
		(eq, reg3, 1),
		(str_store_string, s1, "@Gas masks: always wear"),
		(overlay_set_material, "$menu_pbs_activeability_gasmasks", "@pbs_activeability_gasmasks_on"),
		(else_try),
		(eq, reg1, 0),
		(eq, reg2, 1),
		(eq, reg3, 1),
		(str_store_string, s1, "@Gas masks: at will"),
		(overlay_set_material, "$menu_pbs_activeability_gasmasks", "@pbs_activeability_gasmasks_off"),
		(else_try),
		(eq, reg3, 1),
		(str_store_string, s1, "@Gas masks: always wear/at will"),
		(overlay_set_material, "$menu_pbs_activeability_gasmasks", "@pbs_activeability_gasmasks_onoff"),
		(else_try),
		(str_store_string, s1, "@No companies selected"),
		(overlay_set_material, "$menu_pbs_activeability_gasmasks", "@pbs_activeability_gasmasks_noselected"),
		(try_end),
	(overlay_set_tooltip, "$menu_pbs_activeability_gasmasks", "@{s1}^^Gas masks make troops invulnerable to poison gas, but decrease shooting accuracy and energy level.^Company types: any."),
	(try_end),

(team_get_slot, reg0, "$g_player_team", slot_team_company1_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company1_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company2_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company2_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company3_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company3_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company4_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company4_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company5_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company5_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company6_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company6_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company7_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company7_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company8_energy),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company8_energy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company1_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company1_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company2_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company2_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company3_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company3_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company4_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company4_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company5_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company5_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company6_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company6_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company7_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company7_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company8_discipline),
(val_div, reg0, 100),
(overlay_set_text, "$menu_pbs_company8_discipline", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company1_soldier_number),
(overlay_set_text, "$menu_pbs_company1_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company2_soldier_number),
(overlay_set_text, "$menu_pbs_company2_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company3_soldier_number),
(overlay_set_text, "$menu_pbs_company3_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company4_soldier_number),
(overlay_set_text, "$menu_pbs_company4_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company5_soldier_number),
(overlay_set_text, "$menu_pbs_company5_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company6_soldier_number),
(overlay_set_text, "$menu_pbs_company6_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company7_soldier_number),
(overlay_set_text, "$menu_pbs_company7_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company8_soldier_number),
(overlay_set_text, "$menu_pbs_company8_soldiers_number", "@{reg0} c."),
(team_get_slot, reg0, "$g_player_team", slot_team_company1_accuracy),
(overlay_set_text, "$menu_pbs_company1_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company2_accuracy),
(overlay_set_text, "$menu_pbs_company2_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company3_accuracy),
(overlay_set_text, "$menu_pbs_company3_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company4_accuracy),
(overlay_set_text, "$menu_pbs_company4_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company5_accuracy),
(overlay_set_text, "$menu_pbs_company5_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company6_accuracy),
(overlay_set_text, "$menu_pbs_company6_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company7_accuracy),
(overlay_set_text, "$menu_pbs_company7_accuracy", "@{reg0}%"),
(team_get_slot, reg0, "$g_player_team", slot_team_company8_accuracy),
(overlay_set_text, "$menu_pbs_company8_accuracy", "@{reg0}%"),

(assign, ":x_infolist", 83),
(assign, ":x_name", 50),
(assign, ":x_soldiers_number", 50),
(assign, ":x_discipline", 65),
(assign, ":x_energy", 65),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company1),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company1_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company1_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company1_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company1_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company1_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company1_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company1_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company1_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company1_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company1_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company1_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company1_accuracy", pos1),
	(try_end),

(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company2),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company2_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company2_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company2_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company2_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company2_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company2_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company2_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company2_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company2_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company2_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company2_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company2_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company3),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company3_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company3_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company3_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company3_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company3_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company3_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company3_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company3_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company3_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company3_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company3_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company3_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company4),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company4_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company4_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company4_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company4_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company4_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company4_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company4_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company4_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company4_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company4_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company4_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company4_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company5),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company5_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company5_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company5_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company5_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company5_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company5_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company5_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company5_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company5_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company5_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company5_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company5_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company6),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company6_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company6_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company6_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company6_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company6_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company6_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company6_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company6_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company6_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company6_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company6_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company6_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company7),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company7_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company7_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company7_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company7_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company7_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company7_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company7_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company7_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company7_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company7_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company7_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company7_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),
	(try_begin),
	(class_is_listening_order, "$g_player_team", company8),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40+15),
	(overlay_set_position, "$menu_pbs_company8_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78+15),
	(overlay_set_position, "$menu_pbs_company8_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64+15),
	(overlay_set_position, "$menu_pbs_company8_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47+15),
	(overlay_set_position, "$menu_pbs_company8_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26+15),
	(overlay_set_position, "$menu_pbs_company8_energy", pos1),
	(position_set_y, pos1, 5+15),
	(overlay_set_position, "$menu_pbs_company8_accuracy", pos1),
	(else_try),
	(position_set_x, pos1, ":x_infolist"),
	(position_set_y, pos1, 40),
	(overlay_set_position, "$menu_pbs_company8_infolist", pos1),
	(position_set_x, pos1, ":x_name"),
	(position_set_y, pos1, 78),
	(overlay_set_position, "$menu_pbs_company8_name", pos1),
	(position_set_x, pos1, ":x_soldiers_number"),
	(position_set_y, pos1, 64),
	(overlay_set_position, "$menu_pbs_company8_soldiers_number", pos1),
	(position_set_x, pos1, ":x_discipline"),
	(position_set_y, pos1, 47),
	(overlay_set_position, "$menu_pbs_company8_discipline", pos1),
	(position_set_x, pos1, ":x_energy"),
	(position_set_y, pos1, 26),
	(overlay_set_position, "$menu_pbs_company8_energy", pos1),
	(position_set_y, pos1, 5),
	(overlay_set_position, "$menu_pbs_company8_accuracy", pos1),
	(try_end),
(val_add, ":x_infolist", pbs_menu_distance_between_infolists),
(val_add, ":x_name", pbs_menu_distance_between_infolists),
(val_add, ":x_soldiers_number", pbs_menu_distance_between_infolists),
(val_add, ":x_discipline", pbs_menu_distance_between_infolists),
(val_add, ":x_energy", pbs_menu_distance_between_infolists),

#todo add activeability

	(try_begin),
	(neq, "$aerial_view_state", 2),
	(presentation_set_duration, 0),
	(try_end),
]),
    (ti_on_presentation_event_state_change, [
(store_trigger_param_1, ":object"),
	(try_begin),
	(eq, ":object", "$menu_pbs_company1_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company1, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company1, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company1, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company1, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company2_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company2, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company2, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company2, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company2, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company3_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company3, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company3, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company3, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company3, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company4_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company4, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company4, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company4, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company4, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company5_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company5, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company5, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company5, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company5, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company6_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company6, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company6, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company6, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company6, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company7_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company7, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company7, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company7, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company7, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_company8_infolist"),
		(try_begin),
		(key_is_down, key_left_shift),
		(team_set_order_listener, "$g_player_team", company8, 1),
		(call_script, "script_company_play_vo", "$g_player_team", company8, vo_type_on_company_select),
		(else_try),
		(team_set_order_listener, "$g_player_team", company8, 0),
		(call_script, "script_company_play_vo", "$g_player_team", company8, vo_type_on_company_select),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_digin"),
	(assign, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(store_add, ":slot_team_type", slot_team_company1_type, ":company"),
			(try_begin),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_shock),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_line),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_guard),
			(assign, ":types_are_ok", 0),
			(try_end),
		(try_end),
		(try_begin),
		(eq, ":types_are_ok", 0),
		(display_message, "@Cannot dig in: wrong company types (only line infantry and guard infantry can dig in)."),
		(try_end),
	(eq, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(call_script, "script_company_play_vo", "$g_player_team", ":company", vo_type_yes_sir),
		(call_script, "script_company_digin", "$g_player_team", ":company"),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_pronemode"),
	(call_script, "script_if_pronemode_is_on_for_selected_companies"),
		(try_begin),
		(eq, reg0, 1),
		(eq, reg1, 0),
		(eq, reg2, 0),
		(assign, ":pronemode", 1),
		(else_try),
		(eq, reg0, 0),
		(eq, reg1, 1),
		(eq, reg2, 0),
		(assign, ":pronemode", 2),
		(else_try),
		(eq, reg0, 0),
		(eq, reg1, 0),
		(eq, reg2, 1),
		(assign, ":pronemode", 0),
		(else_try),
		(assign, ":pronemode", 0),
		(try_end),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(store_add, ":slot_team_pronemode", slot_team_company1_pronemode, ":company"),
		(team_set_slot, "$g_player_team", ":slot_team_pronemode", ":pronemode"),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_coveringfire"),
	(call_script, "script_if_coveringfire_is_on_for_selected_companies"),
		(try_begin),
		(eq, reg1, 1),
		(eq, reg2, 0),
		(eq, reg3, 1),
		(assign, ":coveringfire", 0),
		(else_try),
		(eq, reg1, 0),
		(eq, reg2, 1),
		(eq, reg3, 1),
		(assign, ":coveringfire", 1),
		(else_try),
		(assign, ":coveringfire", 1),
		(try_end),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(store_add, ":slot_team_coveringfire", slot_team_company1_coveringfire, ":company"),
		(team_set_slot, "$g_player_team", ":slot_team_coveringfire", ":coveringfire"),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_gasmasks"),
	(call_script, "script_if_gasmasks_is_on_for_selected_companies"),
		(try_begin),
		(eq, reg1, 1),
		(eq, reg2, 0),
		(eq, reg3, 1),
		(assign, ":gasmasks", 0),
		(else_try),
		(eq, reg1, 0),
		(eq, reg2, 1),
		(eq, reg3, 1),
		(assign, ":gasmasks", 1),
		(else_try),
		(assign, ":gasmasks", 1),
		(try_end),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(store_add, ":slot_team_coveringfire", slot_team_company1_gasmasks, ":company"),
		(team_set_slot, "$g_player_team", ":slot_team_coveringfire", ":gasmasks"),
			(try_begin),
			(eq, ":gasmasks", 1),
			(call_script, "script_company_play_vo", "$g_player_team", ":company", vo_type_gas_masks_on),
			(else_try),
			(call_script, "script_company_play_vo", "$g_player_team", ":company", vo_type_yes_sir),
			(try_end),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_gas"),
	(assign, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(store_add, ":slot_team_type", slot_team_company1_type, ":company"),
			(try_begin),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_heavyhowitzers),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_fieldguns),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_howitzers),
			(assign, ":types_are_ok", 0),
			(try_end),
		(try_end),
		(try_begin),
		(eq, ":types_are_ok", 0),
		(display_message, "@Cannot launch gas attack: wrong company types (only artillery can use gas attack)."),
		(try_end),
	(eq, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(call_script, "script_company_launch_gas_attack", "$g_player_team", ":company"),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_grenades"),
	(assign, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(store_add, ":slot_team_type", slot_team_company1_type, ":company"),
			(try_begin),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_shock),
			(assign, ":types_are_ok", 0),
			(try_end),
		(try_end),
		(try_begin),
		(eq, ":types_are_ok", 0),
		(display_message, "@Cannot launch grenade attack: wrong company types (only shock troops can throw grenades)."),
		(try_end),
	(eq, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(call_script, "script_company_launch_grenade_attack", "$g_player_team", ":company"),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_merge"),
	(assign, ":company_number", 0),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(call_script, "script_cf_if_company_has_soldiers", "$g_player_team", ":company"),
		(val_add, ":company_number", 1),
		(try_end),
		(try_begin),
		(lt, ":company_number", 2),
		(display_message, "@Select 2 or more companies with soldiers to merge."),
		(try_end),
	(gt, ":company_number", 1),
	(assign, ":max_number", 0),
	(assign, ":target_company", -1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(store_add, ":slot_team_company_soldier_number", slot_team_company1_soldier_number, ":company"),
		(team_get_slot, ":company_soldier_number", "$g_player_team", ":slot_team_company_soldier_number"),
		(gt, ":company_soldier_number", ":max_number"),
		(assign, ":max_number", ":company_soldier_number"),
		(assign, ":target_company", ":company"),
		(try_end),
	(gt, ":target_company", -1),
		(try_for_agents,":agent"),
		(agent_is_active, ":agent"),
		(agent_is_alive, ":agent"),
		(agent_is_human, ":agent"),
		(agent_is_non_player, ":agent"),
		(agent_get_team, ":team", ":agent"),
		(eq, ":team", "$g_player_team"),
		(agent_get_division, ":company", ":agent"),
		(class_is_listening_order, "$g_player_team", ":company"),
		(agent_set_division, ":agent", ":target_company"),
		(try_end),
	(else_try),
	(eq, ":object", "$menu_pbs_activeability_square"),
	(assign, ":company_number", 0),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(val_add, ":company_number", 1),
		(try_end),
		(try_begin),
		(gt, ":company_number", 2),
		(display_message, "@Cannot form square: too many companies selected."),
		(try_end),
	(gt, ":company_number", 0),
	(lt, ":company_number", 3),
	(assign, ":types_are_ok", 1),
		(try_for_range, ":company", 0, 8),
		(class_is_listening_order, "$g_player_team", ":company"),
		(store_add, ":slot_team_type", slot_team_company1_type, ":company"),
			(try_begin),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_shock),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_line),
			(neg|team_slot_eq, "$g_player_team", ":slot_team_type", pbs_troop_type_guard),
			(assign, ":types_are_ok", 0),
			(try_end),
		(try_end),
		(try_begin),
		(eq, ":types_are_ok", 0),
		(display_message, "@Cannot form square: wrong company types (only line infantry and guard inantry can form square)."),
		(try_end),
	(eq, ":types_are_ok", 1),
	(call_script, "script_player_team_form_square"),
	(try_end),
      ]),

]),


  ("faction_troop_trees", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
       
        (create_mesh_overlay, reg1, "mesh_load_window2"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
       
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
        (store_add, ":num_pages", ":num_factions", 3),
       
        ## page names, from bottom to top
        (overlay_add_item, "$g_presentation_obj_1", "@Others"),
        (overlay_add_item, "$g_presentation_obj_1", "@Outlaws"),
        (overlay_add_item, "$g_presentation_obj_1", "@Mercenary"),
        (try_for_range_backwards, ":page_no", 0, ":num_factions"),
          (store_add, ":faction_no", ":page_no", npc_kingdoms_begin),
          (str_store_faction_name, s0, ":faction_no"),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", ":num_pages", "$g_selected_page"),
        (val_sub, ":presentation_obj_val", 1),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
       
        ## back
        (create_game_button_overlay, "$g_presentation_obj_2", "@Close"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 685),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
       
        ## tips
        (create_text_overlay, reg1, "@Click the center button to toggle faction^Click the avatars to view details of them", tf_left_align),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, 690),
        (overlay_set_position, reg1, pos1),

        # detect_total_max_tier, calculate offset_x
        (assign, ":total_max_tier", 1),
        (try_for_range, ":cur_troop", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":cur_troop"),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0),
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", "$g_selected_page"),
          (assign, reg0, 1), # reg0: init max_tier to 1
          (call_script, "script_troop_tree_recursive_detect_max_tier", ":cur_troop", 1),
          (assign, ":cur_max_tier", reg0),
          (try_begin),
            (gt, ":cur_max_tier", ":total_max_tier"),
            (assign, ":total_max_tier", ":cur_max_tier"),
          (try_end),
        (try_end),
        (val_sub, ":total_max_tier", 1),
        (val_max, ":total_max_tier", 1),
        (store_div, ":offset_x", 700, ":total_max_tier"),
        (val_min, ":offset_x", 120),
       
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 15),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 660),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
       
        (assign, "$g_cur_slot_no", 0),
        (assign, reg2, 75),
        # find all root troops of selected faction
        (try_for_range, ":cur_troop", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":cur_troop"),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0),
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", "$g_selected_page"),
          # can't be upgraded from other troops of the same page
          (assign, ":is_root_troop", 1),
          (assign, ":end_cond", soldiers_end),
          (try_for_range, ":loop_troop", soldiers_begin, ":end_cond"),
            (neg|troop_is_hero, ":loop_troop"),
            # page_no_for_loop_troop
            (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":loop_troop"),
            (assign, ":page_no_for_loop_troop", reg0),
            # on current page_no
            (eq,  ":page_no_for_loop_troop", "$g_selected_page"),
            (troop_get_upgrade_troop, ":upgrade_troop_1", ":loop_troop", 0),
            (troop_get_upgrade_troop, ":upgrade_troop_2", ":loop_troop", 1),
            (this_or_next|eq, ":upgrade_troop_1", ":cur_troop"),
            (eq, ":upgrade_troop_2", ":cur_troop"),
            (assign, ":is_root_troop", 0),
            (assign, ":end_cond", 0), #break
          (try_end),
          (eq, ":is_root_troop", 1), # draw troop tree of cur root_troop
          (call_script, "script_troop_tree_recursive_backtracking", ":cur_troop", 50, reg2, ":offset_x"),
          (val_add, reg2, 160),
        (try_end),
       
        (set_container_overlay, -1),
       
        ## draw selected_troop: Attributes, Skills, Equipments,
        (try_begin),
          (gt, "$g_selected_troop", 0),
          (store_mul, ":cur_troop", "$g_selected_troop", 2), #with weapons
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_game_party_window", ":cur_troop"),
          (position_set_x, pos1, 450),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 810),
          (position_set_y, pos1, 550),
          (overlay_set_position, reg1, pos1),
         
          # pos2: text size
          (position_set_x, pos2, 750),
          (position_set_y, pos2, 750),
          # pos2: title text size
          (position_set_x, pos3, 900),
          (position_set_y, pos3, 900),
          # Name
          (str_store_troop_name, s1, "$g_selected_troop"),
          (create_text_overlay, reg1, s1, tf_center_justify),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 710),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          # level and HP
          (store_character_level, reg3, "$g_selected_troop"),
          (assign, ":troop_hp", 35),
          (store_skill_level, ":skill", skl_ironflesh, "$g_selected_troop"),
          (store_attribute_level, ":strength", "$g_selected_troop", ca_strength),
          (val_mul, ":skill", 2),
          (val_add, ":troop_hp", ":skill"),
          (val_add, ":troop_hp", ":strength"),
          (assign, reg4, ":troop_hp"),
          (create_text_overlay, reg1, "@Level: {reg3}^Health: {reg4}", tf_left_align),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 665),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          # Attributes
          (create_text_overlay, reg1, "@Attributes", tf_left_align),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 630),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@STR^AGI^INT^CHA", tf_left_align),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 570),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          (try_for_range, ":attrib_id", 0, 4),
            (try_begin),
              (eq, ":attrib_id", 0),
              (store_attribute_level, reg2, "$g_selected_troop", ":attrib_id"),
              (str_store_string, s1, "@{reg2}"),
            (else_try),
              (store_attribute_level, reg2, "$g_selected_troop", ":attrib_id"),
              (str_store_string, s1, "@{s1}^{reg2}"),
            (try_end),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_x, pos1, 980),
          (position_set_y, pos1, 570),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          # Skills
          (create_text_overlay, reg1, "@Skills", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 527),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@Ironflesh^Power Strike^Power Throw^Power Draw^Shield^Athletics^Riding^Horse Archery", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 415),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          (try_for_range_backwards, ":skill_id", 0, 42),
            (try_begin),
              (eq, ":skill_id", "skl_ironflesh"),
              (store_skill_level, reg2, ":skill_id", "$g_selected_troop"),
              (str_store_string, s1, "@{reg2}"),
            (else_try),
              (this_or_next|eq, ":skill_id", "skl_power_strike"),
              (this_or_next|eq, ":skill_id", "skl_power_throw"),
              (this_or_next|eq, ":skill_id", "skl_power_draw"),
              (this_or_next|eq, ":skill_id", "skl_shield"),
              (this_or_next|eq, ":skill_id", "skl_athletics"),
              (this_or_next|eq, ":skill_id", "skl_riding"),
              (eq, ":skill_id", "skl_horse_archery"),
              (store_skill_level, reg2, ":skill_id", "$g_selected_troop"),
              (str_store_string, s1, "@{s1}^{reg2}"),
            (try_end),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_x, pos1, 980),
          (position_set_y, pos1, 415),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          # Weapon Proficiencies
          (create_text_overlay, reg1, "@Proficiencies", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 370),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@1H Weapons^2H Weapons^Polearms^Archery^Rifles^Throwing", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 285),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          (try_for_range, ":wp_id", 0, 6),
            (try_begin),
              (eq, ":wp_id", wpt_one_handed_weapon),
              (store_proficiency_level, reg2, "$g_selected_troop", ":wp_id"),
              (str_store_string, s1, "@{reg2}"),
            (else_try),
              (is_between, ":wp_id", wpt_two_handed_weapon, wpt_firearm),
              (store_proficiency_level, reg2, "$g_selected_troop", ":wp_id"),
              (str_store_string, s1, "@{s1}^{reg2}"),
            (try_end),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_x, pos1, 980),
          (position_set_y, pos1, 285),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
         
          # Equipments
          (create_text_overlay, reg1, "@Equipments", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 235),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (str_clear, s0),
          (create_text_overlay, "$g_presentation_obj_3", s0, tf_scrollable),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 30),
          (overlay_set_position, "$g_presentation_obj_3", pos1),
          (position_set_x, pos1, 138),
          (position_set_y, pos1, 202),
          (overlay_set_area_size, "$g_presentation_obj_3", pos1),
          (set_container_overlay, "$g_presentation_obj_3"),
         
          (troop_clear_inventory, "trp_temp_array_a"),
          (troop_get_inventory_capacity, ":inv_cap", "$g_selected_troop"),
          (try_for_range, ":i_slot", 0, ":inv_cap"),
            (troop_get_inventory_slot, ":item", "$g_selected_troop", ":i_slot"),
            (gt, ":item", -1),
            (troop_get_inventory_slot_modifier, ":imod", "$g_selected_troop", ":i_slot"),
				(try_begin),
				(store_faction_of_troop, ":faction", "$g_selected_troop"),
				(call_script, "script_cf_get_faction_rifle_type", ":faction"), (assign, ":rifle_type", reg0),
				(gt, ":rifle_type", rifle_type_smoothbore),
				(store_add, ":slot_item_analog", slot_item_rifled_analog-1, ":rifle_type"),
				(item_get_slot, ":analog", ":item", ":slot_item_analog"),
				(gt, ":analog", 1),
				(assign, ":item", ":analog"),
				(try_end),
            (troop_add_item,"trp_temp_array_a",":item", ":imod"),
          (try_end),
         
          (assign, ":pos_x", 0),
          (assign, ":pos_y", 280),
          (assign, ":slot_no", 10),
          (try_for_range, ":unused_height", 0, 8),
            (try_for_range, ":unused_width", 0, 3),
              (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
              (position_set_x, pos1, 320),
              (position_set_y, pos1, 320),
              (overlay_set_size, reg1, pos1),
              (position_set_x, pos1, ":pos_x"),
              (position_set_y, pos1, ":pos_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
              (create_mesh_overlay, reg1, "mesh_inv_slot"),
              (position_set_x, pos1, 400),
              (position_set_y, pos1, 400),
              (overlay_set_size, reg1, pos1),
              (position_set_x, pos1, ":pos_x"),
              (position_set_y, pos1, ":pos_y"),
              (overlay_set_position, reg1, pos1),
              (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
              (val_max, ":item_no", 0),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 400),
              (position_set_y, pos1, 400),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 20),
              (store_add, ":item_y", ":pos_y", 20),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
              (val_add, ":pos_x", 40),
              (val_add, ":slot_no", 1),
            (try_end),
            (assign, ":pos_x", 0),
            (val_sub, ":pos_y", 40),
          (try_end),
          (set_container_overlay, -1),
        (try_end),
      ]),
     
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
     
      (try_begin),
        (gt, "$g_selected_troop", 0),
        (try_begin),
          (eq, ":enter_leave", 0),
          (try_for_range, ":slot_no", 10, 106),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":cur_imod", "trp_temp_array_a", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
              (overlay_get_position, pos0, ":target_obj"),
              (show_item_details_with_modifier, ":item_no", ":cur_imod", pos0, 100),
              (assign, "$g_current_opened_item_details", ":slot_no"),
            (try_end),
          (try_end),
        (else_try),
          (try_for_range, ":slot_no", 10, 106),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (try_begin),
              (eq, "$g_current_opened_item_details", ":slot_no"),
              (close_item_details),
            (try_end),
          (try_end),
        (try_end),
      (try_end),
    ]),
     
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
       
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_stack_selection_amounts", ":slot_no", ":object"),
          (troop_get_slot, "$g_selected_troop", "trp_stack_selection_ids", ":slot_no"),
          (start_presentation, "prsnt_faction_troop_trees"),
        (try_end),
       
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, ":num_pages", npc_kingdoms_end, npc_kingdoms_begin),
          (val_add, ":num_pages", 3),
          (store_sub, "$g_selected_page", ":num_pages", ":value"),
          (val_sub, "$g_selected_page", 1),
          (assign, "$g_selected_troop", 0),
          (start_presentation, "prsnt_faction_troop_trees"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$g_selected_troop", 0),
          (assign, "$g_selected_page", 0),
          (presentation_set_duration, 0),
        (try_end),
      ]),
  ]),
  
    ("world_map", 0, mesh_load_window2, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
       
      ## initialization part begin
        # presentation obj: begin from top left corner
        (assign, ":init_pos_x", 20), # init x
        (assign, ":init_pos_y", 720), # init y
       
        # world map, X: -180 t0 180  Y: -145 t0 145
        (assign, ":min_map_x", -180*1000),
        (assign, ":max_map_x", 180*1000),
        (assign, ":min_map_y", -145*1000),
        (assign, ":max_map_y", 145*1000),
        # also begin from top left corner
        (assign, ":init_map_x", ":min_map_x"), # init map_x
        (assign, ":init_map_y", ":max_map_y"), # init map_y
       
        # move length of p_temp_party, total_cols and total_rows
        (assign, ":party_move_length", 2*1000),
        (store_sub, ":total_cols", ":max_map_x", ":min_map_x"),
        (store_sub, ":total_rows", ":max_map_y", ":min_map_y"),
        (val_div, ":total_cols", ":party_move_length"),
        (val_div, ":total_rows", ":party_move_length"),
       
        # color_block_length
        (assign, ":color_block_length", 4),
        (store_mul, ":color_block_size", ":color_block_length", 50),
        (position_set_x, pos2, ":color_block_size"),
        (position_set_y, pos2, ":color_block_size"),
      ## initialization part end
       
        (assign, ":pos_x", ":init_pos_x"), # assign to cur pos_x
        (assign, ":pos_y", ":init_pos_y"), # assign to cur pos_y
        (assign, ":map_x", ":init_map_x"), # assign to cur map_x
        (assign, ":map_y", ":init_map_y"), # assign to cur map_y
        ## draw whole map
        (try_for_range, ":unused_rows", 0, ":total_rows"),
          (try_for_range, ":unused_cols", 0, ":total_cols"),
            (assign, ":dest_color", 0xFFFFFF), # default
            (position_set_x, pos3, ":map_x"),
            (position_set_y, pos3, ":map_y"),
            (party_set_position, "p_temp_party", pos3),
            (party_get_current_terrain, ":current_terrain", "p_temp_party"),
            (try_begin),
              (eq, ":current_terrain", rt_water),
              (assign, ":dest_color", 0xFFFFFF), # default
            (else_try),
              (call_script, "script_get_closest_center", "p_temp_party"),
              (assign, ":nearest_center", reg0),
              (try_begin),
                (gt, ":nearest_center", -1),
                (store_faction_of_party, ":center_faction", ":nearest_center"),
                (is_between, ":center_faction", kingdoms_begin, kingdoms_end),
                (faction_get_color, ":dest_color", ":center_faction"),
              (try_end),
            (try_end),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, ":dest_color"),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg0, pos1),
            (overlay_set_size, reg0, pos2), # color block size
           
            ## draw borderlines begin [optional]
            # borderlines length and whidth
            (store_add, ":line_length", ":color_block_size", 1*50),
            (assign, ":line_whidth", 1*50),
            # find bound_center
            (try_begin),
              (this_or_next|party_slot_eq, ":nearest_center", slot_party_type, spt_town),
              (party_slot_eq, ":nearest_center", slot_party_type, spt_castle),
              (assign, ":bound_center", ":nearest_center"), # itself
            (else_try),
              (party_slot_eq, ":nearest_center", slot_party_type, spt_village),
              (party_get_slot, ":bound_center", ":nearest_center", slot_village_bound_center),
            (try_end),
            # compare with the left side color block
            (try_begin),
              (store_sub, ":map_x_2", ":map_x", ":party_move_length"),
              (assign, ":map_y_2", ":map_y"),
              (position_set_x, pos4, ":map_x_2"),
              (position_set_y, pos4, ":map_y_2"),
              (party_set_position, "p_temp_party", pos4),
              (party_get_current_terrain, ":current_terrain_2", "p_temp_party"),
              (try_begin),
                (assign, ":continue", 0),
                (try_begin),
                  (neq, ":current_terrain", rt_water),
                  (neq, ":current_terrain_2", rt_water),
                  (call_script, "script_get_closest_center", "p_temp_party"),
                  (assign, ":nearest_center_2", reg0),
                  (try_begin),
                    (gt, ":nearest_center_2", -1),
                    (try_begin),
                      (this_or_next|party_slot_eq, ":nearest_center_2", slot_party_type, spt_town),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_castle),
                      (assign, ":bound_center_2", ":nearest_center_2"), # itself
                    (else_try),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_village),
                      (party_get_slot, ":bound_center_2", ":nearest_center_2", slot_village_bound_center),
                    (try_end),
                    (neq, ":bound_center_2", ":bound_center"),
                    (assign, ":continue", 1),
                  (try_end),
                (else_try),
                  (neq, ":current_terrain", ":current_terrain_2"),
                  (this_or_next|eq, ":current_terrain", rt_water),
                  (eq, ":current_terrain_2", rt_water),
                  (assign, ":continue", 1),
                (try_end),
                (eq, ":continue", 1),
                (create_mesh_overlay, reg0, "mesh_white_plane"),
                (overlay_set_color, reg0, 0),
                (position_set_x, pos1, ":pos_x"),
                (position_set_y, pos1, ":pos_y"),
                (overlay_set_position, reg0, pos1),
                (position_set_x, pos1, ":line_whidth"),
                (position_set_y, pos1, ":line_length"),
                (overlay_set_size, reg0, pos1),
              (try_end),
            (try_end),
            # compare with the under color block
            (try_begin),
              (assign, ":map_x_2", ":map_x"),
              (store_sub, ":map_y_2", ":map_y", ":party_move_length"),
              (position_set_x, pos4, ":map_x_2"),
              (position_set_y, pos4, ":map_y_2"),
              (party_set_position, "p_temp_party", pos4),
              (party_get_current_terrain, ":current_terrain_2", "p_temp_party"),
              (try_begin),
                (assign, ":continue", 0),
                (try_begin),
                  (neq, ":current_terrain", rt_water),
                  (neq, ":current_terrain_2", rt_water),
                  (call_script, "script_get_closest_center", "p_temp_party"),
                  (assign, ":nearest_center_2", reg0),
                  (try_begin),
                    (gt, ":nearest_center_2", -1),
                    (try_begin),
                      (this_or_next|party_slot_eq, ":nearest_center_2", slot_party_type, spt_town),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_castle),
                      (assign, ":bound_center_2", ":nearest_center_2"),
                    (else_try),
                      (party_slot_eq, ":nearest_center_2", slot_party_type, spt_village),
                      (party_get_slot, ":bound_center_2", ":nearest_center_2", slot_village_bound_center),
                    (try_end),
                    (neq, ":bound_center_2", ":bound_center"),
                    (assign, ":continue", 1),
                  (try_end),
                (else_try),
                  (neq, ":current_terrain", ":current_terrain_2"),
                  (this_or_next|eq, ":current_terrain", rt_water),
                  (eq, ":current_terrain_2", rt_water),
                  (assign, ":continue", 1),
                (try_end),
                (eq, ":continue", 1),
                (create_mesh_overlay, reg0, "mesh_white_plane"),
                (overlay_set_color, reg0, 0),
                (position_set_x, pos1, ":pos_x"),
                (position_set_y, pos1, ":pos_y"),
                (overlay_set_position, reg0, pos1),
                (position_set_x, pos1, ":line_length"),
                (position_set_y, pos1, ":line_whidth"),
                (overlay_set_size, reg0, pos1),
              (try_end),
            (try_end),
            ## draw borderlines end [optional]
           
            # offset
            (val_add, ":pos_x", ":color_block_length"),
            (val_add, ":map_x", ":party_move_length"),
          (try_end),
          # offset
          (assign, ":pos_x", ":init_pos_x"),
          (val_sub, ":pos_y", ":color_block_length"),
          (assign, ":map_x", ":init_map_x"),
          (val_sub, ":map_y", ":party_move_length"),
        (try_end),
       
        ## blocks of centers
        (assign, ":slot_no", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_is_active, ":center_no"),
          (party_get_position, pos4, ":center_no"),
          (position_get_x, ":center_x", pos4),
          (position_get_y, ":center_y", pos4),
          (val_sub, ":center_x", ":init_map_x"),
          (val_sub, ":center_y", ":init_map_y"),
          (val_mul, ":center_x", ":color_block_length"),
          (val_mul, ":center_y", ":color_block_length"),
          (val_div, ":center_x", ":party_move_length"),
          (val_div, ":center_y", ":party_move_length"),
          (val_add, ":center_x", ":init_pos_x"),
          (val_add, ":center_y", ":init_pos_y"),
          # offset and size
          (try_begin),
            (party_slot_eq, ":center_no", slot_party_type, spt_town),
            (assign, ":block_size", 8),
            (assign, ":center_type", spt_town),
          (else_try),
            (party_slot_eq, ":center_no", slot_party_type, spt_castle),
            (assign, ":block_size", 4),
            (assign, ":center_type", spt_castle),
          (else_try),
            (party_slot_eq, ":center_no", slot_party_type, spt_village),
            (assign, ":block_size", 2),
            (assign, ":center_type", spt_village),
          (try_end),
          (store_div, ":half_block_size", ":block_size", 2),
          (val_sub, ":center_x", ":half_block_size"),
          (val_sub, ":center_y", ":half_block_size"),
          (val_mul, ":block_size", 50),
          # block
          (create_mesh_overlay, reg0, "mesh_white_plane"),
          (overlay_set_color, reg0, 0),
          (position_set_x, pos1, ":center_x"),
          (position_set_y, pos1, ":center_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, ":block_size"),
          (position_set_y, pos1, ":block_size"),
          (overlay_set_size, reg0, pos1),
          # name
          (str_store_party_name, s1, ":center_no"),
          (create_text_overlay, reg1, s1, tf_center_justify),
          (store_add, ":text_x", ":center_x", 0),
          (store_add, ":text_y", ":center_y", 10),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg1, pos1),
          (overlay_set_display, reg1, 0),
          # slots
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg0), # overlay id
          (troop_set_slot, "trp_temp_array_b", ":slot_no", ":center_type"), # center type
          (troop_set_slot, "trp_temp_array_c", ":slot_no", reg1), # center name
          (val_add, ":slot_no", 1),
        (try_end),
        (assign, "$temp", ":slot_no"), # record num of slots
       
        ## blocks of kingdoms
        (create_text_overlay, reg0, "@Factions", tf_vertical_align_center),
        (position_set_x, pos1, 790),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg0, pos1),
       
        (assign, ":pos_x", 750),
        (assign, ":pos_y", 650),
        (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
          (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
          # color block
          (create_mesh_overlay, reg0, "mesh_white_plane"),
          (faction_get_color, ":dest_color", ":cur_kingdom"),
          (overlay_set_color, reg0, ":dest_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg0, pos1),
          # size: 35*25
          (position_set_x, pos1, 35*50),
          (position_set_y, pos1, 25*50),
          (overlay_set_size, reg0, pos1),
          # kingdom name
          (store_add, ":text_x", ":pos_x", 40),
          (store_add, ":text_y", ":pos_y", 12),
          (str_store_faction_name, s1, ":cur_kingdom"),
          (create_text_overlay, reg0, s1, tf_vertical_align_center),
          (position_set_x, pos1, ":text_x"),
          (position_set_y, pos1, ":text_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg0, pos1),
          (val_sub, ":pos_y", 40),
        (try_end),
       
        ## show centers or not
        # towns
        (create_check_box_overlay, "$g_presentation_obj_1", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 110),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_set_val, "$g_presentation_obj_1", 1),
        (create_text_overlay, reg0, "@Show towns", tf_vertical_align_center),
        (position_set_x, pos1, 80),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg0, pos1),
        # castles
        (create_check_box_overlay, "$g_presentation_obj_2", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 110),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (overlay_set_val, "$g_presentation_obj_2", 1),
        (create_text_overlay, reg0, "@Show castles", tf_vertical_align_center),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg0, pos1),
        # villages
        (create_check_box_overlay, "$g_presentation_obj_3", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 110),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (overlay_set_val, "$g_presentation_obj_3", 1),
        (create_text_overlay, reg0, "@Show villages", tf_vertical_align_center),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg0, pos1),
       
        (create_text_overlay, reg0, "@Tip: move the mouse onto the black blocks to show their names.", tf_vertical_align_center),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 95),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
       
        (create_text_overlay, reg0, "@The World Map", tf_double_space|tf_center_justify),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 30),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, reg0, pos1),
       
        # Done
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
      ]),
   
    (ti_on_presentation_mouse_enter_leave,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
       
        # show center name when mouse on it
        (try_for_range, ":slot_no", 0, "$temp"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (store_sub, ":display_overlay", 1, ":enter_leave"),
          (troop_get_slot, ":cur_overlay", "trp_temp_array_c", ":slot_no"),
          (overlay_set_display, ":cur_overlay", ":display_overlay"),
        (try_end),
      ]),
 
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
       
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"), # show towns
          (try_for_range, ":slot_no", 0, "$temp"),
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", spt_town),
            (troop_get_slot, ":cur_overlay", "trp_temp_array_a", ":slot_no"),
            (overlay_set_display, ":cur_overlay", ":value"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"), # show castles
          (try_for_range, ":slot_no", 0, "$temp"),
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", spt_castle),
            (troop_get_slot, ":cur_overlay", "trp_temp_array_a", ":slot_no"),
            (overlay_set_display, ":cur_overlay", ":value"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"), # show villages
          (try_for_range, ":slot_no", 0, "$temp"),
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", spt_village),
            (troop_get_slot, ":cur_overlay", "trp_temp_array_a", ":slot_no"),
            (overlay_set_display, ":cur_overlay", ":value"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
      ]),
  ]),
  
  ##################################################
##### troop_ratio_bar
##################################################
  ("troop_ratio_bar",prsntf_read_only,0,[
      (ti_on_presentation_load,
       [
        (assign, "$presentation_troop_ratio_bar_active", 1),
        (set_fixed_point_multiplier, 1000),
       
        (create_mesh_overlay, "$g_presentation_obj_1", "mesh_status_troop_ratio_bar"),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
       
        (position_set_x, pos1, 35),
        (position_set_y, pos1, 713),
       
        (create_mesh_overlay, "$g_presentation_obj_2", "mesh_white_plane"),
        (overlay_set_color, "$g_presentation_obj_2", 0xAA1F1F),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
       
        (create_mesh_overlay, "$g_presentation_obj_3", "mesh_white_plane"),
        (overlay_set_color, "$g_presentation_obj_3", 0x1F1FAA),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
     
        (create_mesh_overlay, "$g_presentation_obj_4", "mesh_white_plane"),
        (overlay_set_color, "$g_presentation_obj_4", 0x1FAA1F),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
       
        (create_mesh_overlay, "$g_presentation_obj_5", "mesh_status_troop_ratio_bar_button"),
        (position_set_x, pos1, 35),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
       
        (create_mesh_overlay, "$g_presentation_obj_6", "mesh_status_troop_ratio_bar_button"),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_6", pos1),

        (create_mesh_overlay, "$g_presentation_obj_7", "mesh_status_troop_ratio_bar_button"),
        (create_mesh_overlay, "$g_presentation_obj_8", "mesh_status_troop_ratio_bar_button"),
       
        (presentation_set_duration, 999999),
       ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
       
        (set_fixed_point_multiplier, 1000),
        (assign, ":player_count", 0),
        (assign, ":ally_count", 0),
        (assign, ":enemy_count", 0),
        (assign, ":total_count", 0),
       
        (try_for_agents, ":cur_agent"),
          (agent_is_human, ":cur_agent"),
          (agent_is_alive, ":cur_agent"),
          (agent_get_party_id, ":agent_party", ":cur_agent"),
          (try_begin),
            (eq, ":agent_party", "p_main_party"),
            (val_add, ":player_count", 1),
          (else_try),
            (agent_is_ally, ":cur_agent"),
            (val_add, ":ally_count", 1),
          (else_try),
            (val_add, ":enemy_count", 1),
          (try_end),
        (try_end),
        (val_add, ":total_count", ":player_count"),
        (val_add, ":total_count", ":ally_count"),
        (val_add, ":total_count", ":enemy_count"),

        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 300),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
     
        (store_add, ":ally_percent", ":player_count", ":ally_count"),
        (val_mul, ":ally_percent", 12000),
        (val_div, ":ally_percent", ":total_count"),
        (position_set_x, pos1, ":ally_percent"),
        (position_set_y, pos1, 300),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
     
        (store_mul, ":player_percent", ":player_count", 12000),
        (val_div, ":player_percent", ":total_count"),
        (position_set_x, pos1, ":player_percent"),
        (position_set_y, pos1, 300),
        (overlay_set_size, "$g_presentation_obj_4", pos1),
       
        (store_add, ":ally_percent_2", ":player_count", ":ally_count"),
        (val_mul, ":ally_percent_2", 240),
        (val_div, ":ally_percent_2", ":total_count"),
        (val_add, ":ally_percent_2", 35),
        (position_set_x, pos1, ":ally_percent_2"),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
       
        (store_mul, ":player_percent_2", ":player_count", 240),
        (val_div, ":player_percent_2", ":total_count"),
        (val_add, ":player_percent_2", 35),
        (position_set_x, pos1, ":player_percent_2"),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
       
        (try_begin),
          (eq, "$presentation_troop_ratio_bar_active", 1),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (assign, "$presentation_troop_ratio_bar_active", 0),
          (presentation_set_duration, 0),
          (start_presentation, "prsnt_battle"),
        (try_end),
       ]),
       
     ]),
##################################################
##### troop_ratio_bar
##################################################


## ZZ Custom Kingdom Troops begin
  ("custom_kingdom_troop", 0, mesh_load_window2, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
	
	(create_text_overlay, reg1, "@Language:", tf_right_align),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800),
	(overlay_set_size, reg1, pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 190),
	(overlay_set_position, reg1, pos1),
	(create_combo_label_overlay, "$g_custom_troops_language"),
	(position_set_x, pos1, 310), (position_set_y, pos1, 180),
	(overlay_set_position, "$g_custom_troops_language", pos1),
	(position_set_x, pos1, 550), (position_set_y, pos1, 1000),
	(overlay_set_size, "$g_custom_troops_language", pos1),
	(create_text_overlay, "$g_custom_troops_hmg_title", "@Heavy Machine Gun:", tf_right_align),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800),
	(overlay_set_size, "$g_custom_troops_hmg_title", pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 160),
	(overlay_set_position, "$g_custom_troops_hmg_title", pos1),
	(create_combo_label_overlay, "$g_custom_troops_hmg"),
	(position_set_x, pos1, 310), (position_set_y, pos1, 150),
	(overlay_set_position, "$g_custom_troops_hmg", pos1),
	(position_set_x, pos1, 550), (position_set_y, pos1, 1000),
	(overlay_set_size, "$g_custom_troops_hmg", pos1),
	(create_text_overlay, "$g_custom_troops_lmg_title", "@Light Machine Gun:", tf_right_align),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800),
	(overlay_set_size, "$g_custom_troops_lmg_title", pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 130),
	(overlay_set_position, "$g_custom_troops_lmg_title", pos1),
	(create_combo_label_overlay, "$g_custom_troops_lmg"),
	(position_set_x, pos1, 310), (position_set_y, pos1, 120),
	(overlay_set_position, "$g_custom_troops_lmg", pos1),
	(position_set_x, pos1, 550), (position_set_y, pos1, 1000),
	(overlay_set_size, "$g_custom_troops_lmg", pos1),
	(create_text_overlay, "$g_custom_troops_smg_title", "@Sub-machine Gun:", tf_right_align),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800),
	(overlay_set_size, "$g_custom_troops_smg_title", pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 100),
	(overlay_set_position, "$g_custom_troops_smg_title", pos1),
	(create_combo_label_overlay, "$g_custom_troops_smg"),
	(position_set_x, pos1, 310), (position_set_y, pos1, 90),
	(overlay_set_position, "$g_custom_troops_smg", pos1),
	(position_set_x, pos1, 550), (position_set_y, pos1, 1000),
	(overlay_set_size, "$g_custom_troops_smg", pos1),
	(overlay_add_item, "$g_custom_troops_language", "@None"),
	(overlay_add_item, "$g_custom_troops_language", "@English"),
	(overlay_add_item, "$g_custom_troops_language", "@Russian"),
	(overlay_add_item, "$g_custom_troops_language", "@German"),
	(overlay_add_item, "$g_custom_troops_language", "@Turkish"),
	(overlay_add_item, "$g_custom_troops_language", "@Spanish"),
	(overlay_add_item, "$g_custom_troops_language", "@Italian"),
	(overlay_add_item, "$g_custom_troops_language", "@French"),
	(overlay_add_item, "$g_custom_troops_language", "@Polish"),
		(try_begin),
		(troop_get_slot, ":language", "trp_kingdom_recruit", slot_troop_language),
		(ge, ":language", 1),
		(overlay_set_val, "$g_custom_troops_language", ":language"),
		(try_end),
	(overlay_add_item, "$g_custom_troops_hmg", "@Maxim Gun"),
	(overlay_add_item, "$g_custom_troops_hmg", "@Maxim Gun M1910"),
	(overlay_add_item, "$g_custom_troops_hmg", "@MG-08"),
	(overlay_add_item, "$g_custom_troops_hmg", "@Hotchkiss Mle 1914"),
	(overlay_add_item, "$g_custom_troops_hmg", "@Schwarzlose M. 7"),
	(overlay_add_item, "$g_custom_troops_hmg", "@Vickers Gun"),
	(overlay_add_item, "$g_custom_troops_hmg", "@M1917 Browning"),
		(try_begin),
		(faction_get_slot, ":hmg", "fac_player_faction", slot_faction_mg_item),
			(try_begin),
			(eq, ":hmg", "itm_mg1"),
			(overlay_set_val, "$g_custom_troops_hmg", 0),
			(else_try),
			(val_sub, ":hmg", "itm_mg2_russian"), (val_add, ":hmg", 1),
			(overlay_set_val, "$g_custom_troops_hmg", ":hmg"),
			(try_end),
		(try_end),
	(overlay_add_item, "$g_custom_troops_lmg", "@Lewis"),
	(overlay_add_item, "$g_custom_troops_lmg", "@Chauchat"),
	(overlay_add_item, "$g_custom_troops_lmg", "@Madsen"),
	(overlay_add_item, "$g_custom_troops_lmg", "@MG 08/15"),
	(overlay_add_item, "$g_custom_troops_lmg", "@Hotchkiss M1909"),
		(try_begin),
		(faction_get_slot, ":lmg", "fac_player_faction", slot_faction_lmg),
		(val_sub, ":lmg", "itm_lmg_lewis"), (val_div, ":lmg", 2),
		(overlay_set_val, "$g_custom_troops_lmg", ":lmg"),
		(try_end),
	(overlay_add_item, "$g_custom_troops_smg", "@None"),
	(overlay_add_item, "$g_custom_troops_smg", "@MP-18"),
	(overlay_add_item, "$g_custom_troops_smg", "@Fedorov"),
	(overlay_add_item, "$g_custom_troops_smg", "@Beretta 1918"),
		(try_begin),
		(faction_get_slot, ":smg", "fac_player_faction", slot_faction_smg),
		(le, ":smg", 2),
		(overlay_set_val, "$g_custom_troops_smg", 0),
		(else_try),
		(val_sub, ":smg", "itm_lmg_mp18"), (val_div, ":smg", 2), (val_add, ":smg", 2),
		(overlay_set_val, "$g_custom_troops_smg", ":smg"),
		(try_end),
		(try_begin),
		(call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_infantrymgtactics),
		(else_try),
		(position_set_x, pos1, -500), (position_set_y, pos1, -500),
		(overlay_set_position, "$g_custom_troops_hmg", pos1),
		(overlay_set_position, "$g_custom_troops_hmg_title", pos1),
		(try_end),
		(try_begin),
		(call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_lmgs),
		(else_try),
		(position_set_x, pos1, -500), (position_set_y, pos1, -500),
		(overlay_set_position, "$g_custom_troops_lmg", pos1),
		(overlay_set_position, "$g_custom_troops_lmg_title", pos1),
		(try_end),
		(try_begin),
		(call_script, "script_cf_if_party_faction_invented_technology", "p_main_party", slot_faction_technology_shocktroops),
		(else_try),
		(position_set_x, pos1, -500), (position_set_y, pos1, -500),
		(overlay_set_position, "$g_custom_troops_smg", pos1),
		(overlay_set_position, "$g_custom_troops_smg_title", pos1),
		(try_end),
		
	    (create_text_overlay,reg1,"@Press Escape to close menu...",),		
		(position_set_x, pos1, 140),
        (position_set_y, pos1, 50),
		(overlay_set_position, reg1, pos1),
		
        (str_store_faction_name, s7, "fac_player_supporters_faction"),
	    (create_text_overlay,"$g_presentation_obj_13","@Army of {s7}",),		
		(position_set_x, pos1, 110),
        (position_set_y, pos1, 680),
		(overlay_set_position, "$g_presentation_obj_13", pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, "$g_presentation_obj_13", pos1),
		(overlay_set_color, "$g_presentation_obj_13", 0x110000),

		
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_recruit", 115, 250,0),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_militia", 265, 250,1),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_footman", 415, 400,2),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_man_at_arms", 565, 500,3),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_knight", 715, 500,4),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_infantry", 565, 300,5),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_sergeant", 715, 300,6),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_skirmisher", 415, 100,7),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_crossbowman", 565, 100,8),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_kingdom_sharpshooter", 715, 100,9),
		
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_fieldgun_cannoneer_officer", 800, 590,10),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_howitzer_cannoneer_officer", 800, 460,11),
			(try_begin),
			(faction_get_slot, ":progress", "fac_player_faction", slot_faction_technology_modernartillery),
			(eq, ":progress", 10000),
			(call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_heavyhowitzer_cannoneer_officer", 800, 330,12),
			(else_try),
			(call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_heavyhowitzer_cannoneer_officer", -500, -500,12),
			(try_end),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_fieldgun_cannoneer", 800, 200,13),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_howitzer_cannoneer", 800, 70,14),
			(try_begin),
			(faction_get_slot, ":progress", "fac_player_faction", slot_faction_technology_machineguns),
			(eq, ":progress", 10000),
			(call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_mgoperator", 910, 375,15),
			(else_try),
			(call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_factionplayer_mgoperator", -500, -500,15),
			(try_end),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name","trp_lordmodel_0", 910, 590, 16),

        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_recruit", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_militia", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_footman", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_man_at_arms", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_infantry", 645, 410),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_skirmisher", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_kingdom_crossbowman", 645, 210),
        ## cost

        ##### - lines
        (call_script, "script_prsnt_lines", 50, 4, 170, 340, 0),
        (call_script, "script_prsnt_lines", 25, 4, 320, 340, 0),
        (call_script, "script_prsnt_lines", 25, 4, 345, 490, 0),
        (call_script, "script_prsnt_lines", 25, 4, 345, 190, 0),
        (call_script, "script_prsnt_lines", 50, 4, 470, 190, 0),
        (call_script, "script_prsnt_lines", 25, 4, 470, 490, 0),
        (call_script, "script_prsnt_lines", 25, 4, 495, 590, 0),
        (call_script, "script_prsnt_lines", 25, 4, 495, 390, 0),
        ##### - lines

        ##### | lines
        (call_script, "script_prsnt_lines", 4, 304, 343, 190, 0),
        (call_script, "script_prsnt_lines", 4, 204, 493, 390, 0),
        ##### | lines

        (call_script, "script_prsnt_lines", 50, 4, 620, 190, 0),
        (call_script, "script_prsnt_lines", 50, 4, 620, 390, 0),
        (call_script, "script_prsnt_lines", 50, 4, 620, 590, 0),
      ]),
		
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
        (eq, ":object", "$g_custom_troops_smg"),
		(try_begin),
		(eq, ":value", 0),
		(faction_set_slot, "fac_player_faction", slot_faction_smg, -1),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_smg, -1),
		(else_try),
		(val_add, ":value", -1), (val_mul, ":value", 2),
		(val_add, ":value", "itm_lmg_mp18"),
		(faction_set_slot, "fac_player_faction", slot_faction_smg, ":value"),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_smg, ":value"),
		(try_end),
        (else_try),
        (eq, ":object", "$g_custom_troops_lmg"),
		(val_mul, ":value", 2),
		(val_add, ":value", "itm_lmg_lewis"),
		(faction_set_slot, "fac_player_faction", slot_faction_lmg, ":value"),
		(faction_set_slot, "fac_player_supporters_faction", slot_faction_lmg, ":value"),
        (else_try),
        (eq, ":object", "$g_custom_troops_hmg"),
			(try_begin),
			(eq, ":value", 0),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg1"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg1"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg1"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg1"),
			(else_try),
			(eq, ":value", 1),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg2_russian"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg2_russian"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg2_russian"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg2_russian"),
			(else_try),
			(eq, ":value", 2),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg3_german"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg3_german"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg3_german"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg3_german"),
			(else_try),
			(eq, ":value", 3),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg4_french"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg4_french"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg4_french"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg4_french"),
			(else_try),
			(eq, ":value", 4),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg5_austrian"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg5_austrian"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg5_austrian"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg5_austrian"),
			(else_try),
			(eq, ":value", 5),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg6_british"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg6_british"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg6_british"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg6_british"),
			(else_try),
			(eq, ":value", 6),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_item, "itm_mg7_american"),
			(faction_set_slot, "fac_player_faction", slot_faction_mg_prop, "spr_mg7_american"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_item, "itm_mg7_american"),
			(faction_set_slot, "fac_player_supporters_faction", slot_faction_mg_prop, "spr_mg7_american"),
			(try_end),
        (else_try),
        (eq, ":object", "$g_custom_troops_language"),
			(try_begin),
			(eq, ":value", 0),
				(try_for_range, ":troop", "trp_kingdom_recruit", "trp_array_a"),
				(troop_set_slot, ":troop", slot_troop_language, -1),
				(try_end),
			(troop_set_slot, "trp_factionplayer_fieldgun_cannoneer_officer", slot_troop_language, -1),
			(troop_set_slot, "trp_factionplayer_howitzer_cannoneer_officer", slot_troop_language, -1),
			(troop_set_slot, "trp_factionplayer_heavyhowitzer_cannoneer_officer", slot_troop_language, -1),
			(troop_set_slot, "trp_factionplayer_fieldgun_cannoneer", slot_troop_language, -1),
			(troop_set_slot, "trp_factionplayer_howitzer_cannoneer", slot_troop_language, -1),
			(troop_set_slot, "trp_factionplayer_mgoperator", slot_troop_language, -1),
			(else_try),
				(try_for_range, ":troop", "trp_kingdom_recruit", "trp_array_a"),
				(troop_set_slot, ":troop", slot_troop_language, ":value"),
				(try_end),
			(troop_set_slot, "trp_factionplayer_fieldgun_cannoneer_officer", slot_troop_language, ":value"),
			(troop_set_slot, "trp_factionplayer_howitzer_cannoneer_officer", slot_troop_language, ":value"),
			(troop_set_slot, "trp_factionplayer_heavyhowitzer_cannoneer_officer", slot_troop_language, ":value"),
			(troop_set_slot, "trp_factionplayer_fieldgun_cannoneer", slot_troop_language, ":value"),
			(troop_set_slot, "trp_factionplayer_howitzer_cannoneer", slot_troop_language, ":value"),
			(troop_set_slot, "trp_factionplayer_mgoperator", slot_troop_language, ":value"),
			(try_end),
        (else_try),
			(try_for_range, ":slot_no", 0, 17),
			  (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
			  (troop_get_slot, "$temp_troop", "trp_temp_array_b", ":slot_no"),
			  (call_script,"script_get_custom_troop_info","$temp_troop"),
			  (call_script,"script_store_custom_troop_info_to_slot","trp_array_b"),

			  (troop_get_slot, ":skill_point", "$temp_troop", slot_custom_troop_sp),
			  (troop_get_slot, ":weapon_point",  "$temp_troop", slot_custom_troop_wp),
			  (troop_get_slot, ":attribute_point",  "$temp_troop", slot_custom_troop_ap),
			  (assign,"$skill_points",":skill_point"),
			  (assign,"$weapon_points",":weapon_point"),
			  (assign,"$attribute_points",":attribute_point"),
			 
			  (start_presentation, "prsnt_custom_troop"),
			(try_end),
        (try_end),
      ]),
	 
    (ti_on_presentation_run,
     [
      (set_fixed_point_multiplier, 1000),

	  #(call_script, "script_presentation_run"),	 

     (try_begin),
        (key_clicked, key_escape),
(assign, "$custom_troops_set", 1),
        (presentation_set_duration, 0),
      (try_end),]),	 
  ]),
## ZZ Custom Kingdom Troops end

## ZZ Custom Kingdom Troops begin
("custom_troop", prsntf_manual_end_only, mesh_troop_info_win_1, [
    (ti_on_presentation_load,
     [
      (set_fixed_point_multiplier, 1000),

	  #(call_script, "script_presentation_load"),
	 
        (store_mul, ":cur_troop", "$temp_troop", 2), #with weapons
		(create_image_button_overlay_with_tableau_material, "$g_presentation_credits_obj_1", -1, "tableau_game_party_window", ":cur_troop"),	
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_1", pos1),		
		(position_set_x, pos1, 0),
		(position_set_y, pos1, 355),
		(overlay_set_position, "$g_presentation_credits_obj_1", pos1),
		
		(str_store_string,s1,"@Attributes"),	
	    (create_text_overlay,"$g_presentation_credits_obj_2",s1,tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_2", 0x000033),			
		(position_set_x, pos1, 80),
        (position_set_y, pos1, 240),
		(overlay_set_position, "$g_presentation_credits_obj_2", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
		
		(str_store_string,s1,"@Skills"),	
	    (create_text_overlay,"$g_presentation_credits_obj_3",s1,tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_3", 0x003300),			
		(position_set_x, pos1, 400),
        (position_set_y, pos1, 510),
		(overlay_set_position, "$g_presentation_credits_obj_3", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_3", pos1),

		(str_store_string,s1,"@Proficiencies"),	
	    (create_text_overlay,"$g_presentation_credits_obj_4",s1,tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_4", 0x330000),			
		(position_set_x, pos1, 755),
        (position_set_y, pos1, 410),
		(overlay_set_position, "$g_presentation_credits_obj_4", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_4", pos1),		

		(assign,reg40,"$attribute_points"),
		(assign,reg41,"$skill_points"),
		(assign,reg42,"$weapon_points"),
		
		(str_store_string,s1,"@Attribute points {reg40}"),	
	    (create_text_overlay,"$g_presentation_credits_obj_5",s1,tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_5", 0x000033),			
		(position_set_x, pos1, 90),
        (position_set_y, pos1, 50),
		(overlay_set_position, "$g_presentation_credits_obj_5", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_5", pos1),

		(str_store_string,s1,"@Skill points {reg41}"),	
	    (create_text_overlay,"$g_presentation_credits_obj_6",s1,tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_6", 0x003300),			
		(position_set_x, pos1, 400),
        (position_set_y, pos1, 50),
		(overlay_set_position, "$g_presentation_credits_obj_6", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_6", pos1),

		(str_store_string,s1,"@Weapon points {reg42}"),	
	    (create_text_overlay,"$g_presentation_credits_obj_7",s1,tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_7", 0x330000),			
		(position_set_x, pos1, 750),
        (position_set_y, pos1, 100),
		(overlay_set_position, "$g_presentation_credits_obj_7", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_7", pos1),

	    (create_text_overlay,"$g_presentation_credits_obj_8","str_troop_basic_info",tf_left_align),
		(overlay_set_color, "$g_presentation_credits_obj_8", 0x330000),			
		(position_set_x, pos1, 355),
        (position_set_y, pos1, 565),
		(overlay_set_position, "$g_presentation_credits_obj_8", pos1),
        (position_set_x, pos1, 1300),
        (position_set_y, pos1, 1300),
        (overlay_set_size, "$g_presentation_credits_obj_8", pos1),	

	    (create_text_box_overlay,"$g_presentation_credits_obj_9"),		
		(position_set_x, pos1, 462),
        (position_set_y, pos1, 700),
		(overlay_set_position, "$g_presentation_credits_obj_9", pos1),
        (position_set_x, pos1, 1300),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_credits_obj_9", pos1),		
		(str_store_troop_name_plural,s2,"$temp_troop"),
		(overlay_set_text,"$g_presentation_credits_obj_9",s2),
		
        (create_game_button_overlay, "$g_presentation_credits_obj_10", "@Save", 0),
        (position_set_x, pos1, 920),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
		
        (create_game_button_overlay, "$g_presentation_credits_obj_11", "@Reset", 0),
        (position_set_x, pos1, 760),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_presentation_credits_obj_11", pos1),		
		
		(assign,":offset",0),
		(assign,":offset_2",0),		
		(assign,":pos_1_y",210),
		(assign,":pos_2_y",480),
		(assign,":pos_2_2_y",485),		
		(assign,":pos_3_y",370),		
		(position_set_x, pos1, 40),
		(position_set_x, pos2, 350),
		(position_set_x, pos3, 710),
		(position_set_x, pos4, 600),
		(position_set_x, pos5, 230),
		(position_set_x, pos6, 640),
		(position_set_x, pos7, 950),		
		(position_set_x, pos10, 850),
        (position_set_y, pos10, 850),
		(position_set_x, pos11, 1100),
        (position_set_y, pos11, 1100),
		(position_set_x, pos12, 300),
        (position_set_y, pos12, 300),
		(position_set_x, pos13, 200),
        (position_set_y, pos13, 200),		
		(try_for_range,":num",0,35),
			(store_sub, ":str_id", "str_str",  ":offset"),
			(str_store_string,s1,":str_id"),
			(val_add,":offset",1),
			(try_begin),
				(lt,":num",4),
				(position_set_y, pos1, ":pos_1_y"),
				(position_set_y, pos5, ":pos_1_y"),							
				(create_text_overlay,"$g_presentation_obj_20",s1,tf_left_align),
				(overlay_set_position, "$g_presentation_obj_20", pos1),
				(overlay_set_size, "$g_presentation_obj_20", pos11),				
				(overlay_set_color, "$g_presentation_obj_20", 0x000033),
				(store_add, ":num_2", ":num",  50),				
				(troop_set_slot,"trp_array_a",":num_2","$g_presentation_obj_20"),
				(create_image_button_overlay, "$g_presentation_obj_20","mesh_button1_up", "mesh_button1_down"),
				(overlay_set_position, "$g_presentation_obj_20", pos5),
				(overlay_set_size, "$g_presentation_obj_20", pos12),				
				(troop_set_slot,"trp_array_a",":num","$g_presentation_obj_20"),					
				(val_sub, ":pos_1_y",30),
			(else_try),
				(ge,":num",4),
				(lt,":num",28),				
				(store_add, ":str_id_2", "str_reg5",  ":offset_2"),
				(str_store_string,s2,":str_id_2"),
				(val_add,":offset_2",1),				
				(position_set_y, pos2,":pos_2_y"),
				(position_set_y, pos4,":pos_2_y"),
				(position_set_y, pos6,":pos_2_2_y"),				
				(create_text_overlay,"$g_presentation_obj_20",s1,tf_left_align),
				(overlay_set_position, "$g_presentation_obj_20", pos2),
				(overlay_set_size, "$g_presentation_obj_20", pos10),				
				(overlay_set_color, "$g_presentation_obj_20", 0x003300),
				(store_add, ":num_2", ":num",  50),					
				(troop_set_slot,"trp_array_a",":num_2","$g_presentation_obj_20"),
				(create_text_overlay,"$g_presentation_obj_20",s2,tf_left_align),	
				(overlay_set_position, "$g_presentation_obj_20", pos4),
				(overlay_set_size, "$g_presentation_obj_20", pos10),	
				(overlay_set_color, "$g_presentation_obj_20", 0x003300),
				(store_add, ":num_2", ":num",  100),				
				(troop_set_slot,"trp_array_a",":num_2","$g_presentation_obj_20"),
				(create_image_button_overlay, "$g_presentation_obj_20","mesh_button1_up", "mesh_button1_down"),
				(overlay_set_position, "$g_presentation_obj_20", pos6),
				(overlay_set_size, "$g_presentation_obj_20", pos13),			
				(troop_set_slot,"trp_array_a",":num","$g_presentation_obj_20"),				
				(val_sub, ":pos_2_y",17),	
				(val_sub, ":pos_2_2_y",17),					
			(else_try),
				(position_set_y, pos3,":pos_3_y"),
				(position_set_y, pos7,":pos_3_y"),				
				(create_text_overlay,"$g_presentation_obj_20",s1,tf_left_align),
				(overlay_set_position, "$g_presentation_obj_20", pos3),
				(overlay_set_size, "$g_presentation_obj_20", pos11),				
				(overlay_set_color, "$g_presentation_obj_20", 0x330000),
				(store_add, ":num_2", ":num",  50),				
				(troop_set_slot,"trp_array_a",":num_2","$g_presentation_obj_20"),
				(create_image_button_overlay, "$g_presentation_obj_20","mesh_button1_up", "mesh_button1_down"),
				(overlay_set_position, "$g_presentation_obj_20", pos7),
				(overlay_set_size, "$g_presentation_obj_20", pos12),			
				(troop_set_slot,"trp_array_a",":num","$g_presentation_obj_20"),				
				(val_sub, ":pos_3_y",30),				
			(try_end),
		(try_end),

		(try_for_range, ":num", 0,35),
			(store_add,":slot_no",":num",300),			
			(troop_set_slot,"trp_array_a",":slot_no",0),		
			(call_script,"script_custom_troop_button_action",":num",2,0),			
			(troop_get_slot,":show_or_hide","trp_array_a", ":slot_no"),
			(troop_get_slot,"$g_presentation_obj_20","trp_array_a", ":num"),			
			(try_begin),
				(eq,":show_or_hide",1),
				(overlay_set_display,"$g_presentation_obj_20",0),
			(try_end),
			(troop_set_slot,"trp_array_a",":num","$g_presentation_obj_20"),
			(troop_set_slot,"trp_array_a",":slot_no",0),				
		(try_end),
		
		(assign,":offset",0),
		(position_set_x, pos1, 960),
        (position_set_y, pos1, 565),
		(position_set_x, pos2, 800),
        (position_set_y, pos2, 800),		
		(try_for_range, ":num", 0,35),
			(store_add, ":str_id", "str_explanation_strength",  ":offset"),
			(str_store_string,s1,":str_id"),
			(val_add,":offset",1),
			(create_text_overlay,"$g_presentation_obj_20",s1,tf_right_align),
			(overlay_set_position, "$g_presentation_obj_20", pos1),
			(overlay_set_size, "$g_presentation_obj_20", pos2),
			(overlay_set_color, "$g_presentation_obj_20", 0x330000),			
			(overlay_set_display,"$g_presentation_obj_20",0),			
			(store_add, ":num_3", ":num",  150),				
			(troop_set_slot,"trp_array_a",":num_3","$g_presentation_obj_20"),
		(try_end),
		
		(assign,":offset",0),
		(position_set_x, pos1, 710),
        (position_set_y, pos1, 460),
		(position_set_x, pos2, 1000),
        (position_set_y, pos2, 1000),		
		(try_for_range, ":num", 4,28),
			(store_add, ":str_id", "str_reg5",  ":offset"),
			(str_store_string,s1,":str_id"),
			(val_add,":offset",1),
			(str_store_string,s2,"@Current:{s1}"),
			(try_begin),
				(gt,":num",24),
				(str_store_string,s3,"@{s2}^Base Attribute:CHA"),
			(else_try),
				(gt,":num",13),
				(str_store_string,s3,"@{s2}^Base Attribute:INT"),
			(else_try),
				(gt,":num",7),
				(str_store_string,s3,"@{s2}^Base Attribute:AGI"),
			(else_try),
				(str_store_string,s3,"@{s2}^Base Attribute:STR"),
			(try_end),				
			(create_text_overlay,"$g_presentation_obj_20",s3,tf_left_align),
			(overlay_set_position, "$g_presentation_obj_20", pos1),
			(overlay_set_size, "$g_presentation_obj_20", pos2),
			(overlay_set_color, "$g_presentation_obj_20", 0x330000),			
			(overlay_set_display,"$g_presentation_obj_20",0),			
			(store_add, ":num_4", ":num",  200),				
			(troop_set_slot,"trp_array_a",":num_4","$g_presentation_obj_20"),
		(try_end),		
		
      (presentation_set_duration, 999999),
     ]),
	
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),

        (mouse_get_position, pos1),
        (position_get_x, ":pos_m_x", pos1),
		
		(try_begin),
			(eq, ":enter_leave", 0),
			(try_begin),
				(gt,":pos_m_x",700),
				(lt,":pos_m_x",950),			
				(try_for_range, ":num", 78,85),
					(troop_slot_eq, "trp_array_a", ":num", ":object"),
					(overlay_animate_to_color, ":object", 10, 0xFF0000),
					(store_add, ":num_3", ":num",  100),					
					(troop_get_slot,":str_obj","trp_array_a",":num_3"),
					(overlay_set_display,":str_obj",1),					
				(try_end),				
			(else_try),
				(gt,":pos_m_x",345),
				(lt,":pos_m_x",600),		
				(try_for_range, ":num", 54,78),
					(troop_slot_eq, "trp_array_a", ":num", ":object"),
					(overlay_animate_to_color, ":object", 10, 0x00FF00),
					(store_add, ":num_3", ":num",  100),					
					(troop_get_slot,":str_obj","trp_array_a",":num_3"),
					(overlay_set_display,":str_obj",1),	
					(store_add, ":num_4", ":num",  150),					
					(troop_get_slot,":str_obj","trp_array_a",":num_4"),
					(overlay_set_display,":str_obj",1),						
				(try_end),					
			(else_try),
				(gt,":pos_m_x",40),
				(lt,":pos_m_x",230),
				(eq, ":enter_leave", 0),			
				(try_for_range, ":num", 50,54),
					(troop_slot_eq, "trp_array_a", ":num", ":object"),
					(overlay_animate_to_color, ":object", 10, 0x0000FF),
					(store_add, ":num_3", ":num",  100),					
					(troop_get_slot,":str_obj","trp_array_a",":num_3"),
					(overlay_set_display,":str_obj",1),				
				(try_end),			
			(try_end),	
		(else_try),		
			(try_for_range, ":num", 78,85),
				(troop_slot_eq, "trp_array_a", ":num", ":object"),
				(overlay_animate_to_color, ":object", 10, 0x330000),
				(store_add, ":num_3", ":num",  100),					
				(troop_get_slot,":str_obj","trp_array_a",":num_3"),
				(overlay_set_display,":str_obj",0),				
			(try_end),
			(try_for_range, ":num", 54,78),
				(troop_slot_eq, "trp_array_a", ":num", ":object"),
				(overlay_animate_to_color, ":object", 10, 0x003300),
				(store_add, ":num_3", ":num",  100),					
				(troop_get_slot,":str_obj","trp_array_a",":num_3"),
				(overlay_set_display,":str_obj",0),
				(store_add, ":num_4", ":num",  150),					
				(troop_get_slot,":str_obj","trp_array_a",":num_4"),
				(overlay_set_display,":str_obj",0),					
			(try_end),
			(try_for_range, ":num", 50,54),
				(troop_slot_eq, "trp_array_a", ":num", ":object"),
				(overlay_animate_to_color, ":object", 10, 0x000033),
				(store_add, ":num_3", ":num",  100),					
				(troop_get_slot,":str_obj","trp_array_a",":num_3"),
				(overlay_set_display,":str_obj",0),				
			(try_end),			
        (try_end),
        ]),	

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

				(assign,reg50,0),
				(assign,reg51,0),
		
		(try_for_range, ":num", 0,35),
			(troop_slot_eq, "trp_array_a", ":num", ":object"),
			(call_script,"script_custom_troop_button_action",":num",0,0),
            (start_presentation, "prsnt_custom_troop"),			
		(try_end),
		
		(try_begin),
			(eq,":object","$g_presentation_credits_obj_10"),
			(call_script,"script_store_custom_troop_info_to_slot","trp_array_c"),
			(try_for_range,":num",0,35),
				(troop_get_slot,":original_num","trp_array_b",":num"),
				(troop_get_slot,":current_num","trp_array_c",":num"),
				#(assign,reg50,":original_num"),
				#(assign,reg51,":current_num"),
				#(display_message,"@original_num:{reg50},current_num:{reg51}"),
				(try_begin),
					(gt,":current_num",":original_num"),
					(store_sub,":increment",":current_num",":original_num"),
					(call_script,"script_custom_troop_button_action",":num",1,":increment"),
				(try_end),
			(try_end),
			(call_script,"script_store_custom_troop_info_to_slot","trp_array_b"),
		    (troop_set_slot,"$temp_troop", slot_custom_troop_sp,"$skill_points"),
	        (troop_set_slot,"$temp_troop", slot_custom_troop_wp,"$weapon_points"),
		    (troop_set_slot,"$temp_troop", slot_custom_troop_ap,"$attribute_points"),
			
		(start_presentation, "prsnt_custom_kingdom_troop"),
		(else_try),	
			(eq,":object","$g_presentation_credits_obj_9"),	
			(str_store_string,s2,s0),
			(troop_set_name, "$temp_troop", s2),
			(troop_set_plural_name, "$temp_troop", s2),
				(try_begin),
				(is_between, "$temp_troop", custom_troop_begin,  custom_troop_end),
				(store_sub,":offset","$temp_troop","trp_kingdom_recruit"),
				(else_try),
				(eq, "$temp_troop", "trp_factionplayer_fieldgun_cannoneer_officer"),
				(assign, ":offset", 10),
				(else_try),
				(eq, "$temp_troop", "trp_factionplayer_howitzer_cannoneer_officer"),
				(assign, ":offset", 11),
				(else_try),
				(eq, "$temp_troop", "trp_factionplayer_heavyhowitzer_cannoneer_officer"),
				(assign, ":offset", 12),
				(else_try),
				(eq, "$temp_troop", "trp_factionplayer_fieldgun_cannoneer"),
				(assign, ":offset", 13),
				(else_try),
				(eq, "$temp_troop", "trp_factionplayer_howitzer_cannoneer"),
				(assign, ":offset", 14),
				(else_try),
				(eq, "$temp_troop", "trp_factionplayer_mgoperator"),
				(assign, ":offset", 15),
				(else_try),
				(eq, "$temp_troop", "trp_lordmodel_0"),
				(assign, ":offset", 16),
				(try_end),
			(store_add,":faction_troop_name","fac_culture_1",":offset"),
			(faction_set_name,":faction_troop_name",s2),
		(else_try),	
			(eq,":object","$g_presentation_credits_obj_11"),
	      (call_script,"script_get_custom_troop_info","trp_kingdom_temp"),
			(call_script,"script_store_custom_troop_info_to_slot","trp_array_c"),

			(try_for_range,":num",0,35),
				(troop_get_slot,":original_num","trp_array_b",":num"),
				(troop_get_slot,":current_num","trp_array_c",":num"),
					(try_begin),
					(is_between,":num",28,35),
					(assign, ":current_num", 40),
					(try_end),
				(try_begin),
					(gt,":original_num",":current_num"),
					(store_sub,":temp_num",":current_num",":original_num"),
					(call_script,"script_custom_troop_button_action",":num",1,":temp_num"),
				(try_end),
			(try_end),
			(call_script,"script_get_custom_troop_info","$temp_troop"),
			(call_script,"script_store_custom_troop_info_to_slot","trp_array_b"),
			
			(store_character_level,":skill_point","$temp_troop"),
			(troop_set_slot,  "$temp_troop", slot_custom_troop_sp, ":skill_point"),			
		    (store_mul,":weapon_point",":skill_point", 5),
			(troop_set_slot,  "$temp_troop", slot_custom_troop_wp, ":weapon_point"),				
			(store_div,":attribute_point",":skill_point",3),
			(troop_set_slot,  "$temp_troop", slot_custom_troop_ap, ":attribute_point"),			
			
		    (troop_get_slot, ":skill_point", "$temp_troop", slot_custom_troop_sp),
	        (troop_get_slot, ":weapon_point",  "$temp_troop", slot_custom_troop_wp),
		    (troop_get_slot, ":attribute_point",  "$temp_troop", slot_custom_troop_ap),
		    (assign,"$skill_points",":skill_point"),
		    (assign,"$weapon_points",":weapon_point"),
		    (assign,"$attribute_points",":attribute_point"),
			
			(store_character_level,reg45,"$temp_troop"),
			(troop_get_xp,reg47,"$temp_troop"),
				
			
            (start_presentation, "prsnt_custom_troop"),		
		(else_try),	
			(eq,":object","$g_presentation_credits_obj_1"),
			(assign,"$current_item",-1),		
			(call_script,"script_custom_troop_inventory_initialization","$temp_troop"),			
			(start_presentation, "prsnt_custom_troop_item"),			
		(try_end),
    ]),		
	
    (ti_on_presentation_run,
     [
      (set_fixed_point_multiplier, 1000),

	  #(call_script, "script_presentation_run"),	 

     (try_begin),
        (key_clicked, key_escape),
		(start_presentation, "prsnt_custom_kingdom_troop"),
      (try_end),]),
  ]),
 
("custom_troop_item", 0, mesh_troop_info_win_2, [
    (ti_on_presentation_load,
     [
      (set_fixed_point_multiplier, 1000),

	(try_begin),
	(lt, "$cheat_find_item_range_begin", 649),
	(assign, "$cheat_find_item_range_begin", 649),
	(try_end),
		
(create_text_overlay,"$g_custom_troops_pbs_type_selection_text","@Battle role:"),		
(position_set_x, pos1, 763),
(position_set_y, pos1, 650),
(overlay_set_position, "$g_custom_troops_pbs_type_selection_text", pos1),
	 
	(try_begin),
	(is_between, "$temp_troop", "trp_kingdom_recruit", "trp_array_a"),
	(create_combo_label_overlay, "$g_custom_troops_pbs_type_selection"),
	(position_set_x, pos1, 820),
	(position_set_y, pos1, 600),
	(overlay_set_position, "$g_custom_troops_pbs_type_selection", pos1),
	(overlay_add_item, "$g_custom_troops_pbs_type_selection", "@Line Infantry"),
	(overlay_add_item, "$g_custom_troops_pbs_type_selection", "@Light Infantry"),
	(overlay_add_item, "$g_custom_troops_pbs_type_selection", "@Guard Infantry"),
	(overlay_add_item, "$g_custom_troops_pbs_type_selection", "@Melee Cavalry"),
	(overlay_add_item, "$g_custom_troops_pbs_type_selection", "@Ranged Cavalry"),
	(overlay_add_item, "$g_custom_troops_pbs_type_selection", "@Guard Cavalry"),
	(troop_get_slot, ":pbs_troop_type", "$temp_troop", slot_troop_pbs_type),
	(val_add, ":pbs_troop_type", -1),
	(overlay_set_val, "$g_custom_troops_pbs_type_selection", ":pbs_troop_type"),
	(try_end),
	  
        (store_mul, ":cur_troop", "$temp_troop", 2), #with weapons
		(create_mesh_overlay_with_tableau_material, "$g_presentation_obj_5", -1, "tableau_game_party_window", ":cur_troop"),## tableau_game_character_sheet
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_obj_5", pos1),		
		(position_set_x, pos1, 300),
		(position_set_y, pos1, 20),
		(overlay_set_position, "$g_presentation_obj_5", pos1),	 
	 
        (create_button_overlay, "$g_presentation_obj_3", "@Next", tf_center_justify),
        (position_set_x, pos1, 185),
        (position_set_y, pos1, 35),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_area_size, "$g_presentation_obj_3", pos1),
		
        (create_button_overlay, "$g_presentation_obj_3_back", "@Previous", tf_center_justify),
        (position_set_x, pos1, 95),
        (position_set_y, pos1, 35),
        (overlay_set_position, "$g_presentation_obj_3_back", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_area_size, "$g_presentation_obj_3_back", pos1),

		(call_script,"script_custom_troop_inventory_total_price","$temp_troop"),	
		(call_script,"script_custom_troop_inventory_total_weight","$temp_troop"),			
	    (create_text_overlay,"$g_presentation_obj_6","@Price {reg42}^Weight {reg43}",tf_left_align),		
		(position_set_x, pos1, 530),
        (position_set_y, pos1, 240),
		(overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_obj_6", pos1),
		
        (assign, reg5, "$cheat_find_item_range_begin"),
        (store_add, reg6, "$cheat_find_item_range_begin", 96),
	    (val_min, reg6, "itm_items_end"),
	    (val_sub, reg6, 1),
				
	    (create_text_overlay,"$g_presentation_obj_4","@{reg5} to {reg6}",0),		
		(position_set_x, pos1, 110),
        (position_set_y, pos1, 700),
		(overlay_set_position, "$g_presentation_obj_4", pos1),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1000),
        (overlay_set_size, "$g_presentation_obj_4", pos1),	
		
        (assign, ":pos_y_0_0", 605),
        (assign, ":pos_y_0_1", 650),		
        (assign, ":pos_y_1_0", 605),
        (assign, ":pos_y_1_1", 650),
		(position_set_x, pos10, 890),
		(position_set_y, pos10, 830),		
        (assign, ":slot_no", 0),		
        (try_for_range, ":unused_width", 0, 3),
		  (try_for_range, ":unused_height", 0, 4),	 
			(try_begin),
				(is_between,":slot_no",0,4),
				(troop_get_slot, ":slot_item", "trp_array_d",":slot_no"),				
				(create_mesh_overlay_with_item_id, "$g_presentation_obj_1", ":slot_item"),
				(position_set_x, pos1, 598),
				(position_set_y, pos1,  ":pos_y_0_1"),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(overlay_set_size, "$g_presentation_obj_1", pos10),				
				(troop_set_slot, "trp_array_c", ":slot_no", "$g_presentation_obj_1"),				
				(create_mesh_overlay, "$g_presentation_obj_1", "mesh_inv_slot"),				
				(position_set_x, pos1, 890),
				(position_set_y, pos1, 890),
				(overlay_set_size, "$g_presentation_obj_1", pos1),
				(position_set_x, pos1, 553),
				(position_set_y, pos1,  ":pos_y_0_0"),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(try_begin),
					(eq,":slot_item",0),
					(overlay_set_alpha, "$g_presentation_obj_1", 100),
				(try_end),
				(store_add,":slot_offset",":slot_no",50),				
				(troop_set_slot, "trp_array_c",":slot_offset", "$g_presentation_obj_1"),				
				(val_sub,  ":pos_y_0_0", 89),
				(val_sub,  ":pos_y_0_1", 89),				
			(else_try),
				(is_between,":slot_no",4,7),
				(troop_get_slot, ":slot_item", "trp_array_d",":slot_no"),				
				(create_mesh_overlay_with_item_id, "$g_presentation_obj_1", ":slot_item"),
				(position_set_x, pos1, 495),
				(position_set_y, pos1,  ":pos_y_1_1"),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(overlay_set_size, "$g_presentation_obj_1", pos10),					
				(troop_set_slot, "trp_array_c", ":slot_no", "$g_presentation_obj_1"),				
				(create_mesh_overlay, "$g_presentation_obj_1", "mesh_inv_slot"),					
				(position_set_x, pos1, 890),
				(position_set_y, pos1, 890),
				(overlay_set_size, "$g_presentation_obj_1", pos1),			
				(position_set_x, pos1, 450),
				(position_set_y, pos1,  ":pos_y_1_0"),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(try_begin),
					(eq,":slot_item",0),
					(overlay_set_alpha, "$g_presentation_obj_1", 100),
				(try_end),			
				(store_add,":slot_offset",":slot_no",50),				
				(troop_set_slot, "trp_array_c", ":slot_offset", "$g_presentation_obj_1"),				
				(val_sub,  ":pos_y_1_0", 89),
				(val_sub,  ":pos_y_1_1", 89),
			(else_try),
				(eq,":slot_no",7),
				(troop_get_slot, ":slot_item", "trp_array_d",":slot_no"),				
				(create_mesh_overlay_with_item_id, "$g_presentation_obj_1", ":slot_item"),
				(position_set_x, pos1, 405),
				(position_set_y, pos1,  565),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(overlay_set_size, "$g_presentation_obj_1", pos10),					
				(troop_set_slot, "trp_array_c", ":slot_no", "$g_presentation_obj_1"),				
				(create_mesh_overlay, "$g_presentation_obj_1", "mesh_inv_slot"),				
				(position_set_x, pos1, 890),
				(position_set_y, pos1, 830),
				(overlay_set_size, "$g_presentation_obj_1", pos1),			
				(position_set_x, pos1, 360),
				(position_set_y, pos1,  520),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(try_begin),
					(eq,":slot_item",0),
					(overlay_set_alpha, "$g_presentation_obj_1", 100),
				(try_end),		
				(store_add,":slot_offset",":slot_no",50),					
				(troop_set_slot, "trp_array_c", ":slot_offset", "$g_presentation_obj_1"),				
			(else_try),
				(eq,":slot_no",8),
				(troop_get_slot, ":slot_item", "trp_array_d",":slot_no"),				
				(create_mesh_overlay_with_item_id, "$g_presentation_obj_1", ":slot_item"),
				(position_set_x, pos1, 405),
				(position_set_y, pos1,  365),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(overlay_set_size, "$g_presentation_obj_1", pos10),					
				(troop_set_slot, "trp_array_c", ":slot_no", "$g_presentation_obj_1"),				
				(create_mesh_overlay, "$g_presentation_obj_1", "mesh_inv_slot"),				
				(position_set_x, pos1, 890),
				(position_set_y, pos1, 830),
				(overlay_set_size, "$g_presentation_obj_1", pos1),			
				(position_set_x, pos1, 360),
				(position_set_y, pos1,  320),
				(overlay_set_position, "$g_presentation_obj_1", pos1),
				(try_begin),
					(eq,":slot_item",0),
					(overlay_set_alpha, "$g_presentation_obj_1", 100),
				(try_end),
				(store_add,":slot_offset",":slot_no",50),				
				(troop_set_slot, "trp_array_c", ":slot_offset", "$g_presentation_obj_1"),			
			(try_end),
            (val_add, ":slot_no", 1),
			(assign,reg30,":slot_no"),
			#(display_message,"@{reg30}"),
          (try_end),			
        (try_end),		
		
        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_1", s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 270),
        (position_set_y, pos1, 600),
        (overlay_set_area_size, "$g_presentation_obj_1", pos1),
        (set_container_overlay, "$g_presentation_obj_1"),
	 
        (assign, ":pos_x", 0),
        (assign, ":pos_y", 2575),
        (assign, ":slot_no", 0),
        (try_for_range, ":unused_height", 0, 32),
          (try_for_range, ":unused_width", 0, 3),
            (create_mesh_overlay, "$g_presentation_obj_1", "mesh_inv_slot"),
            (position_set_x, pos1, 890),
            (position_set_y, pos1, 830),
            (overlay_set_size, "$g_presentation_obj_1", pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, "$g_presentation_obj_1", pos1),
            (create_mesh_overlay, "$g_presentation_obj_1", "mesh_mp_inventory_choose"),
			(overlay_set_alpha, "$g_presentation_obj_1", 0),
            (position_set_x, pos1, 712),
            (position_set_y, pos1, 650),
            (overlay_set_size, "$g_presentation_obj_1", pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, "$g_presentation_obj_1", pos1),			
            (troop_set_slot, "trp_array_a", ":slot_no", "$g_presentation_obj_1"),
		(store_add,":num_temp",":slot_no","$cheat_find_item_range_begin"),
		(store_add,":item_no",":num_temp","itm_no_item"),
			(try_begin),
				(lt, ":item_no", "itm_items_end"),
			    (call_script, "script_cf_item_can_be_used_by_custom_troop", ":item_no"),
				(create_mesh_overlay_with_item_id, "$g_presentation_obj_1", ":item_no"),
				(position_set_x, pos1, 890),
				(position_set_y, pos1, 830),				
				(overlay_set_size, "$g_presentation_obj_1", pos1),
				(store_add, ":item_x", ":pos_x", 44),
				(store_add, ":item_y", ":pos_y", 41),
				(position_set_x, pos1, ":item_x"),
				(position_set_y, pos1, ":item_y"),
				(overlay_set_position, "$g_presentation_obj_1", pos1),	
				(troop_set_slot, "trp_array_b", ":num_temp", "$g_presentation_obj_1"),	
            (try_end),				
            (val_add, ":slot_no", 1),
			(val_add, ":pos_x", 89),
          (try_end),			
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 83),
        (try_end),
		
        (set_container_overlay, -1),

        (position_set_x, pos2, 50),
        (position_set_y, pos2, 50),		
        (create_game_button_overlay, "$g_presentation_obj_11", "@Save", 0),	
        (position_set_x, pos1, 590),
        (position_set_y, pos1, 190),
        (overlay_set_position, "$g_presentation_obj_11", pos1),
        (overlay_set_area_size, "$g_presentation_obj_11", pos2),		
        (create_game_button_overlay, "$g_presentation_obj_12", "@Reset", 0),	
        (position_set_x, pos1, 590),
        (position_set_y, pos1, 130),
        (overlay_set_position, "$g_presentation_obj_12", pos1),
        (overlay_set_area_size, "$g_presentation_obj_12", pos2),
        (create_game_button_overlay, "$g_presentation_obj_13", "@Back", 0),	
        (position_set_x, pos1, 590),
        (position_set_y, pos1, 70),
        (overlay_set_position, "$g_presentation_obj_13", pos1),
        (overlay_set_area_size, "$g_presentation_obj_13", pos2),		
				
	  #(call_script, "script_presentation_load"),		
      (presentation_set_duration, 999999),
     ]),
	
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),	
        (store_trigger_param_2, ":value"),
		
		(try_begin),
	(is_between, "$temp_troop", "trp_kingdom_recruit", "trp_array_a"),
			(eq,":object","$g_custom_troops_pbs_type_selection"),
			(val_add, ":value", 1),
			(troop_set_slot, "$temp_troop", slot_troop_pbs_type, ":value"),
        (else_try),
			(eq,":object","$g_presentation_obj_3_back"),
			(val_sub, "$cheat_find_item_range_begin", 96),
			(try_begin),
				(le, "$cheat_find_item_range_begin", 649),
				(assign, "$cheat_find_item_range_begin", "itm_items_end"),
				(val_sub, "$cheat_find_item_range_begin", 96),
			(try_end),
			(start_presentation, "prsnt_custom_troop_item"),
        (else_try),
			(eq,":object","$g_presentation_obj_3"),
			(val_add, "$cheat_find_item_range_begin", 96),
			(try_begin),
				(ge, "$cheat_find_item_range_begin", "itm_items_end"),
				(assign, "$cheat_find_item_range_begin", 649),
			(try_end),
			(start_presentation, "prsnt_custom_troop_item"),
        (else_try),
			(eq,":object","$g_presentation_obj_11"),
			(call_script,"script_custom_troop_inventory_change","$temp_troop"),
			(call_script,"script_custom_troop_inventory_initialization","$temp_troop"),			
			(start_presentation, "prsnt_custom_troop_item"),
        (else_try),
			(eq,":object","$g_presentation_obj_12"),
			(assign,"$current_item",-1),			
			(call_script,"script_custom_troop_inventory_reset","$temp_troop"),			
			(start_presentation, "prsnt_custom_troop_item"),
        (else_try),
			(eq,":object","$g_presentation_obj_13"),
			(call_script,"script_custom_troop_inventory_reset","$temp_troop"),			
			(call_script,"script_get_custom_troop_info","$temp_troop"),
			(call_script,"script_store_custom_troop_info_to_slot","trp_array_b"),		
			(start_presentation, "prsnt_custom_troop"),			
        (try_end),		

	  ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 0, 96),
          (troop_slot_eq, "trp_array_a", ":slot_no", ":object"),
		  (store_add,":num_temp",":slot_no","$cheat_find_item_range_begin"),
		  (store_add,":item_no",":num_temp","itm_no_item"),
		(call_script, "script_cf_item_can_be_used_by_custom_troop", ":item_no"),	
			(try_begin),
			(lt, ":item_no", "itm_items_end"),
			(troop_get_slot, ":target_obj", "trp_array_b", ":num_temp"),
			(overlay_get_position, pos0, ":target_obj"),
			(show_item_details, ":item_no", pos0, 100),
			(assign, "$g_current_opened_item_details", ":num_temp"),
			(try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 0, 96),
          (troop_slot_eq, "trp_array_a", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":num_temp"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_mouse_press,
     [
	  (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":mouse_state"),

      (try_begin),
        (eq, ":mouse_state", 0),	 
        (try_for_range, ":slot_no", 0, 96),
          (troop_slot_eq, "trp_array_a", ":slot_no", ":object"),		
		  (store_add,":num_temp",":slot_no","$cheat_find_item_range_begin"),
		  (store_add,":item_no",":num_temp","itm_no_item"),		
          (try_begin),
			(eq, "$current_item", -1),
			(lt, ":item_no", "itm_items_end"),
            (troop_get_slot, ":target_obj", "trp_array_b", ":num_temp"),
			(assign,"$current_item",":num_temp"),
			(overlay_set_display, ":target_obj", 0),		
			(call_script, "script_cf_item_can_be_used_by_custom_troop", "$current_item"),	
			(create_mesh_overlay_with_item_id, "$g_presentation_credits_obj_1", "$current_item"),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),				
			(overlay_set_size, "$g_presentation_credits_obj_1", pos1),				
		  (else_try),
			(eq, "$current_item", ":num_temp"),
            (troop_get_slot, ":target_obj", "trp_array_b", ":num_temp"),			
			(overlay_set_display,":target_obj", 1),	
			(assign,"$g_presentation_credits_obj_1",-1),
			(assign,"$current_item",-1),
			(start_presentation, "prsnt_custom_troop_item"),			
          (try_end),
        (try_end),		 
        (try_for_range, ":slot_no", 0, 9),
		  (store_add,":slot_offset",":slot_no",50),
          (troop_slot_eq, "trp_array_c", ":slot_offset", ":object"),
		  (troop_get_slot, ":slot_item","trp_array_d", ":slot_no"),
		  (troop_get_slot, ":target_obj","trp_array_c", ":slot_no"),			 
          (try_begin),		 
			(gt,"$current_item",-1),
			(call_script,"script_custom_troop_item_judge","$current_item",":slot_no"),			
			(try_begin),
				(eq,reg0,1),
				(overlay_get_position, pos0, ":target_obj"),		  		 
				(overlay_set_position, "$g_presentation_credits_obj_1", pos0),
				(troop_set_slot, "trp_array_d", ":slot_no", "$current_item"),	
				(assign,"$current_item",-1),
				(call_script,"script_custom_troop_inventory_change","$temp_troop"),			
				(start_presentation, "prsnt_custom_troop_item"),
		  (else_try),
				(display_message,"@You can't equip this item - wrong slot."),
          (try_end),				
		  (else_try),
			(eq, "$current_item", -1),
			(overlay_set_display,":target_obj", 0),
			(assign,"$g_presentation_credits_obj_1",-1),
			(neq, ":slot_item", 0),
			(create_mesh_overlay_with_item_id, "$g_presentation_credits_obj_1", ":slot_item"),		
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),				
			(overlay_set_size, "$g_presentation_credits_obj_1", pos1),
			(assign,"$current_item",":slot_item"),
			(troop_set_slot, "trp_array_d", ":slot_no", 0),	
			(overlay_set_alpha, ":object", 100),
          (try_end),		 
        (try_end),
	  (else_try),
        (eq, ":mouse_state", 1),
		(gt,"$current_item",-1),
		(assign,"$current_item",-1),
		(call_script,"script_custom_troop_inventory_change","$temp_troop"),
		(start_presentation, "prsnt_custom_troop_item"),		
      (try_end),
	 
	  ]),	 
			
    (ti_on_presentation_run,
     [
      (set_fixed_point_multiplier, 1000),
 
     #(try_begin),
     #   (this_or_next|key_clicked, key_escape),
     #   (key_clicked, key_right_mouse_button),
	 # 	(call_script,"script_custom_troop_inventory_reset","$temp_troop"),			
        #(presentation_set_duration, 0),
	   # (call_script,"script_get_custom_troop_info"),
	   # (call_script,"script_store_custom_troop_info_to_slot","trp_array_b"),		
       # (start_presentation, "prsnt_custom_troop"),
      #(try_end),

     (gt,"$current_item",-1),
     (mouse_get_position, pos1),
	 (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
	 
	  #(call_script, "script_presentation_run"),	
	 
	  ]),
  ]), 
 
## ZZ Custom Kingdom Troops end

("faction_technologies",0,mesh_load_window2,[
(ti_on_presentation_load,
	[
	(assign, "$g_faction_technologies_selected_tech", -1),
	(assign, "$g_faction_technologies_currentinprogress_tech_overlay", -1),
	(set_fixed_point_multiplier, 1000),
	(str_store_faction_name, s1, "fac_player_faction"),
	(create_text_overlay, reg1, "@Military Technologies of the {s1}", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 690), (overlay_set_position, reg1, pos1),
	(create_game_button_overlay, "$g_faction_technologies_close", "@Close"),
	(position_set_x, pos1, 835), (position_set_y, pos1, 30), (overlay_set_position, "$g_faction_technologies_close", pos1),
	(create_game_button_overlay, "$g_faction_technologies_research", "@Research"),
	(position_set_x, pos1, -835), (position_set_y, pos1, 87), (overlay_set_position, "$g_faction_technologies_research", pos1),
	(create_text_overlay, "$g_faction_technologies_selected_tech_name", "@ ", tf_center_justify),
	(create_text_overlay, "$g_faction_technologies_selected_tech_description", "@ ", tf_center_justify),
	(str_store_string, s1, "@Select technology"), (call_script,"script_pts_create_selected_tech_name"),
	(create_mesh_overlay, "$g_faction_technologies_photo_shadow", "mesh_faction_technologies_photo_shadow"),
	(position_set_x, pos1, 835), (position_set_y, pos1, 270), (overlay_set_position, "$g_faction_technologies_photo_shadow", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$g_faction_technologies_photo_shadow", pos1),
	(create_mesh_overlay, "$g_faction_technologies_photo", "mesh_faction_technologies_photo"),
	(position_set_x, pos1, 835), (position_set_y, pos1, 270), (overlay_set_position, "$g_faction_technologies_photo", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$g_faction_technologies_photo", pos1),
	(create_text_overlay, "$g_faction_technologies_selected_tech_cost_date_text", "@ ", tf_left_align),
	(position_set_x, pos1, 690), (position_set_y, pos1, 400), (overlay_set_position, "$g_faction_technologies_selected_tech_cost_date_text", pos1),
	(position_set_x, pos1, 750), (position_set_y, pos1, 750), (overlay_set_size, "$g_faction_technologies_selected_tech_cost_date_text", pos1),
	
	# Container
	(str_clear, s0),
	(create_text_overlay, "$g_faction_technologies_tech_container", s0, tf_scrollable),
	(position_set_x, pos1, 60), (position_set_y, pos1, 35), (overlay_set_position, "$g_faction_technologies_tech_container", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_area_size, "$g_faction_technologies_tech_container", pos1),
	(set_container_overlay, "$g_faction_technologies_tech_container"),
	(position_set_x, pos2, 700), (position_set_y, pos2, 700), (position_set_x, pos3, 1000), (position_set_y, pos3, 1000),
	
	# Connection lines
	(create_mesh_overlay, reg1, "mesh_faction_technologies_connection_line"),
	(position_set_x, pos1, 110), (position_set_y, pos1, 1500), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 100), (position_set_y, pos1, 75000), (overlay_set_size, reg1, pos1),
	(create_mesh_overlay, reg1, "mesh_faction_technologies_connection_line"),
	(position_set_x, pos1, 403), (position_set_y, pos1, 1500), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 100), (position_set_y, pos1, 59000), (overlay_set_size, reg1, pos1),
	
	# Techs
	(position_set_x, pos1, 110), (position_set_y, pos1, 1500), (str_store_string, s1, "@Rifled Caplock^^Muskets"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_riflesrifled, 0), (assign, "$g_faction_technologies_tech_riflesrifled", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 1350), (str_store_string, s1, "@Conversion Breech-loaded^^Rifles"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_riflesconverted, 8), (assign, "$g_faction_technologies_tech_riflesconverted", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 1200), (str_store_string, s1, "@Modern^^Breech-loaded Rifles"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_riflessmallcaliber, 10), (assign, "$g_faction_technologies_tech_riflessmallcaliber", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 1050), (str_store_string, s1, "@Breech-loaded^^Cannons"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_cannonsbreechloading, 9), (assign, "$g_faction_technologies_tech_cannonsbreechloading", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 900), (str_store_string, s1, "@Improved Percussion^^Mechanisms"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_lateshells, 9), (assign, "$g_faction_technologies_tech_lateshells", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 750), (str_store_string, s1, "@Early Magazine^^Rifles"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_riflesboltaction, 0), (assign, "$g_faction_technologies_tech_riflesboltaction", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 600), (str_store_string, s1, "@Machine Guns"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_machineguns, 0), (assign, "$g_faction_technologies_tech_machineguns", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 450), (str_store_string, s1, "@Modern Magazine Rifles"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_riflesboltactionmodern, 0), (assign, "$g_faction_technologies_tech_riflesboltactionmodern", reg1),
	(position_set_x, pos1, 110), (position_set_y, pos1, 300), (str_store_string, s1, "@Light Machine^^Guns"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_lmgs, 9), (assign, "$g_faction_technologies_tech_lmgs", reg1),
	# (position_set_x, pos1, 110), (position_set_y, pos1, 150), (str_store_string, s1, "@Landships"),
	# (call_script,"script_pts_create_tech_button", slot_faction_technology_tanks, 0), (assign, "$g_faction_technologies_tech_tanks", reg1),

	(position_set_x, pos1, 403), (position_set_y, pos1, 1500), (str_store_string, s1, "@Crimean War^^Experience"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_crimeanwar, 10), (assign, "$g_faction_technologies_tech_crimeanwar", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 1350), (str_store_string, s1, "@Skirmish Line^^Tactics"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_skirmishline, 6), (assign, "$g_faction_technologies_tech_skirmishline", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 1200), (str_store_string, s1, "@Modern Defence^^Tactics"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_moderndefence, 6), (assign, "$g_faction_technologies_tech_moderndefence", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 1050), (str_store_string, s1, "@Modern Attack Tactics"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_modernattack, 7), (assign, "$g_faction_technologies_tech_modernattack", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 900), (str_store_string, s1, "@Rapid Firing^^Artillery"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_modernartillery, 0), (assign, "$g_faction_technologies_tech_modernartillery", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 750), (str_store_string, s1, "@Infantry Machine^^Gun Tactics"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_infantrymgtactics, 0), (assign, "$g_faction_technologies_tech_infantrymgtactics", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 600), (str_store_string, s1, "@Under Fire^^Assault Tactics"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_coveringfire, 8), (assign, "$g_faction_technologies_tech_coveringfire", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 450), (str_store_string, s1, "@Gas Attacks"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_gasattacks, 0), (assign, "$g_faction_technologies_tech_gasattacks", reg1),
	(position_set_x, pos1, 403), (position_set_y, pos1, 300), (str_store_string, s1, "@Shock Troops"),
	(call_script,"script_pts_create_tech_button", slot_faction_technology_shocktroops, 0), (assign, "$g_faction_technologies_tech_shocktroops", reg1),
	
	

	(set_container_overlay, -1),
	
	(presentation_set_duration, 999999),
]),
(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
 
	(try_begin),
	(eq, ":object", "$g_faction_technologies_close"),
	(presentation_set_duration, 0),
	(assign, reg21, 11111), # for exiting from pop-up menu
	(else_try),
	(eq, ":object", "$g_faction_technologies_research"),
	(faction_get_slot, ":progress", "fac_player_faction", "$g_faction_technologies_selected_tech"),
	(faction_get_slot, ":gold", "fac_player_supporters_faction", slot_faction_budget),
		(try_begin),
		(eq, ":progress", -1),
		(lt, ":gold", "$g_faction_technologies_selected_tech_cost"),
		(display_message, "@Country does not have enough budget to start research."),
		(try_end),
	(this_or_next|ge, ":gold", "$g_faction_technologies_selected_tech_cost"),
	(neq, ":progress", -1),
		(try_begin),
		(neq, "$g_faction_technologies_currentinprogress_tech_overlay", -1),
		(overlay_set_material, "$g_faction_technologies_currentinprogress_tech_overlay", "@faction_technologies_tech_available"),
		(try_end),
	(overlay_set_material, "$g_faction_technologies_selected_tech_overlay", "@faction_technologies_tech_inprogress"),
	(assign, "$g_faction_technologies_currentinprogress_tech_overlay", "$g_faction_technologies_selected_tech_overlay"),
	(faction_set_slot, "fac_player_faction", slot_faction_current_research_technology, "$g_faction_technologies_selected_tech"),
	(eq, ":progress", -1),
	(val_sub, ":gold", "$g_faction_technologies_selected_tech_cost"),
	(faction_set_slot, "fac_player_supporters_faction", slot_faction_budget, ":gold"),
	(faction_set_slot, "fac_player_faction", "$g_faction_technologies_selected_tech", 0),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_riflesrifled"),
	(str_store_string, s1, "@Rifled Caplock^Muskets"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_riflesrifled"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_riflesrifled),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1856),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_modernartillery"),
	(str_store_string, s1, "@Rapid Firing^Artillery"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_modernartillery"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_modernartillery),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1900),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_modernattack"),
	(str_store_string, s1, "@Modern Attack Tactics"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_modernattack"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_modernattack),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1890),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_crimeanwar"),
	(str_store_string, s1, "@Crimean War^Experience"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_crimeanwar"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_crimeanwar),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1856),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_riflesboltactionmodern"),
	(str_store_string, s1, "@Modern Magazine^Rifles"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_riflesboltactionmodern"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_riflesboltactionmodern),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1890),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_riflesconverted"),
	(str_store_string, s1, "@Conversion Breech-loaded^Rifles"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_riflesconverted"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_riflesconverted),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1865),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_infantrymgtactics"),
	(str_store_string, s1, "@Infantry Machine^Gun Tactics"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_infantrymgtactics"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_infantrymgtactics),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1900),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_coveringfire"),
	(str_store_string, s1, "@Under Fire^Assault Tactics"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_coveringfire"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_coveringfire),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1900),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_gasattacks"),
	(str_store_string, s1, "@Gas Attacks"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_gasattacks"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_gasattacks),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1910),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_riflessmallcaliber"),
	(str_store_string, s1, "@Modern^^Breech-loaded Rifles"), (call_script,"script_pts_create_selected_tech_name"),
	(str_store_string, s1, "@Converted breech-loaded rifles have several issues. They have big caliber, because of which\
	during fast shooting the barrel heats up so much that it becomes hard to handle rifle during reload or melee fighting.\
	Inserted breech-loading mechanisms are not perfect and often cause cartridge case to jam inside after shot, and being hard\
	to get out. Next step in firearms rearmament should be adopting new breech-loaded rifle: it will have much smaller caliber\
	than before, which will improve bullet ballistics, and will have improved breech-loading mechanism, that will further increase\
	rate of fire by making reloading process easier.^^Effects: army changes it's firearms to small-caliber breech-loading rifles."), (call_script,"script_pts_create_selected_tech_description"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_riflessmallcaliber"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_riflessmallcaliber),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1870),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_tanks"),
	(str_store_string, s1, "@Landships"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_tanks"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_tanks),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1910),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_skirmishline"),
	(str_store_string, s1, "@Skirmish Line^Tactics"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_skirmishline"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_skirmishline),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1870),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_lmgs"),
	(str_store_string, s1, "@Light Machine^Guns"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_lmgs"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_lmgs),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1910),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_riflesboltaction"),
	(str_store_string, s1, "@Early Magazine^Rifles"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_riflesboltaction"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_riflesboltaction),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1880),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_cannonsbreechloading"),
	(str_store_string, s1, "@Breech-loaded^Cannons"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_cannonsbreechloading"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_cannonsbreechloading),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1870),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_machineguns"),
	(str_store_string, s1, "@Machine Guns"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_machineguns"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_machineguns),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1880),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_lateshells"),
	(str_store_string, s1, "@Improved Percussion^Mechanisms"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_lateshells"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_lateshells),
	(assign, "$g_faction_technologies_selected_tech_cost", 1500000), (assign, "$g_faction_technologies_selected_tech_date", 1880),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_shocktroops"),
	(str_store_string, s1, "@Shock Troops"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_shocktroops"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_shocktroops),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1910),
	(else_try),
	(eq, ":object", "$g_faction_technologies_tech_moderndefence"),
	(str_store_string, s1, "@Modern Defence^Tactics"), (call_script,"script_pts_create_selected_tech_name"),
	(overlay_set_material, "$g_faction_technologies_photo", "@faction_technologies_photo_moderndefence"),
	(assign, "$g_faction_technologies_selected_tech", slot_faction_technology_moderndefence),
	(assign, "$g_faction_technologies_selected_tech_cost", 1000000), (assign, "$g_faction_technologies_selected_tech_date", 1890),
	(try_end),

	(try_begin),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_crimeanwar"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_riflesboltactionmodern"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_modernattack"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_riflesrifled"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_modernartillery"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_coveringfire"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_gasattacks"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_infantrymgtactics"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_tanks"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_riflessmallcaliber"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_skirmishline"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_lmgs"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_lateshells"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_cannonsbreechloading"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_riflesboltaction"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_machineguns"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_shocktroops"),
	(this_or_next|eq, ":object", "$g_faction_technologies_tech_moderndefence"),
	(eq, ":object", "$g_faction_technologies_tech_riflesconverted"),
	(assign, "$g_faction_technologies_selected_tech_overlay", ":object"),
	(assign, ":string_description", "str_faction_technology_modernattack_description"),
	(store_sub, ":slot_number", "$g_faction_technologies_selected_tech", slot_faction_technology_modernattack),
	(val_add, ":string_description", ":slot_number"), (val_add, ":string_description", ":slot_number"),
	(str_store_string, s1, ":string_description"), (call_script,"script_pts_create_selected_tech_description"),
	(assign, reg0, "$g_faction_technologies_selected_tech_cost"), (assign, reg1, "$g_faction_technologies_selected_tech_date"),
		(try_begin),
		(str_clear, s1), (str_clear, s2),
		(faction_get_slot, ":progress", "fac_player_faction", "$g_faction_technologies_selected_tech"),
		(ge, ":progress", 0),
		(str_store_string, s1, "@ (already funded)"),
			(try_begin),
			(eq, ":progress", 10000),
			(str_store_string, s1, "@ (already researched)"),
			(try_end),
		(gt, ":progress", 0),
		(neq, ":progress", 10000),
		(assign, reg2, ":progress"), (val_div, reg2, 100),
		(str_store_string, s2, "@ Current progress - {reg2}%."),
		(try_end),
	(overlay_set_text, "$g_faction_technologies_selected_tech_cost_date_text", "@Cost - {reg0} ${s1}.^Available after {reg1} year.{s2}"),
		(try_begin),
		(call_script,"script_cf_pts_check_tech_availability", "$g_faction_technologies_selected_tech", "fac_player_faction"),
		(faction_get_slot, ":progress", "fac_player_faction", "$g_faction_technologies_selected_tech"),
		(neq, ":progress", 10000),
		(position_set_x, pos1, 835), (position_set_y, pos1, 87), (overlay_set_position, "$g_faction_technologies_research", pos1),
		(else_try),
		(position_set_x, pos1, -835), (position_set_y, pos1, 100), (overlay_set_position, "$g_faction_technologies_research", pos1),
		(try_end),
	(try_end),
]),
]),

      
("faction_selection", 0, mesh_load_window2, [
(ti_on_presentation_load, [
	(set_fixed_point_multiplier, 1000),      
	(assign, "$g_faction_selection_selected_faction_number", -1),

	(create_text_overlay, reg1, "@Select Faction", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 680), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 1500), (position_set_y, pos1, 1500), (overlay_set_size, reg1, pos1),
	(create_game_button_overlay, "$g_faction_selection_start_game", "@Start Game"),
	(position_set_x, pos1, -835), (position_set_y, pos1, 100), (overlay_set_position, "$g_faction_selection_start_game", pos1),
	(create_game_button_overlay, "$g_faction_selection_close", "@Back"),
	(position_set_x, pos1, 835), (position_set_y, pos1, 30), (overlay_set_position, "$g_faction_selection_close", pos1),
	
	(create_text_overlay, "$g_faction_selection_selected_faction_name", "@ ", tf_center_justify), (create_text_overlay, "$g_faction_selection_selected_faction_flag", "@ ", tf_center_justify),
	
	(str_clear, s0),
	(create_text_overlay, "$g_faction_selection_container", s0, tf_scrollable),
	(position_set_x, pos1, 60), (position_set_y, pos1, 35), (overlay_set_position, "$g_faction_selection_container", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_area_size, "$g_faction_selection_container", pos1),
	(set_container_overlay, "$g_faction_selection_container"),
	(position_set_x, pos2, 700), (position_set_y, pos2, 700), (position_set_x, pos3, 1000), (position_set_y, pos3, 1000),
	
	(position_set_x, pos2, 800), (position_set_y, pos2, 800), 
	(position_set_x, pos3, 850), (position_set_y, pos3, 850), 
	(assign, ":faction_number", 0),
		(try_for_range, ":index_y", 0, 9),
		(store_mul, ":coor_y", ":index_y", 150), (store_sub, ":coor_y", 1300, ":coor_y"),
		(store_add, ":text_coor_y", ":coor_y", 44),
		(assign, ":index_x", -1),
			(try_for_range, ":unused", 0, 50),
			(lt, ":index_x", 3),
			(val_add, ":faction_number", 1),
			(store_add, ":faction", "fac_player_supporters_faction", ":faction_number"),
			(assign, ":continue", 1),
				(try_begin),
				(gt, "$g_current_year", 1870),
				(this_or_next|eq, ":faction", "fac_kingdom_11"),
				(this_or_next|eq, ":faction", "fac_kingdom_19"),
				(this_or_next|eq, ":faction", "fac_kingdom_22"),
				(this_or_next|eq, ":faction", "fac_kingdom_23"),
				(this_or_next|eq, ":faction", "fac_kingdom_30"),
				(eq, ":faction", "fac_kingdom_31"),
				(assign, ":continue", 0),
				(try_end),
				(try_begin),
				(ge, "$g_current_year", 1907),
				(this_or_next|eq, ":faction", "fac_kingdom_14"),
				(eq, ":faction", "fac_kingdom_10"),
				(assign, ":continue", 0),
				(try_end),
				(try_begin),
				(ge, "$g_current_year", 1907),
				(eq, ":faction", "fac_kingdom_30"),
				(assign, ":continue", 1),
				(try_end),
				(try_begin),
				(ge, "$g_current_year", 1914),
				(this_or_next|eq, ":faction", "fac_kingdom_15"),
				(eq, ":faction", "fac_kingdom_31"),
				(assign, ":continue", 1),
				(try_end),
			(eq, ":continue", 1),
			(val_add, ":index_x", 1),
			(store_mul, ":coor_x", ":index_x", 150), (val_add, ":coor_x", 60),
			(le, ":faction", "fac_kingdom_33"),
			(str_store_faction_name, s1, ":faction"),
			(create_text_overlay, reg1, s1, tf_center_justify),
			(position_set_x, pos1, ":coor_x"), (position_set_y, pos1, ":text_coor_y"), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos3),
			(create_image_button_overlay, reg1, "mesh_menu_flag1", "mesh_menu_flag1"),
			(position_set_x, pos1, ":coor_x"), (position_set_y, pos1, ":coor_y"), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2),
			(faction_get_slot, ":material_string", ":faction", slot_faction_flag_material),
			(str_store_string, s1, ":material_string"),
			(overlay_set_material, reg1, s1),
			(troop_set_slot, "trp_temp_array_a", reg1, ":faction_number"),
			(try_end),
		(try_end),
	(set_container_overlay, -1),
	
	(presentation_set_duration, 999999),
	]),
(ti_on_presentation_event_state_change, [
	(store_trigger_param_1, ":object"),
 
	(try_begin),
	(eq, ":object", "$g_faction_selection_close"),
	(presentation_set_duration, 0),
	(else_try),
	(eq, ":object", "$g_faction_selection_start_game"),
	(is_between, "$g_faction_selection_selected_faction_number", 1, 33+1),
	(presentation_set_duration, 0),
		(try_begin),
		(eq, "$g_faction_selection_selected_faction_number", 1),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_1", "p_town_3", "fac_culture_1", "trp_knight_1_1", "trp_knight_2_1", "trp_kingdom_1_lord", "scn_town_3_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 2),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_2", "p_town_37", "fac_culture_2", "trp_knight_2_1", "trp_knight_3_1", "trp_kingdom_2_lord", "scn_town_37_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 3),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_3", "p_town_7", "fac_culture_3", "trp_knight_3_1", "trp_knight_4_1", "trp_kingdom_3_lord", "scn_town_7_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 4),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_4", "p_town_11", "fac_culture_4", "trp_knight_4_1", "trp_knight_5_1", "trp_kingdom_4_lord", "scn_town_11_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 5),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_5", "p_town_2", "fac_culture_5", "trp_knight_5_1", "trp_knight_6_1", "trp_kingdom_5_lord", "scn_town_2_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 6),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_6", "p_town_19", "fac_culture_6", "trp_knight_6_1", "trp_knight_7_1", "trp_kingdom_6_lord", "scn_town_19_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 7),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_7", "p_town_18", "fac_culture_7", "trp_knight_7_1", "trp_knight_8_1", "trp_kingdom_7_lord", "scn_town_18_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 8),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_8", "p_town_1", "fac_culture_8", "trp_knight_8_1", "trp_knight_9_1", "trp_kingdom_8_lord", "scn_town_1_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 9),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_9", "p_town_5", "fac_culture_9", "trp_knight_9_1", "trp_knight_10_1", "trp_kingdom_9_lord", "scn_town_5_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 10),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_10", "p_town_15", "fac_culture_10", "trp_knight_10_1", "trp_knight_11_1", "trp_kingdom_10_lord", "scn_town_15_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 11),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_11", "p_town_23", "fac_culture_11", "trp_knight_11_1", "trp_knight_12_1", "trp_kingdom_11_lord", "scn_town_23_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 12),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_12", "p_town_22", "fac_culture_12", "trp_knight_12_1", "trp_knight_13_1", "trp_kingdom_12_lord", "scn_town_22_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 13),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_13", "p_town_9", "fac_culture_13", "trp_knight_13_1", "trp_knight_14_1", "trp_kingdom_13_lord", "scn_town_9_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 14),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_14", "p_town_13", "fac_culture_14", "trp_knight_14_1", "trp_knight_15_1", "trp_kingdom_14_lord", "scn_town_13_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 15),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_15", "p_castle_65", "fac_culture_15", "trp_knight_15_1", "trp_knight_16_1", "trp_kingdom_15_lord", "scn_castle_65_interior"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 16),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_16", "p_town_27", "fac_culture_16", "trp_knight_16_1", "trp_knight_17_1", "trp_kingdom_16_lord", "scn_town_27_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 17),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_17", "p_town_24", "fac_culture_17", "trp_knight_17_1", "trp_knight_18_1", "trp_kingdom_17_lord", "scn_town_24_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 18),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_18", "p_town_39", "fac_culture_18", "trp_knight_18_1", "trp_knight_19_1", "trp_kingdom_18_lord", "scn_town_39_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 19),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_19", "p_town_40", "fac_culture_19", "trp_knight_19_1", "trp_knight_20_1", "trp_kingdom_19_lord", "scn_town_40_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 20),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_20", "p_town_59", "fac_culture_20", "trp_knight_20_1", "trp_knight_21_1", "trp_kingdom_20_lord", "scn_town_59_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 21),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_21", "p_town_26", "fac_culture_21", "trp_knight_21_1", "trp_knight_22_1", "trp_kingdom_21_lord", "scn_town_26_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 22),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_22", "p_town_25", "fac_culture_22", "trp_knight_22_1", "trp_knight_23_1", "trp_kingdom_22_lord", "scn_town_25_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 23),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_23", "p_town_20", "fac_culture_23", "trp_knight_23_1", "trp_knight_24_1", "trp_kingdom_23_lord", "scn_town_20_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 24),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_24", "p_town_43", "fac_culture_24", "trp_knight_24_1", "trp_knight_25_1", "trp_kingdom_24_lord", "scn_town_43_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 25),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_25", "p_town_28", "fac_culture_25", "trp_knight_25_1", "trp_knight_26_1", "trp_kingdom_25_lord", "scn_town_28_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 26),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_26", "p_town_50", "fac_culture_26", "trp_knight_26_1", "trp_knight_27_1", "trp_kingdom_26_lord", "scn_town_50_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 27),
			(try_begin),
			(lt, "$g_current_year", 1878),
			(call_script,"script_set_player_kingdom_init", "fac_kingdom_27", "p_town_46", "fac_culture_27", "trp_knight_27_1", "trp_knight_28_1", "trp_kingdom_27_lord", "scn_town_46_castle"),
			(else_try),
			(call_script,"script_set_player_kingdom_init", "fac_kingdom_27", "p_town_44", "fac_culture_27", "trp_knight_27_1", "trp_knight_28_1", "trp_kingdom_27_lord", "scn_town_44_castle"),
			(try_end),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 28),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_28", "p_castle_102", "fac_culture_28", "trp_knight_28_1", "trp_knight_29_1", "trp_kingdom_28_lord", "scn_castle_102_interior"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 29),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_29", "p_town_48", "fac_culture_29", "trp_knight_29_1", "trp_knight_30_1", "trp_kingdom_29_lord", "scn_town_48_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 30),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_30", "p_town_45", "fac_culture_30", "trp_knight_30_1", "trp_knight_31_1", "trp_kingdom_30_lord", "scn_town_45_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 31),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_31", "p_town_47", "fac_culture_31", "trp_knight_31_1", "trp_knight_32_1", "trp_kingdom_31_lord", "scn_town_47_castle"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 32),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_32", "p_castle_114", "fac_culture_32", "trp_knight_32_1", "trp_knight_33_1", "trp_kingdom_32_lord", "scn_castle_114_interior"),
		(else_try),
		(eq, "$g_faction_selection_selected_faction_number", 33),
		(call_script,"script_set_player_kingdom_init", "fac_kingdom_33", "p_castle_120", "fac_culture_33", "trp_knight_33_1", "trp_kingdom_1_pretender", "trp_kingdom_33_lord", "scn_castle_120_interior"),
		(try_end),
	(jump_to_menu, "mnu_start_game_start_as_leader"),
	(else_try),
	(troop_get_slot, "$g_faction_selection_selected_faction_number", "trp_temp_array_a", ":object"),
	(store_add, ":faction", "fac_player_supporters_faction", "$g_faction_selection_selected_faction_number"),
	(str_store_faction_name, s1, ":faction"),
	(position_set_x, pos1, 0), (position_set_y, pos1, 0), (overlay_set_size, "$g_faction_selection_selected_faction_name", pos1), (overlay_set_size, "$g_faction_selection_selected_faction_flag", pos1),
	(create_text_overlay, "$g_faction_selection_selected_faction_name", "@Chosen Faction:^{s1}", tf_center_justify),
	(position_set_x, pos1, 835), (position_set_y, pos1, 500), (overlay_set_position, "$g_faction_selection_selected_faction_name", pos1),
	(position_set_x, pos1, 1200), (position_set_y, pos1, 1200), (overlay_set_size, "$g_faction_selection_selected_faction_name", pos1),
	(create_mesh_overlay, "$g_faction_selection_selected_faction_flag", "mesh_menu_flag1"),
	(position_set_x, pos1, 835), (position_set_y, pos1, 400), (overlay_set_position, "$g_faction_selection_selected_faction_flag", pos1),
	(position_set_x, pos1, 1500), (position_set_y, pos1, 1500), (overlay_set_size, "$g_faction_selection_selected_faction_flag", pos1),
	(faction_get_slot, ":material_string", ":faction", slot_faction_flag_material),
	(str_store_string, s1, ":material_string"),
	(overlay_set_material, "$g_faction_selection_selected_faction_flag", s1),
	(position_set_x, pos1, 835), (position_set_y, pos1, 100), (overlay_set_position, "$g_faction_selection_start_game", pos1),
	(try_end),
]),
]),

("flag_selection", 0, mesh_load_window2, [
(ti_on_presentation_load, [
	(set_fixed_point_multiplier, 1000),      
	(assign, "$g_faction_selection_selected_faction_number", -1),

	(create_text_overlay, reg1, "@Select flag for your faction", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 680), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 1500), (position_set_y, pos1, 1500), (overlay_set_size, reg1, pos1),
	(create_game_button_overlay, "$g_faction_selection_close", "@Close"),
	(position_set_x, pos1, 920), (position_set_y, pos1, 30), (overlay_set_position, "$g_faction_selection_close", pos1),

	(str_clear, s0),
	(create_text_overlay, "$g_faction_selection_container", s0, tf_scrollable),
	(position_set_x, pos1, 60), (position_set_y, pos1, 35), (overlay_set_position, "$g_faction_selection_container", pos1),
	(position_set_x, pos1, 760), (position_set_y, pos1, 600), (overlay_set_area_size, "$g_faction_selection_container", pos1),
	(set_container_overlay, "$g_faction_selection_container"),
	
	(position_set_x, pos2, 800), (position_set_y, pos2, 800), 
	(assign, ":faction_number", 0),
		(try_for_range, ":index_y", 0, 15),
		(store_mul, ":coor_y", ":index_y", 150), (store_sub, ":coor_y", 2500, ":coor_y"),
			(try_for_range, ":index_x", 0, 5),
			(val_add, ":faction_number", 1),
			(le, ":faction_number", 93),
			(store_mul, ":coor_x", ":index_x", 150), (val_add, ":coor_x", 60),
			(create_image_button_overlay, reg1, "mesh_menu_flag1", "mesh_menu_flag1"),
			(position_set_x, pos1, ":coor_x"), (position_set_y, pos1, ":coor_y"), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2),
			(store_add, ":string", "str_flag1_0", ":faction_number"),
			(str_store_string, s1, ":string"),
			(overlay_set_material, reg1, s1),
			(troop_set_slot, "trp_temp_array_a", reg1, ":faction_number"),
			(try_end),
		(try_end),
	(set_container_overlay, -1),
	
	(presentation_set_duration, 999999),
	]),
(ti_on_presentation_event_state_change, [
	(store_trigger_param_1, ":object"),
 
	(try_begin),
	(eq, ":object", "$g_faction_selection_close"),
	(presentation_set_duration, 0),
	(else_try),
	(troop_get_slot, "$g_faction_selection_selected_faction_number", "trp_temp_array_a", ":object"),
	(call_script, "script_change_faction_flag", "fac_player_supporters_faction", "$g_faction_selection_selected_faction_number"),
	(presentation_set_duration, 0),
	(try_end),
]),
]),

("peace_negotiations", 0, mesh_load_window3, [
(ti_on_presentation_load, [
	(set_fixed_point_multiplier, 1000),

	(call_script, "script_peace_negotiations_detect_allies_and_enemies"),

	(str_store_faction_name, s1, "$peace_negotiations_enemy_faction"),
	(str_store_faction_name, s2, "fac_player_supporters_faction"),
	(create_text_overlay, reg1, "@Peace negotiations with {s1}", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 680), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 1500), (position_set_y, pos1, 1500), (overlay_set_size, reg1, pos1),
	(create_text_overlay, reg1, s2, tf_center_justify),
	(position_set_x, pos1, 100), (position_set_y, pos1, 680), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, reg1, pos1),
	(create_text_overlay, reg1, s1, tf_center_justify),
	(position_set_x, pos1, 900), (position_set_y, pos1, 680), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, reg1, pos1),
	(create_game_button_overlay, "$g_peace_negotiations_close", "@Stop Negotiations"),
	(position_set_x, pos1, 920), (position_set_y, pos1, 30), (overlay_set_position, "$g_peace_negotiations_close", pos1),
	(create_game_button_overlay, "$g_peace_negotiations_make_peace", "@Make Peace"),
	(position_set_x, pos1, 740), (position_set_y, pos1, 30), (overlay_set_position, "$g_peace_negotiations_make_peace", pos1),
	(create_text_overlay, "$g_peace_negotiations_cannot_agree_text", "@Opposite side diplomats^cannot agree with terms", tf_center_justify),
	(position_set_x, pos1, 740), (position_set_y, pos1, 35), (overlay_set_position, "$g_peace_negotiations_cannot_agree_text", pos1),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$g_peace_negotiations_cannot_agree_text", pos1),
		(try_begin),
		(call_script, "script_peace_negotiations_calculate_victory_points"),
		(call_script, "script_peace_negotiations_calculate_infamy_cost"),
		(lt, reg10, 0),
		(str_store_faction_name, s1, "$peace_negotiations_enemy_faction"),
		(else_try),
		(gt, reg10, 0),
		(str_store_faction_name, s1, "fac_player_supporters_faction"),
		(else_try),
		(str_store_string, s1, "@None"),
		(try_end),
	(create_text_overlay, reg1, "@Current winner: {s1}", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 620), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 1100), (position_set_y, pos1, 1100), (overlay_set_size, reg1, pos1),
	(assign, "$peace_negotiations_war_reparations_amount", reg10),
	(val_mul, "$peace_negotiations_war_reparations_amount", 100),
	(call_script, "script_get_modulus_of_value", "$peace_negotiations_war_reparations_amount"), (assign, "$peace_negotiations_war_reparations_amount", reg0),
	(assign, reg11, "$peace_negotiations_war_reparations_amount"),
	(create_text_overlay, reg1, "@War reparations amount: {reg11} $", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 560), (overlay_set_position, reg1, pos1),
	(position_set_x, pos1, 1100), (position_set_y, pos1, 1100), (overlay_set_size, reg1, pos1),
	(create_text_overlay, "$peace_negotiations_victory_points_used_text", "@Victory Points/Points needed for agreement: {reg20}/{reg10}", 0),
	(position_set_x, pos1, 350), (position_set_y, pos1, 60), (overlay_set_position, "$peace_negotiations_victory_points_used_text", pos1),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$peace_negotiations_victory_points_used_text", pos1),
	(create_text_overlay, "$peace_negotiations_infamy_cost_text", "@Infamy penalty: {reg12}", 0),
	(position_set_x, pos1, 350), (position_set_y, pos1, 25), (overlay_set_position, "$peace_negotiations_infamy_cost_text", pos1),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$peace_negotiations_infamy_cost_text", pos1),

	(position_set_x, pos2, 1100), (position_set_y, pos2, 1100),
	(faction_get_slot, ":material_string", "fac_player_supporters_faction", slot_faction_flag_material), (create_mesh_overlay, reg1, "mesh_menu_flag1"),
	(position_set_x, pos1, 100), (position_set_y, pos1, 610), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2), (str_store_string, s1, ":material_string"), (overlay_set_material, reg1, s1),
	(str_store_faction_name, s31, "fac_player_supporters_faction"), (overlay_set_tooltip, reg1, s31), 
	(assign, ":y_coordinate", 610),
		(try_begin),
		(gt, "$number_of_allies", 0),
			(try_for_range, ":slot", 0, "$number_of_allies"),
			(le, ":slot", 3),
			(troop_get_slot, ":faction", "trp_temp_array_d", ":slot"),
			(val_add, ":y_coordinate", -130),
			(faction_get_slot, ":material_string", ":faction", slot_faction_flag_material), (create_mesh_overlay, reg1, "mesh_menu_flag1"),
			(position_set_x, pos1, 100), (position_set_y, pos1, ":y_coordinate"), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2), (str_store_string, s1, ":material_string"), (overlay_set_material, reg1, s1),
			(str_store_faction_name, s31, ":faction"), (overlay_set_tooltip, reg1, s31), 
			(try_end),
		(try_end),
	(faction_get_slot, ":material_string", "$peace_negotiations_enemy_faction", slot_faction_flag_material), (create_mesh_overlay, reg1, "mesh_menu_flag1"),
	(position_set_x, pos1, 900), (position_set_y, pos1, 610), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2), (str_store_string, s1, ":material_string"), (overlay_set_material, reg1, s1),
	(assign, ":y_coordinate", 610),
	(str_store_faction_name, s31, "$peace_negotiations_enemy_faction"), (overlay_set_tooltip, reg1, s31), 
		(try_begin),
		(gt, "$number_of_enemies", 0),
			(try_for_range, ":slot", 0, "$number_of_enemies"),
			(le, ":slot", 3),
			(troop_get_slot, ":faction", "trp_temp_array_c", ":slot"),
			(val_add, ":y_coordinate", -130),
			(faction_get_slot, ":material_string", ":faction", slot_faction_flag_material), (create_mesh_overlay, reg1, "mesh_menu_flag1"),
			(position_set_x, pos1, 900), (position_set_y, pos1, ":y_coordinate"), (overlay_set_position, reg1, pos1), (overlay_set_size, reg1, pos2), (str_store_string, s1, ":material_string"), (overlay_set_material, reg1, s1),
			(str_store_faction_name, s31, ":faction"), (overlay_set_tooltip, reg1, s31), 
			(try_end),
		(try_end),

	(str_clear, s0),
	(create_text_overlay, "$g_peace_negotiations_container", s0, tf_scrollable),
	(position_set_x, pos1, 0), (position_set_y, pos1, 100), (overlay_set_position, "$g_peace_negotiations_container", pos1),
	(position_set_x, pos1, 720), (position_set_y, pos1, 400), (overlay_set_area_size, "$g_peace_negotiations_container", pos1),
	(set_container_overlay, "$g_peace_negotiations_container"),
	
	(assign, ":y_coordinate_max", 0),
		(try_for_range, ":center", walled_centers_begin, walled_centers_end),
		(party_set_slot, ":center", slot_center_faction_to_assign, -1),
		(call_script, "script_cf_peace_negotiations_if_center_can_appear_in_the_list", ":center"),
		(party_set_slot, ":center", slot_center_temp, 0),
		(val_add, ":y_coordinate_max", 30),
		(try_end),
	(assign, ":y_coordinate", ":y_coordinate_max"),
	(position_set_x, pos3, 800), (position_set_y, pos3, 800),
	(position_set_x, pos4, 190), (position_set_y, pos4, 190),
		(try_for_range, ":center", walled_centers_begin, walled_centers_end),
		(call_script, "script_cf_peace_negotiations_if_center_can_appear_in_the_list", ":center"),
		(store_faction_of_party, ":faction", ":center"),
		(party_get_slot, ":official_faction", ":center", slot_center_official_faction),
		(neq, ":official_faction", ":faction"),
		(call_script, "script_peace_negotiations_add_center", ":center", ":y_coordinate"),
		(party_set_slot, ":center", slot_center_temp, 1),
		(val_add, ":y_coordinate", -30),
		(try_end),
		(try_for_range, ":center", walled_centers_begin, walled_centers_end),
		(call_script, "script_cf_peace_negotiations_if_center_can_appear_in_the_list", ":center"),
		(party_slot_eq, ":center", slot_center_temp, 0),
		(call_script, "script_peace_negotiations_add_center", ":center", ":y_coordinate"),
		(val_add, ":y_coordinate", -30),
		(try_end),
	(set_container_overlay, -1),
	
	(call_script, "script_peace_negotiations_enemy_rethink"),
	(overlay_set_text, "$peace_negotiations_victory_points_used_text", "@Victory Points: {reg20}/{reg10}"),
	(presentation_set_duration, 999999),
	]),
(ti_on_presentation_event_state_change, [
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
 
	(try_begin),
	(eq, ":object", "$g_peace_negotiations_close"),
	(presentation_set_duration, 0), (assign, "$peace_negotiations_ai_offer", 0), (jump_to_menu, "mnu_close"),
	(else_try),
	(eq, ":object", "$g_peace_negotiations_make_peace"),
	(presentation_set_duration, 0), (assign, "$peace_negotiations_ai_offer", 0), (jump_to_menu, "mnu_close"),
	(call_script, "script_peace_negotiations_set_center_owners_to_official_for_factions", "fac_player_supporters_faction", "$peace_negotiations_enemy_faction"),
	(call_script, "script_diplomacy_start_peace_between_kingdoms", "fac_player_supporters_faction", "$peace_negotiations_enemy_faction", 1),
		(try_begin),
		(gt, "$number_of_enemies", 0),
			(try_for_range, ":slot", 0, "$number_of_enemies"),
			(troop_get_slot, ":faction", "trp_temp_array_c", ":slot"),
			(call_script, "script_diplomacy_start_peace_between_kingdoms", "fac_player_supporters_faction", ":faction", 1),
			(gt, "$number_of_allies", 0),
				(try_for_range, ":slot", 0, "$number_of_allies"),
				(troop_get_slot, ":faction2", "trp_temp_array_d", ":slot"),
				(call_script, "script_peace_negotiations_set_center_owners_to_official_for_factions", ":faction2", ":faction"),
				(call_script, "script_diplomacy_start_peace_between_kingdoms", ":faction2", ":faction", 1),
				(try_end),
			(try_end),
		(try_end),
		(try_begin),
		(gt, "$number_of_allies", 0),
			(try_for_range, ":slot", 0, "$number_of_allies"),
			(troop_get_slot, ":faction", "trp_temp_array_d", ":slot"),
			(call_script, "script_peace_negotiations_set_center_owners_to_official_for_factions", "$peace_negotiations_enemy_faction", ":faction"),
			(call_script, "script_diplomacy_start_peace_between_kingdoms", "$peace_negotiations_enemy_faction", ":faction", 1),
			(gt, "$number_of_enemies", 0),
			(try_end),
		(try_end),
		(try_begin),
		(gt, "$peace_negotiations_infamy_cost", 0),
		(call_script, "script_faction_change_infamy", "fac_player_supporters_faction", "$peace_negotiations_infamy_cost"),
		(val_min, "$peace_negotiations_infamy_cost", 15),
			(try_begin),
			(gt, "$number_of_allies", 0),
				(try_for_range, ":slot", 0, "$number_of_allies"),
				(troop_get_slot, ":faction", "trp_temp_array_d", ":slot"),
				(call_script, "script_faction_change_infamy", ":faction", "$peace_negotiations_infamy_cost"),
				(try_end),
			(try_end),
		(try_end),
		(try_begin),
		(lt, reg10, 0),
		(troop_remove_gold, "trp_player", "$peace_negotiations_war_reparations_amount"),
		(else_try),
		(troop_add_gold, "trp_player", "$peace_negotiations_war_reparations_amount"),
		(try_end),
	(else_try),
	(troop_get_slot, ":other_checkbox", "trp_temp_array_a", ":object"),
	(troop_get_slot, ":center", "trp_temp_array_b", ":object"),
		(try_begin),
		(assign, ":continue", 1),
		(party_get_slot, ":official_faction", ":center", slot_center_official_faction),
		(store_faction_of_party, ":faction", ":center"),
		(eq, ":official_faction", ":faction"),
			(try_begin),
			(call_script, "script_cf_peace_negotiations_if_center_is_of_enemies", ":center"),
			(assign, ":continue", 0),
				(try_begin),
				(call_script, "script_cf_if_center_borders_a_faction", ":center", "fac_player_supporters_faction"),
				(assign, ":continue", 1),
				(else_try),
				(str_store_party_name, s31, ":center"),
				(display_message, "@Cannot claim {s31} - it doesn't have supply routes to your faction."),
					(try_begin),
					(eq, ":value", 1),
					(overlay_set_val, ":object", 0),
					(else_try),
					(overlay_set_val, ":object", 1),
					(try_end),
				(try_end),
			(try_end),
			(try_begin),
			(neq, ":official_faction", "fac_player_supporters_faction"),
			(call_script, "script_cf_peace_negotiations_if_center_is_of_allies", ":center"),
			(assign, ":continue", 0),
			(str_store_party_name, s31, ":center"),
			(str_store_faction_name, s32, ":official_faction"),
			(str_store_faction_name, s33, "$peace_negotiations_enemy_faction"),
			(display_message, "@Diplomats from {s32} refuse to give {s31} to the {s33}."),
					(try_begin),
					(eq, ":value", 1),
					(overlay_set_val, ":object", 0),
					(else_try),
					(overlay_set_val, ":object", 1),
					(try_end),
			(try_end),
		(try_end),
	(eq, ":continue", 1),
		(try_begin),
		(party_slot_eq, ":center", slot_center_faction_to_assign, -1),
			(try_begin),
			(party_get_slot, ":official_faction", ":center", slot_center_official_faction),
			(store_faction_of_party, ":faction", ":center"),
			(neq, ":official_faction", ":faction"),
			(party_set_slot, ":center", slot_center_faction_to_assign, ":official_faction"),
			(else_try),
			(eq, ":faction", "fac_player_supporters_faction"),
			(party_set_slot, ":center", slot_center_faction_to_assign, "$peace_negotiations_enemy_faction"),
			(else_try),
			(eq, ":faction", "$peace_negotiations_enemy_faction"),
			(party_set_slot, ":center", slot_center_faction_to_assign, "fac_player_supporters_faction"),
			(else_try),
			(call_script, "script_cf_peace_negotiations_if_faction_is_ally", ":faction"),
			(party_set_slot, ":center", slot_center_faction_to_assign, "$peace_negotiations_enemy_faction"),
			(else_try),
			(call_script, "script_cf_peace_negotiations_if_faction_is_enemy", ":faction"),
			(party_set_slot, ":center", slot_center_faction_to_assign, "fac_player_supporters_faction"),
			(try_end),
		(else_try),
		(party_set_slot, ":center", slot_center_faction_to_assign, -1),
		(try_end),
		(try_begin),
		(eq, ":value", 1),
		(overlay_set_val, ":other_checkbox", 0),
		(else_try),
		(eq, ":value", 0),
		(overlay_set_val, ":other_checkbox", 1),
		(try_end),
	(call_script, "script_peace_negotiations_enemy_rethink"),
	(call_script, "script_peace_negotiations_calculate_infamy_cost"),
	(overlay_set_text, "$peace_negotiations_infamy_cost_text", "@Infamy penalty: {reg12}"),
	(overlay_set_text, "$peace_negotiations_victory_points_used_text", "@Victory Points: {reg20}/{reg10}"),
	(try_end),
]),
]),

("pps_menu", 0, mesh_load_window2, [
	(ti_on_presentation_load,
	[
	(presentation_set_duration, 999999),
	(set_fixed_point_multiplier, 1000),

	(try_begin),
	(neg|is_between, "$pps_menu_selected_faction", kingdoms_begin, kingdoms_end),
		(try_begin),
		(gt, "$players_kingdom", 0),
		(assign, "$pps_menu_selected_faction", "$players_kingdom"),
		(else_try),
		(assign, "$pps_menu_selected_faction", "fac_kingdom_1"),
		(try_end),
	(try_end),
	
	# (create_mesh_overlay, "$overlay_mesh_pps_menu_bg1", "mesh_pps_menu_bg"),
	# (position_set_x, pos1, 150), (position_set_y, pos1, 340), (overlay_set_position, "$overlay_mesh_pps_menu_bg1", pos1),
	# (position_set_x, pos1, 1030), (position_set_y, pos1, 1280), (overlay_set_size, "$overlay_mesh_pps_menu_bg1", pos1),
	(create_mesh_overlay, "$overlay_mesh_pps_menu_bg2", "mesh_pps_menu_bg"),
	(position_set_x, pos1, 435), (position_set_y, pos1, 362), (overlay_set_position, "$overlay_mesh_pps_menu_bg2", pos1),
	(position_set_x, pos1, 840), (position_set_y, pos1, 1120), (overlay_set_size, "$overlay_mesh_pps_menu_bg2", pos1),
	
	(create_combo_label_overlay, "$overlay_combo_label_selected_faction"),
	(position_set_x, pos1, 1300), (position_set_y, pos1, 1300), (overlay_set_size, "$overlay_combo_label_selected_faction", pos1),
	(position_set_x, pos1, 500), (position_set_y, pos1, 690), (overlay_set_position, "$overlay_combo_label_selected_faction", pos1),
	(assign, ":index", 0),
		(try_for_range, ":faction", kingdoms_begin, kingdoms_end),
		(faction_slot_eq, ":faction", slot_faction_state, sfs_active),
		(str_store_faction_name, s1, ":faction"),
		(overlay_add_item, "$overlay_combo_label_selected_faction", "@{s1}"),
		(troop_set_slot, "trp_array_40", ":index", ":faction"),
		(troop_set_slot, "trp_temp_array_b", ":faction", ":index"),
		(val_add, ":index", 1),
		(try_end),
	(troop_get_slot, ":index", "trp_temp_array_b", "$pps_menu_selected_faction"),
	(overlay_set_val, "$overlay_combo_label_selected_faction", ":index"),
	(create_mesh_overlay, "$overlay_mesh_selected_faction_flag", "mesh_menu_flag1"),
	(position_set_x, pos1, 500), (position_set_y, pos1, 670), (overlay_set_position, "$overlay_mesh_selected_faction_flag", pos1),
	(position_set_x, pos1, 400), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_mesh_selected_faction_flag", pos1),
	(create_text_overlay, "$overlay_text_selected_faction_government_type", "@ ", tf_center_justify),
	(position_set_x, pos1, 500), (position_set_y, pos1, 625), (overlay_set_position, "$overlay_text_selected_faction_government_type", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_selected_faction_government_type", pos1),
	(create_text_overlay, "$overlay_text_parliament_composition", "@ ", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 650), (overlay_set_position, "$overlay_text_parliament_composition", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_parliament_composition", pos1),
	(create_mesh_overlay, "$overlay_mesh_parliament_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_parliament_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_parliament_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_parliament_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_parliament_party1", pos1), (overlay_set_position, "$overlay_mesh_parliament_party2", pos1), (overlay_set_position, "$overlay_mesh_parliament_party3", pos1), (overlay_set_position, "$overlay_mesh_parliament_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_parliament_party1", pos1), (overlay_set_size, "$overlay_mesh_parliament_party2", pos1), (overlay_set_size, "$overlay_mesh_parliament_party3", pos1), (overlay_set_size, "$overlay_mesh_parliament_party4", pos1),
	(create_text_overlay, "$overlay_text_executive_branch_composition", "@Executive Branch Composition ", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 595), (overlay_set_position, "$overlay_text_executive_branch_composition", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_executive_branch_composition", pos1),
	(create_mesh_overlay, "$overlay_mesh_executive_branch_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_executive_branch_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_executive_branch_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_executive_branch_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_executive_branch_party1", pos1), (overlay_set_position, "$overlay_mesh_executive_branch_party2", pos1), (overlay_set_position, "$overlay_mesh_executive_branch_party3", pos1), (overlay_set_position, "$overlay_mesh_executive_branch_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_executive_branch_party1", pos1), (overlay_set_size, "$overlay_mesh_executive_branch_party2", pos1), (overlay_set_size, "$overlay_mesh_executive_branch_party3", pos1), (overlay_set_size, "$overlay_mesh_executive_branch_party4", pos1),
	(create_image_button_overlay, "$overlay_mesh_party1_ruling_party", "mesh_pps_ruling_party", "mesh_pps_ruling_party"),
	(create_image_button_overlay, "$overlay_mesh_party2_ruling_party", "mesh_pps_ruling_party", "mesh_pps_ruling_party"),
	(create_image_button_overlay, "$overlay_mesh_party3_ruling_party", "mesh_pps_ruling_party", "mesh_pps_ruling_party"),
	(create_image_button_overlay, "$overlay_mesh_party4_ruling_party", "mesh_pps_ruling_party", "mesh_pps_ruling_party"),
	(overlay_set_tooltip, "$overlay_mesh_party1_ruling_party", "@Not a ruling party.^Click to make this party^ a ruling party."),
	(overlay_set_tooltip, "$overlay_mesh_party2_ruling_party", "@Not a ruling party.^Click to make this party^ a ruling party."),
	(overlay_set_tooltip, "$overlay_mesh_party3_ruling_party", "@Not a ruling party.^Click to make this party^ a ruling party."),
	(overlay_set_tooltip, "$overlay_mesh_party4_ruling_party", "@Not a ruling party.^Click to make this party^ a ruling party."),
	(create_text_overlay, "$overlay_text_party1_name", "@ ", 0),
	(create_text_overlay, "$overlay_text_party2_name", "@ ", 0),
	(create_text_overlay, "$overlay_text_party3_name", "@ ", 0),
	(create_text_overlay, "$overlay_text_party4_name", "@ ", 0),
	(create_text_overlay, "$overlay_text_party1_influence", "@ ", 0),
	(create_text_overlay, "$overlay_text_party2_influence", "@ ", 0),
	(create_text_overlay, "$overlay_text_party3_influence", "@ ", 0),
	(create_text_overlay, "$overlay_text_party4_influence", "@ ", 0),
	(create_text_overlay, "$overlay_text_party1_desc", "@ ", tf_scrollable),
	(create_text_overlay, "$overlay_text_party2_desc", "@ ", tf_scrollable),
	(create_text_overlay, "$overlay_text_party3_desc", "@ ", tf_scrollable),
	(create_text_overlay, "$overlay_text_party4_desc", "@ ", tf_scrollable),
	(create_mesh_overlay, "$overlay_mesh_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_party1", pos1), (overlay_set_position, "$overlay_mesh_party2", pos1), (overlay_set_position, "$overlay_mesh_party3", pos1), (overlay_set_position, "$overlay_mesh_party4", pos1), (overlay_set_position, "$overlay_mesh_party1_ruling_party", pos1), (overlay_set_position, "$overlay_mesh_party2_ruling_party", pos1), (overlay_set_position, "$overlay_mesh_party3_ruling_party", pos1), (overlay_set_position, "$overlay_mesh_party4_ruling_party", pos1),
	(create_text_overlay, "$overlay_text_class0", "@Upper Class - Aristocracy", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 570), (overlay_set_position, "$overlay_text_class0", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_class0", pos1),
	(create_text_overlay, "$overlay_text_class1", "@Upper Class - Bourgeoisie", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 470), (overlay_set_position, "$overlay_text_class1", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_class1", pos1),
	(create_text_overlay, "$overlay_text_class2", "@Middle Class", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 370), (overlay_set_position, "$overlay_text_class2", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_class2", pos1),
	(create_text_overlay, "$overlay_text_class3", "@Lower Class - Urban", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 270), (overlay_set_position, "$overlay_text_class3", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_class3", pos1),
	(create_text_overlay, "$overlay_text_class4", "@Lower Class - Rural", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 170), (overlay_set_position, "$overlay_text_class4", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_class4", pos1),
	(create_text_overlay, "$overlay_text_class0_loyalty_to_parties", "@Loyalty to parties:", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 555), (overlay_set_position, "$overlay_text_class0_loyalty_to_parties", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class0_loyalty_to_parties", pos1),
	(create_text_overlay, "$overlay_text_class1_loyalty_to_parties", "@Loyalty to parties:", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 455), (overlay_set_position, "$overlay_text_class1_loyalty_to_parties", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class1_loyalty_to_parties", pos1),
	(create_text_overlay, "$overlay_text_class2_loyalty_to_parties", "@Loyalty to parties:", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 355), (overlay_set_position, "$overlay_text_class2_loyalty_to_parties", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class2_loyalty_to_parties", pos1),
	(create_text_overlay, "$overlay_text_class3_loyalty_to_parties", "@Loyalty to parties:", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 255), (overlay_set_position, "$overlay_text_class3_loyalty_to_parties", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class3_loyalty_to_parties", pos1),
	(create_text_overlay, "$overlay_text_class4_loyalty_to_parties", "@Loyalty to parties:", tf_center_justify),
	(position_set_x, pos1, 430), (position_set_y, pos1, 155), (overlay_set_position, "$overlay_text_class4_loyalty_to_parties", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class4_loyalty_to_parties", pos1),
	(faction_get_slot, reg1, "$pps_menu_selected_faction", slot_faction_class_upper_aristocracy_wealth), (val_div, reg1, 100),
	(faction_get_slot, reg2, "$pps_menu_selected_faction", slot_faction_class_upper_aristocracy_wealth), (val_div, reg2, 100),
	(faction_get_slot, reg3, "$pps_menu_selected_faction", slot_faction_class_upper_aristocracy_political_activity), (val_div, reg3, 100),
	(faction_get_slot, reg4, "$pps_menu_selected_faction", slot_faction_class_upper_aristocracy_satisfaction), (val_div, reg4, 100),
	(create_text_overlay, "$overlay_text_class0_wealth", "@Wealth: {reg1}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 520), (overlay_set_position, "$overlay_text_class0_wealth", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class0_wealth", pos1),
	(create_text_overlay, "$overlay_text_class0_satisfaction", "@Satisfaction with needs: {reg4}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 490), (overlay_set_position, "$overlay_text_class0_satisfaction", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class0_satisfaction", pos1),
	(create_text_overlay, "$overlay_text_class0_political_activity", "@Political activity: {reg3}%", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 520), (overlay_set_position, "$overlay_text_class0_political_activity", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class0_political_activity", pos1),
	(create_text_overlay, "$overlay_text_class0_famine", "@ ", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 490), (overlay_set_position, "$overlay_text_class0_famine", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class0_famine", pos1),
	(faction_get_slot, reg1, "$pps_menu_selected_faction", slot_faction_class_upper_bourgeoisie_wealth), (val_div, reg1, 100),
	(faction_get_slot, reg2, "$pps_menu_selected_faction", slot_faction_class_upper_bourgeoisie_wealth), (val_div, reg2, 100),
	(faction_get_slot, reg3, "$pps_menu_selected_faction", slot_faction_class_upper_bourgeoisie_political_activity), (val_div, reg3, 100),
	(faction_get_slot, reg4, "$pps_menu_selected_faction", slot_faction_class_upper_bourgeoisie_satisfaction), (val_div, reg4, 100),
	(create_text_overlay, "$overlay_text_class1_wealth", "@Wealth: {reg1}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_class1_wealth", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class1_wealth", pos1),
	(create_text_overlay, "$overlay_text_class1_satisfaction", "@Satisfaction with needs: {reg4}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 390), (overlay_set_position, "$overlay_text_class1_satisfaction", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class1_satisfaction", pos1),
	(create_text_overlay, "$overlay_text_class1_political_activity", "@Political activity: {reg3}%", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_class1_political_activity", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class1_political_activity", pos1),
	(create_text_overlay, "$overlay_text_class1_famine", "@ ", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 390), (overlay_set_position, "$overlay_text_class1_famine", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class1_famine", pos1),
	(faction_get_slot, reg1, "$pps_menu_selected_faction", slot_faction_class_middle_wealth), (val_div, reg1, 100),
	(faction_get_slot, reg2, "$pps_menu_selected_faction", slot_faction_class_middle_wealth), (val_div, reg2, 100),
	(faction_get_slot, reg3, "$pps_menu_selected_faction", slot_faction_class_middle_political_activity), (val_div, reg3, 100),
	(faction_get_slot, reg4, "$pps_menu_selected_faction", slot_faction_class_middle_satisfaction), (val_div, reg4, 100),
	(create_text_overlay, "$overlay_text_class2_wealth", "@Wealth: {reg1}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 320), (overlay_set_position, "$overlay_text_class2_wealth", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class2_wealth", pos1),
	(create_text_overlay, "$overlay_text_class2_satisfaction", "@Satisfaction with needs: {reg4}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 290), (overlay_set_position, "$overlay_text_class2_satisfaction", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class2_satisfaction", pos1),
	(create_text_overlay, "$overlay_text_class2_political_activity", "@Political activity: {reg3}%", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 320), (overlay_set_position, "$overlay_text_class2_political_activity", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class2_political_activity", pos1),
	(create_text_overlay, "$overlay_text_class2_famine", "@ ", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 290), (overlay_set_position, "$overlay_text_class2_famine", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class2_famine", pos1),
	(faction_get_slot, reg1, "$pps_menu_selected_faction", slot_faction_class_lower_urban_wealth), (val_div, reg1, 100),
	(faction_get_slot, reg2, "$pps_menu_selected_faction", slot_faction_class_lower_urban_wealth), (val_div, reg2, 100),
	(faction_get_slot, reg3, "$pps_menu_selected_faction", slot_faction_class_lower_urban_political_activity), (val_div, reg3, 100),
	(faction_get_slot, reg4, "$pps_menu_selected_faction", slot_faction_class_lower_urban_satisfaction), (val_div, reg4, 100),
	(create_text_overlay, "$overlay_text_class3_wealth", "@Wealth: {reg1}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 220), (overlay_set_position, "$overlay_text_class3_wealth", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class3_wealth", pos1),
	(create_text_overlay, "$overlay_text_class3_satisfaction", "@Satisfaction with needs: {reg4}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 190), (overlay_set_position, "$overlay_text_class3_satisfaction", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class3_satisfaction", pos1),
	(create_text_overlay, "$overlay_text_class3_political_activity", "@Political activity: {reg3}%", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 220), (overlay_set_position, "$overlay_text_class3_political_activity", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class3_political_activity", pos1),
	(create_text_overlay, "$overlay_text_class3_famine", "@ ", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 190), (overlay_set_position, "$overlay_text_class3_famine", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class3_famine", pos1),
	(faction_get_slot, reg1, "$pps_menu_selected_faction", slot_faction_class_lower_rural_wealth), (val_div, reg1, 100),
	(faction_get_slot, reg2, "$pps_menu_selected_faction", slot_faction_class_lower_rural_wealth), (val_div, reg2, 100),
	(faction_get_slot, reg3, "$pps_menu_selected_faction", slot_faction_class_lower_rural_political_activity), (val_div, reg3, 100),
	(faction_get_slot, reg4, "$pps_menu_selected_faction", slot_faction_class_lower_rural_satisfaction), (val_div, reg4, 100),
	(create_text_overlay, "$overlay_text_class4_wealth", "@Wealth: {reg1}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 120), (overlay_set_position, "$overlay_text_class4_wealth", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class4_wealth", pos1),
	(create_text_overlay, "$overlay_text_class4_satisfaction", "@Satisfaction with needs: {reg4}%", 0),
	(position_set_x, pos1, 310), (position_set_y, pos1, 90), (overlay_set_position, "$overlay_text_class4_satisfaction", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class4_satisfaction", pos1),
	(create_text_overlay, "$overlay_text_class4_political_activity", "@Political activity: {reg3}%", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 120), (overlay_set_position, "$overlay_text_class4_political_activity", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class4_political_activity", pos1),
	(create_text_overlay, "$overlay_text_class4_famine", "@ ", 0),
	(position_set_x, pos1, 450), (position_set_y, pos1, 90), (overlay_set_position, "$overlay_text_class4_famine", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_class4_famine", pos1),
	(create_mesh_overlay, "$overlay_mesh_class0_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_class0_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_class0_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_class0_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_class0_party1", pos1), (overlay_set_position, "$overlay_mesh_class0_party2", pos1), (overlay_set_position, "$overlay_mesh_class0_party3", pos1), (overlay_set_position, "$overlay_mesh_class0_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_class0_party1", pos1), (overlay_set_size, "$overlay_mesh_class0_party2", pos1), (overlay_set_size, "$overlay_mesh_class0_party3", pos1), (overlay_set_size, "$overlay_mesh_class0_party4", pos1),
	(create_mesh_overlay, "$overlay_mesh_class1_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_class1_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_class1_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_class1_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_class1_party1", pos1), (overlay_set_position, "$overlay_mesh_class1_party2", pos1), (overlay_set_position, "$overlay_mesh_class1_party3", pos1), (overlay_set_position, "$overlay_mesh_class1_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_class1_party1", pos1), (overlay_set_size, "$overlay_mesh_class1_party2", pos1), (overlay_set_size, "$overlay_mesh_class1_party3", pos1), (overlay_set_size, "$overlay_mesh_class1_party4", pos1),
	(create_mesh_overlay, "$overlay_mesh_class2_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_class2_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_class2_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_class2_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_class2_party1", pos1), (overlay_set_position, "$overlay_mesh_class2_party2", pos1), (overlay_set_position, "$overlay_mesh_class2_party3", pos1), (overlay_set_position, "$overlay_mesh_class2_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_class2_party1", pos1), (overlay_set_size, "$overlay_mesh_class2_party2", pos1), (overlay_set_size, "$overlay_mesh_class2_party3", pos1), (overlay_set_size, "$overlay_mesh_class2_party4", pos1),
	(create_mesh_overlay, "$overlay_mesh_class3_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_class3_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_class3_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_class3_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_class3_party1", pos1), (overlay_set_position, "$overlay_mesh_class0_party2", pos1), (overlay_set_position, "$overlay_mesh_class3_party3", pos1), (overlay_set_position, "$overlay_mesh_class3_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_class3_party1", pos1), (overlay_set_size, "$overlay_mesh_class3_party2", pos1), (overlay_set_size, "$overlay_mesh_class3_party3", pos1), (overlay_set_size, "$overlay_mesh_class3_party4", pos1),
	(create_mesh_overlay, "$overlay_mesh_class4_party1", "mesh_pps_party1"),
	(create_mesh_overlay, "$overlay_mesh_class4_party2", "mesh_pps_party2"),
	(create_mesh_overlay, "$overlay_mesh_class4_party3", "mesh_pps_party3"),
	(create_mesh_overlay, "$overlay_mesh_class4_party4", "mesh_pps_party4"),
	(position_set_x, pos1, -1000), (position_set_y, pos1, -1000),
	(overlay_set_position, "$overlay_mesh_class4_party1", pos1), (overlay_set_position, "$overlay_mesh_class4_party2", pos1), (overlay_set_position, "$overlay_mesh_class4_party3", pos1), (overlay_set_position, "$overlay_mesh_class4_party4", pos1),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000),
	(overlay_set_size, "$overlay_mesh_class4_party1", pos1), (overlay_set_size, "$overlay_mesh_class4_party2", pos1), (overlay_set_size, "$overlay_mesh_class4_party3", pos1), (overlay_set_size, "$overlay_mesh_class4_party4", pos1),

	(create_text_overlay, "$overlay_text_state_laws", "@State Laws:", tf_center_justify),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_state_laws", pos1),
	(position_set_x, pos1, 710), (position_set_y, pos1, 640), (overlay_set_position, "$overlay_text_state_laws", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_nomination_rules", "mesh_pps_law_card"),
	(position_set_x, pos1, 630), (position_set_y, pos1, 580), (overlay_set_position, "$overlay_mesh_law_nomination_rules", pos1),
	(create_text_overlay, "$overlay_text_law_nomination_rules", "@Nomination Rules", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 605), (overlay_set_size, "$overlay_text_law_nomination_rules", pos1),
	(position_set_x, pos1, 630), (position_set_y, pos1, 600), (overlay_set_position, "$overlay_text_law_nomination_rules", pos1),
	(create_button_overlay, "$overlay_text_law_nomination_rules_rich_only", "@Upper Class Only"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_nomination_rules_rich_only", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 585), (overlay_set_position, "$overlay_text_law_nomination_rules_rich_only", pos1),
	(create_button_overlay, "$overlay_text_law_nomination_rules_universal", "@Universal"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_nomination_rules_universal", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 575), (overlay_set_position, "$overlay_text_law_nomination_rules_universal", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_voting_franchise", "mesh_pps_law_card"),
	(position_set_x, pos1, 630), (position_set_y, pos1, 480), (overlay_set_position, "$overlay_mesh_law_voting_franchise", pos1),
	(create_text_overlay, "$overlay_text_law_voting_franchise", "@Vote Franchise", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_law_voting_franchise", pos1),
	(position_set_x, pos1, 630), (position_set_y, pos1, 500), (overlay_set_position, "$overlay_text_law_voting_franchise", pos1),
	(create_button_overlay, "$overlay_text_law_voting_franchise_aristocracy_only", "@Aristocracy Only"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_franchise_aristocracy_only", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 485), (overlay_set_position, "$overlay_text_law_voting_franchise_aristocracy_only", pos1),
	(create_button_overlay, "$overlay_text_law_voting_franchise_rich_only_only", "@Upper Class Only"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_franchise_rich_only_only", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 475), (overlay_set_position, "$overlay_text_law_voting_franchise_rich_only_only", pos1),
	(create_button_overlay, "$overlay_text_law_voting_franchise_upper_and_middle_only", "@Upper and Middle Class Only"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_franchise_upper_and_middle_only", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 465), (overlay_set_position, "$overlay_text_law_voting_franchise_upper_and_middle_only", pos1),
	(create_button_overlay, "$overlay_text_law_voting_franchise_universal_weighted", "@Universal Weighted"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_franchise_universal_weighted", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 455), (overlay_set_position, "$overlay_text_law_voting_franchise_universal_weighted", pos1),
	(create_button_overlay, "$overlay_text_law_voting_franchise_universal", "@Universal"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_franchise_universal", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 445), (overlay_set_position, "$overlay_text_law_voting_franchise_universal", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_voting_openness", "mesh_pps_law_card"),
	(position_set_x, pos1, 630), (position_set_y, pos1, 380), (overlay_set_position, "$overlay_mesh_law_voting_openness", pos1),
	(create_text_overlay, "$overlay_text_law_voting_openness", "@Voting System", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_law_voting_openness", pos1),
	(position_set_x, pos1, 630), (position_set_y, pos1, 400), (overlay_set_position, "$overlay_text_law_voting_openness", pos1),
	(create_button_overlay, "$overlay_text_law_voting_openness_harassment", "@Ruling Party Influence"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_openness_harassment", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 385), (overlay_set_position, "$overlay_text_law_voting_openness_harassment", pos1),
	(create_button_overlay, "$overlay_text_law_voting_openness_non_secret_ballot", "@Non-secret Ballot"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_openness_non_secret_ballot", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 375), (overlay_set_position, "$overlay_text_law_voting_openness_non_secret_ballot", pos1),
	(create_button_overlay, "$overlay_text_law_voting_openness_secret_ballot", "@Secret Ballot"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_voting_openness_secret_ballot", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 365), (overlay_set_position, "$overlay_text_law_voting_openness_secret_ballot", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_press", "mesh_pps_law_card"),
	(position_set_x, pos1, 630), (position_set_y, pos1, 280), (overlay_set_position, "$overlay_mesh_law_press", pos1),
	(create_text_overlay, "$overlay_text_law_press", "@Press Censorship", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_law_press", pos1),
	(position_set_x, pos1, 630), (position_set_y, pos1, 300), (overlay_set_position, "$overlay_text_law_press", pos1),
	(create_button_overlay, "$overlay_text_law_press_state_press", "@State Press"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 450), (overlay_set_size, "$overlay_text_law_press_state_press", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 285), (overlay_set_position, "$overlay_text_law_press_state_press", pos1),
	(create_button_overlay, "$overlay_text_law_press_heavy_censorship", "@Heavy Censorship"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 440), (overlay_set_size, "$overlay_text_law_press_heavy_censorship", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 275), (overlay_set_position, "$overlay_text_law_press_heavy_censorship", pos1),
	(create_button_overlay, "$overlay_text_law_press_light_censorship", "@Light Censorship"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 430), (overlay_set_size, "$overlay_text_law_press_light_censorship", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 265), (overlay_set_position, "$overlay_text_law_press_light_censorship", pos1),
	(create_button_overlay, "$overlay_text_law_press_free_press", "@Free Press"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_press_free_press", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 255), (overlay_set_position, "$overlay_text_law_press_free_press", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_executive_branch", "mesh_pps_law_card"),
	(position_set_x, pos1, 630), (position_set_y, pos1, 180), (overlay_set_position, "$overlay_mesh_law_executive_branch", pos1),
	(create_text_overlay, "$overlay_text_law_executive_branch", "@Executive Branch Posts", tf_center_justify),
	(position_set_x, pos1, 580), (position_set_y, pos1, 580), (overlay_set_size, "$overlay_text_law_executive_branch", pos1),
	(position_set_x, pos1, 630), (position_set_y, pos1, 200), (overlay_set_position, "$overlay_text_law_executive_branch", pos1),
	(create_button_overlay, "$overlay_text_law_executive_branch_selected_by_state", "@Appointed by State"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_executive_branch_selected_by_state", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 185), (overlay_set_position, "$overlay_text_law_executive_branch_selected_by_state", pos1),
	(create_button_overlay, "$overlay_text_law_executive_branch_partially_by_voting", "@Partially Elected"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_executive_branch_partially_by_voting", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 175), (overlay_set_position, "$overlay_text_law_executive_branch_partially_by_voting", pos1),
	(create_button_overlay, "$overlay_text_law_executive_branch_mostly_by_voting", "@Mostly Elected"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_executive_branch_mostly_by_voting", pos1),
	(position_set_x, pos1, 575), (position_set_y, pos1, 165), (overlay_set_position, "$overlay_text_law_executive_branch_mostly_by_voting", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_workers_conditions", "mesh_pps_law_card"),
	(position_set_x, pos1, 755), (position_set_y, pos1, 580), (overlay_set_position, "$overlay_mesh_law_workers_conditions", pos1),
	(create_text_overlay, "$overlay_text_law_workers_conditions", "@Maximum Work Hours", tf_center_justify),
	(position_set_x, pos1, 550), (position_set_y, pos1, 550), (overlay_set_size, "$overlay_text_law_workers_conditions", pos1),
	(position_set_x, pos1, 755), (position_set_y, pos1, 600), (overlay_set_position, "$overlay_text_law_workers_conditions", pos1),
	(create_button_overlay, "$overlay_text_law_workers_conditions_very_bad", "@Unlimited"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_conditions_very_bad", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 585), (overlay_set_position, "$overlay_text_law_workers_conditions_very_bad", pos1),
	(create_button_overlay, "$overlay_text_law_workers_conditions_bad", "@12 hours a day"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_conditions_bad", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 575), (overlay_set_position, "$overlay_text_law_workers_conditions_bad", pos1),
	(create_button_overlay, "$overlay_text_law_workers_conditions_medium", "@10 hours a day"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_conditions_medium", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 565), (overlay_set_position, "$overlay_text_law_workers_conditions_medium", pos1),
	(create_button_overlay, "$overlay_text_law_workers_conditions_good", "@8 hours a day"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_conditions_good", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 555), (overlay_set_position, "$overlay_text_law_workers_conditions_good", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_workers_wage", "mesh_pps_law_card"),
	(position_set_x, pos1, 755), (position_set_y, pos1, 480), (overlay_set_position, "$overlay_mesh_law_workers_wage", pos1),
	(create_text_overlay, "$overlay_text_law_workers_wage", "@Minimum Wage", tf_center_justify),
	(position_set_x, pos1, 550), (position_set_y, pos1, 550), (overlay_set_size, "$overlay_text_law_workers_wage", pos1),
	(position_set_x, pos1, 755), (position_set_y, pos1, 500), (overlay_set_position, "$overlay_text_law_workers_wage", pos1),
	(create_button_overlay, "$overlay_text_law_workers_wage_very_small", "@No Minimum"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_wage_very_small", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 485), (overlay_set_position, "$overlay_text_law_workers_wage_very_small", pos1),
	(create_button_overlay, "$overlay_text_law_workers_wage_small", "@Low Minimum"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_wage_small", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 475), (overlay_set_position, "$overlay_text_law_workers_wage_small", pos1),
	(create_button_overlay, "$overlay_text_law_workers_wage_medium", "@Acceptable Minimum"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_wage_medium", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 465), (overlay_set_position, "$overlay_text_law_workers_wage_medium", pos1),
	(create_button_overlay, "$overlay_text_law_workers_wage_big", "@Good Minimum"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_workers_wage_big", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 455), (overlay_set_position, "$overlay_text_law_workers_wage_big", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_trade_unions", "mesh_pps_law_card"),
	(position_set_x, pos1, 755), (position_set_y, pos1, 380), (overlay_set_position, "$overlay_mesh_law_trade_unions", pos1),
	(create_text_overlay, "$overlay_text_law_trade_unions", "@Trade Unions", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_law_trade_unions", pos1),
	(position_set_x, pos1, 755), (position_set_y, pos1, 400), (overlay_set_position, "$overlay_text_law_trade_unions", pos1),
	(create_button_overlay, "$overlay_text_law_trade_unions_not_allowed", "@Banned"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_trade_unions_not_allowed", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 385), (overlay_set_position, "$overlay_text_law_trade_unions_not_allowed", pos1),
	(create_button_overlay, "$overlay_text_law_trade_unions_allowed", "@Allowed"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_trade_unions_allowed", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 375), (overlay_set_position, "$overlay_text_law_trade_unions_allowed", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_public_meetings", "mesh_pps_law_card"),
	(position_set_x, pos1, 755), (position_set_y, pos1, 280), (overlay_set_position, "$overlay_mesh_law_public_meetings", pos1),
	(create_text_overlay, "$overlay_text_law_public_meetings", "@Public Meetings", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_law_public_meetings", pos1),
	(position_set_x, pos1, 755), (position_set_y, pos1, 300), (overlay_set_position, "$overlay_text_law_public_meetings", pos1),
	(create_button_overlay, "$overlay_text_law_public_meetings_not_allowed", "@Banned"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_public_meetings_not_allowed", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 285), (overlay_set_position, "$overlay_text_law_public_meetings_not_allowed", pos1),
	(create_button_overlay, "$overlay_text_law_public_meetings_sanctioned_only", "@Authorized only"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_public_meetings_sanctioned_only", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 275), (overlay_set_position, "$overlay_text_law_public_meetings_sanctioned_only", pos1),
	(create_button_overlay, "$overlay_text_law_public_meetings_allowed", "@Allowed"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_public_meetings_allowed", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 265), (overlay_set_position, "$overlay_text_law_public_meetings_allowed", pos1),
	(create_mesh_overlay, "$overlay_mesh_law_child_labour", "mesh_pps_law_card"),
	(position_set_x, pos1, 755), (position_set_y, pos1, 180), (overlay_set_position, "$overlay_mesh_law_child_labour", pos1),
	(create_text_overlay, "$overlay_text_law_child_labour", "@Child labour", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_law_child_labour", pos1),
	(position_set_x, pos1, 755), (position_set_y, pos1, 200), (overlay_set_position, "$overlay_text_law_child_labour", pos1),
	(create_button_overlay, "$overlay_text_law_child_labour_allowed", "@Allowed"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_child_labour_allowed", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 185), (overlay_set_position, "$overlay_text_law_child_labour_allowed", pos1),
	(create_button_overlay, "$overlay_text_law_child_labour_restrictions", "@Restrictions"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_child_labour_restrictions", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 175), (overlay_set_position, "$overlay_text_law_child_labour_restrictions", pos1),
	(create_button_overlay, "$overlay_text_law_child_labour_outlawed", "@Outlawed"),
	(position_set_x, pos1, 450), (position_set_y, pos1, 420), (overlay_set_size, "$overlay_text_law_child_labour_outlawed", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 165), (overlay_set_position, "$overlay_text_law_child_labour_outlawed", pos1),

	(create_text_overlay, "$overlay_text_current_budget", "@ ", tf_center_justify),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_current_budget", pos1),
	(create_text_overlay, "$overlay_text_current_budget_value", "@ ", tf_center_justify),
	(position_set_x, pos1, 1300), (position_set_y, pos1, 1300), (overlay_set_size, "$overlay_text_current_budget_value", pos1),
	(create_text_overlay, "$overlay_text_law_income_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_income_law", pos1),
	(create_text_overlay, "$overlay_text_law_income_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_income_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_income_law", 10, 120),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_income_law", pos1),
	(create_text_overlay, "$overlay_text_law_goodsservices_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_goodsservices_law", pos1),
	(create_text_overlay, "$overlay_text_law_goodsservices_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_goodsservices_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_goodsservices_law", 10, 110),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_goodsservices_law", pos1),
	(create_text_overlay, "$overlay_text_law_importexport_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_importexport_law", pos1),
	(create_text_overlay, "$overlay_text_law_importexport_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_importexport_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_importexport_law", 10, 110),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_importexport_law", pos1),
	(create_text_overlay, "$overlay_text_law_military_expenses_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_military_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_military_expenses_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_military_expenses_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_military_expenses_law", 10, 100),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_military_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_education_expenses_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_education_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_education_expenses_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_education_expenses_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_education_expenses_law", 10, 100),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_education_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_infrastructure_expenses_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_infrastructure_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_infrastructure_expenses_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_infrastructure_expenses_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_infrastructure_expenses_law", 10, 100),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_infrastructure_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_healthcare_expenses_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_healthcare_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_healthcare_expenses_balance", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_healthcare_expenses_balance", pos1),
	(create_slider_overlay, "$overlay_slider_law_healthcare_expenses_law", 10, 100),
	(position_set_x, pos1, 600), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_slider_law_healthcare_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_state_expenses_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_state_expenses_law", pos1),
	(create_text_overlay, "$overlay_text_law_state_industry_law", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_state_industry_law", pos1),
	(create_text_overlay, "$overlay_text_law_other_expenses", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_law_other_expenses", pos1),
	(create_text_overlay, "$overlay_text_lost_from_corruption", "@ ", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_lost_from_corruption", pos1),
	(create_text_overlay, "$overlay_text_corruption_level", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_corruption_level", pos1),
	(create_text_overlay, "$overlay_text_last_balance_change", "@ ", tf_center_justify),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_last_balance_change", pos1),
	
	(create_mesh_overlay, "$overlay_mesh_movements_bg", "mesh_pps_movements_bg"),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_mesh_movements_bg", pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 80), (overlay_set_position, "$overlay_mesh_movements_bg", pos1),
	
	(create_text_overlay, "$overlay_text_movements", "@Political movements", tf_left_align),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements", pos1),
	(position_set_x, pos1, 25), (position_set_y, pos1, 110), (overlay_set_position, "$overlay_text_movements", pos1),
	(create_mesh_overlay, "$overlay_mesh_movements_popularity", "mesh_pps_movement_popularity"),
	(position_set_x, pos1, 185), (position_set_y, pos1, 117), (overlay_set_position, "$overlay_mesh_movements_popularity", pos1),
	(create_mesh_overlay, "$overlay_mesh_movements_radicalism", "mesh_pps_movement_radicalism"),
	(position_set_x, pos1, 235), (position_set_y, pos1, 117), (overlay_set_position, "$overlay_mesh_movements_radicalism", pos1),
	
	(create_text_overlay, "$overlay_container_movements", "@ ", tf_scrollable),
	(position_set_x, pos1, 235), (position_set_y, pos1, 80), (overlay_set_area_size, "$overlay_container_movements", pos1),
	(position_set_x, pos1, 25), (position_set_y, pos1, 15), (overlay_set_position, "$overlay_container_movements", pos1),
	(set_container_overlay, "$overlay_container_movements"),

	(create_text_overlay, "$overlay_text_movements_liberal", "@Liberal movement", tf_left_align),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_liberal", pos1),
	(create_text_overlay, "$overlay_text_movements_socialist", "@Socialist movement", tf_left_align),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_socialist", pos1),
	(create_text_overlay, "$overlay_text_movements_propeace", "@Peace movement", tf_left_align),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_propeace", pos1),
	(create_text_overlay, "$overlay_text_movements_liberal_popularity", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_liberal_popularity", pos1),
	(create_text_overlay, "$overlay_text_movements_socialist_popularity", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_socialist_popularity", pos1),
	(create_text_overlay, "$overlay_text_movements_propeace_popularity", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_propeace_popularity", pos1),
	(create_text_overlay, "$overlay_text_movements_liberal_radicalism", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_liberal_radicalism", pos1),
	(create_text_overlay, "$overlay_text_movements_socialist_radicalism", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_socialist_radicalism", pos1),
	(create_text_overlay, "$overlay_text_movements_propeace_radicalism", "@ ", tf_center_justify),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, "$overlay_text_movements_propeace_radicalism", pos1),
	(create_mesh_overlay, "$overlay_mesh_movements_liberal", "mesh_pps_movement_liberal"),
	(create_mesh_overlay, "$overlay_mesh_movements_socialist", "mesh_pps_movement_socialist"),
	(create_mesh_overlay, "$overlay_mesh_movements_propeace", "mesh_pps_movement_propeace"),
	(set_container_overlay, -1),
	
(overlay_set_tooltip, "$overlay_mesh_law_child_labour", "str_child_labour_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_executive_branch", "str_executive_branch_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_nomination_rules", "str_nomination_rules_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_press", "str_press_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_public_meetings", "str_public_meetings_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_trade_unions", "str_trade_unions_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_voting_franchise", "str_voting_franchise_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_voting_openness", "str_voting_openness_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_workers_conditions", "str_workers_conditions_desc"),
(overlay_set_tooltip, "$overlay_mesh_law_workers_wage", "str_workers_wage_desc"),
(overlay_set_tooltip, "$overlay_text_law_education_expenses_law", "str_education_expenses_desc"),
(overlay_set_tooltip, "$overlay_text_law_goodsservices_law", "str_goodsservices_tax_desc"),
(overlay_set_tooltip, "$overlay_text_law_healthcare_expenses_law", "str_healthcare_expenses_desc"),
(overlay_set_tooltip, "$overlay_text_law_importexport_law", "str_importexport_tax_desc"),
(overlay_set_tooltip, "$overlay_text_law_income_law", "str_income_tax_desc"),
(overlay_set_tooltip, "$overlay_text_law_infrastructure_expenses_law", "str_infrastructure_expenses_desc"),
(overlay_set_tooltip, "$overlay_text_law_military_expenses_law", "str_military_expenses_desc"),
	(call_script, "script_pps_menu_display_faction"),
	]),

	(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
		(try_begin),
		(eq, ":object", "$overlay_text_law_child_labour_outlawed"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_child_labour, law_child_labour_outlawed, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_child_labour, law_child_labour_outlawed),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_child_labour_restrictions"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_child_labour, law_child_labour_restrictions, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_child_labour, law_child_labour_restrictions),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_child_labour_allowed"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_child_labour, law_child_labour_allowed, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_child_labour, law_child_labour_allowed),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_public_meetings_not_allowed"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_public_meetings, law_public_meetings_not_allowed, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_public_meetings, law_public_meetings_not_allowed),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_public_meetings_sanctioned_only"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_public_meetings, law_public_meetings_sanctioned_only, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_public_meetings, law_public_meetings_sanctioned_only),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_public_meetings_allowed"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_public_meetings, law_public_meetings_allowed, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_public_meetings, law_public_meetings_allowed),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_trade_unions_not_allowed"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_trade_unions, law_trade_unions_not_allowed, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_trade_unions, law_trade_unions_not_allowed),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_trade_unions_allowed"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_trade_unions, law_trade_unions_allowed, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_trade_unions, law_trade_unions_allowed),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_wage_very_small"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_wage, law_workers_wage_very_small, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_wage, law_workers_wage_very_small),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_wage_small"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_wage, law_workers_wage_small, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_wage, law_workers_wage_small),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_wage_medium"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_wage, law_workers_wage_medium, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_wage, law_workers_wage_medium),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_wage_big"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_wage, law_workers_wage_big, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_wage, law_workers_wage_big),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_executive_branch_selected_by_state"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_executive_branch, law_executive_branch_selected_by_state, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_executive_branch, law_executive_branch_selected_by_state),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_executive_branch_partially_by_voting"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_executive_branch, law_executive_branch_partially_by_voting, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_executive_branch, law_executive_branch_partially_by_voting),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_executive_branch_mostly_by_voting"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_executive_branch, law_executive_branch_mostly_by_voting, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_executive_branch, law_executive_branch_mostly_by_voting),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_conditions_good"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_conditions, law_workers_conditions_good, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_conditions, law_workers_conditions_good),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_conditions_medium"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_conditions, law_workers_conditions_medium, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_conditions, law_workers_conditions_medium),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_conditions_bad"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_conditions, law_workers_conditions_bad, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_conditions, law_workers_conditions_bad),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_workers_conditions_very_bad"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_workers_conditions, law_workers_conditions_very_bad, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_workers_conditions, law_workers_conditions_very_bad),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_press_state_press"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_press, law_press_state_press, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_press, law_press_state_press),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_press_light_censorship"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_press, law_press_light_censorship, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_press, law_press_light_censorship),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_press_heavy_censorship"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_press, law_press_heavy_censorship, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_press, law_press_heavy_censorship),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_press_free_press"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_press, law_press_free_press, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_press, law_press_free_press),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_openness_harassment"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_openness, law_voting_openness_harassment, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_openness, law_voting_openness_harassment),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_openness_non_secret_ballot"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_openness, law_voting_openness_non_secret_ballot, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_openness, law_voting_openness_non_secret_ballot),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_openness_secret_ballot"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_openness, law_voting_openness_secret_ballot, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_openness, law_voting_openness_secret_ballot),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_nomination_rules_rich_only"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_nomination_rules, law_nomination_rules_rich_only, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_nomination_rules, law_nomination_rules_rich_only),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_nomination_rules_universal"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_nomination_rules, law_nomination_rules_universal, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_nomination_rules, law_nomination_rules_universal),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_franchise_aristocracy_only"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_franchise, law_voting_franchise_aristocracy_only, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_franchise, law_voting_franchise_aristocracy_only),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_franchise_rich_only_only"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_franchise, law_voting_franchise_rich_only, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_franchise, law_voting_franchise_rich_only),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_franchise_upper_and_middle_only"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_franchise, law_voting_franchise_middle_and_upper_class_only, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_franchise, law_voting_franchise_middle_and_upper_class_only),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_franchise_universal_weighted"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_franchise, law_voting_franchise_universal_weighted, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_franchise, law_voting_franchise_universal_weighted),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_text_law_voting_franchise_universal"),
		(this_or_next|eq, "$cheat_mode", 1),
		(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
		(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_voting_franchise, law_voting_franchise_universal, "$pps_menu_selected_faction"),
		(call_script, "script_pps_faction_apply_law", "$pps_menu_selected_faction", law_voting_franchise, law_voting_franchise_universal),
		(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_mesh_party1_ruling_party"),
			(try_begin),
			(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
			(neg|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 0),
			(this_or_next|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_absolute_monarchy),
			(faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_constitutional_monarchy),
				(try_begin),
				(eq, "$pps_ruling_party_change_cooldown", 0),
				(faction_set_slot, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 0),
				(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
				(call_script, "script_pps_menu_display_faction"),
				(assign, "$pps_ruling_party_change_cooldown", 15),
				(else_try),
				(assign, reg1, "$pps_ruling_party_change_cooldown"),
				(display_message, "@You cannot change ruling party ({reg1} days cooldown)."),
				(try_end),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_mesh_party2_ruling_party"),
			(try_begin),
			(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
			(neg|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 1),
			(this_or_next|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_absolute_monarchy),
			(faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_constitutional_monarchy),
				(try_begin),
				(eq, "$pps_ruling_party_change_cooldown", 0),
				(faction_set_slot, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 1),
				(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
				(call_script, "script_pps_menu_display_faction"),
				(assign, "$pps_ruling_party_change_cooldown", 15),
				(else_try),
				(assign, reg1, "$pps_ruling_party_change_cooldown"),
				(display_message, "@You cannot change ruling party ({reg1} days cooldown)."),
				(try_end),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_mesh_party3_ruling_party"),
			(try_begin),
			(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
			(neg|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 2),
			(this_or_next|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_absolute_monarchy),
			(faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_constitutional_monarchy),
				(try_begin),
				(eq, "$pps_ruling_party_change_cooldown", 0),
				(faction_set_slot, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 2),
				(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
				(call_script, "script_pps_menu_display_faction"),
				(assign, "$pps_ruling_party_change_cooldown", 15),
				(else_try),
				(assign, reg1, "$pps_ruling_party_change_cooldown"),
				(display_message, "@You cannot change ruling party ({reg1} days cooldown)."),
				(try_end),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_mesh_party4_ruling_party"),
			(try_begin),
			(eq, "$pps_menu_selected_faction", "fac_player_supporters_faction"),
			(neg|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 3),
			(this_or_next|faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_absolute_monarchy),
			(faction_slot_eq, "$pps_menu_selected_faction", slot_faction_government_type, government_type_constitutional_monarchy),
				(try_begin),
				(eq, "$pps_ruling_party_change_cooldown", 0),
				(faction_set_slot, "$pps_menu_selected_faction", slot_faction_ruling_political_party, 3),
				(call_script, "script_pps_faction_calculate_support_of_parties", "$pps_menu_selected_faction"),
				(call_script, "script_pps_menu_display_faction"),
				(assign, "$pps_ruling_party_change_cooldown", 15),
				(else_try),
				(assign, reg1, "$pps_ruling_party_change_cooldown"),
				(display_message, "@You cannot change ruling party ({reg1} days cooldown)."),
				(try_end),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_combo_label_selected_faction"),
		(troop_get_slot, "$pps_menu_selected_faction", "trp_array_40", ":value"),
		(call_script, "script_pps_menu_display_faction"),
		(else_try),
		(eq, ":object", "$overlay_slider_law_income_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_income_tax, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_income_tax, ":value"),
			(assign, reg10, ":value"),
			(val_div, reg10, pps_income_tax_rate_divider),
			(overlay_set_text, "$overlay_text_law_income_law", "@Income tax: {reg10}%", tf_center_justify),
			#(overlay_set_text, "$overlay_text_law_income_balance", "@+{reg10} $", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_slider_law_goodsservices_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_goodsservices_tax, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_goodsservices_tax, ":value"),
			(assign, reg10, ":value"),
			(val_div, reg10, pps_goodsservices_tax_rate_divider),
			(overlay_set_text, "$overlay_text_law_goodsservices_law", "@Goods and Services tax: {reg10}%", tf_center_justify),
			#(overlay_set_text, "$overlay_text_law_goodsservices_balance", "@+{reg10} $", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_slider_law_importexport_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_importexport_tax, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_importexport_tax, ":value"),
			(assign, reg10, ":value"),
			(store_div, reg11, reg10, pps_import_tax_rate_divider),
			(store_div, reg12, reg10, pps_export_tax_rate_divider),
			(overlay_set_text, "$overlay_text_law_importexport_law", "@Import/Export tax: {reg11}%/{reg12}%", tf_center_justify),
			#(overlay_set_text, "$overlay_text_law_importexport_balance", "@+{reg10} $", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_slider_law_military_expenses_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_military_expenses, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_military_expenses, ":value"),
			(assign, reg10, ":value"),
			(overlay_set_text, "$overlay_text_law_military_expenses_law", "@Military Expenses: {reg10}%", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_slider_law_education_expenses_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_education_expenses, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_education_expenses, ":value"),
			(assign, reg10, ":value"),
			(overlay_set_text, "$overlay_text_law_education_expenses_law", "@Education Expenses: {reg10}%", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_slider_law_infrastructure_expenses_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_infrastructure_expenses, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_infrastructure_expenses, ":value"),
			(assign, reg10, ":value"),
			(overlay_set_text, "$overlay_text_law_infrastructure_expenses_law", "@Infrastructure Expenses: {reg10}%", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_slider_law_healthcare_expenses_law"),
			(try_begin),
			(call_script, "script_cf_pps_will_law_bill_succeed_in_faction", law_healthcare_expenses, ":value", "$pps_menu_selected_faction"),
			(faction_set_slot, "$pps_menu_selected_faction", slot_faction_law_healthcare_expenses, ":value"),
			(assign, reg10, ":value"),
			(overlay_set_text, "$overlay_text_law_healthcare_expenses_law", "@Healthcare Expenses: {reg10}%", tf_center_justify),
			(troop_set_slot, "trp_array_1", ":object", ":value"),
			(else_try),
			(troop_get_slot, ":previous_value", "trp_array_1", ":object"),
			(overlay_set_val, ":object", ":previous_value"),
			(try_end),
		(try_end),
	]),
	(ti_on_presentation_run,
	[
	(this_or_next|key_clicked, key_escape),
	(key_clicked, key_back_space),
	(presentation_set_duration, 0),
	]),
]),


("debug_display_slots", 0, mesh_load_window2, [
	(ti_on_presentation_load,
	[
	(presentation_set_duration, 999999),
	(set_fixed_point_multiplier, 1000),
	
	(assign, "$dds_selected_slot", 0),
	(assign, "$dds_selected_center", 0),
	(create_slider_overlay, "$slider_dds_selected_slot", 0, 1000),
	(position_set_x, pos1, 500), (position_set_y, pos1, 650), (overlay_set_position, "$slider_dds_selected_slot", pos1),
	(position_set_x, pos1, 3000), (position_set_y, pos1, 1000), (overlay_set_size, "$slider_dds_selected_slot", pos1),
	(create_slider_overlay, "$slider_dds_selected_center", 0, 2000),
	(position_set_x, pos1, 500), (position_set_y, pos1, 600), (overlay_set_position, "$slider_dds_selected_center", pos1),
	(position_set_x, pos1, 3000), (position_set_y, pos1, 1000), (overlay_set_size, "$slider_dds_selected_center", pos1),
	(create_text_overlay, "$text_dds_selected_slot", "@Slot: not selected", 0),
	(position_set_x, pos1, 80), (position_set_y, pos1, 650), (overlay_set_position, "$text_dds_selected_slot", pos1),
	(create_text_overlay, "$text_dds_selected_center", "@Party: not selected", 0),
	(position_set_x, pos1, 80), (position_set_y, pos1, 600), (overlay_set_position, "$text_dds_selected_center", pos1),
	(create_text_overlay, "$text_dds_selected_center_value", "@ ", 0),
	(position_set_x, pos1, 900), (position_set_y, pos1, 600), (overlay_set_position, "$text_dds_selected_center_value", pos1),
	]),

	(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
		(try_begin),
		(eq, ":object", "$slider_dds_selected_center"),
		(party_is_active, ":value"),
		(assign, "$dds_selected_center", ":value"),
		(str_store_party_name, s1, "$dds_selected_center"),
		(assign, reg1, ":value"), (overlay_set_text, "$text_dds_selected_center", "@Party: {reg1} - {s1}", 0),
			(try_begin),
			(party_is_active, "$dds_selected_center"),
			(party_get_slot, reg1, "$dds_selected_center", "$dds_selected_slot"),
			(overlay_set_text, "$text_dds_selected_center_value", "@{reg1}"),
			(else_try),
			(overlay_set_text, "$text_dds_selected_center_value", "@N A"),
			(try_end),
		(try_end),
		(try_begin),
		(eq, ":object", "$slider_dds_selected_slot"),
		(assign, "$dds_selected_slot", ":value"),
		(assign, reg1, "$dds_selected_slot"), (overlay_set_text, "$text_dds_selected_slot", "@Slot: {reg1}", 0),
			(try_begin),
			(party_is_active, "$dds_selected_center"),
			(party_get_slot, reg1, "$dds_selected_center", "$dds_selected_slot"),
			(overlay_set_text, "$text_dds_selected_center_value", "@{reg1}"),
			(else_try),
			(overlay_set_text, "$text_dds_selected_center_value", "@N A"),
			(try_end),
		(try_end),
	
	]),
	(ti_on_presentation_run,
	[
	(this_or_next|key_clicked, key_escape),
	(key_clicked, key_back_space),
	(presentation_set_duration, 0),
	]),
]),

("ddlc_reference",0,mesh_load_window2,[
(ti_on_presentation_load,
	[
(display_message, "@JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^JUST MONIKA JUST MONIKA JUST MONIKA^", 0xFF0000),
	(presentation_set_duration, 250),
	(play_sound, "snd_beep"),
	(create_mesh_overlay, "$overlay_mesh_monika", "mesh_monika"),
	(assign, "$g_ddlc_reference_timer", 0),
	
]),
(ti_on_presentation_run,
	[
(val_add, "$g_ddlc_reference_timer", 1),
	(try_begin),
	(eq, "$g_ddlc_reference_timer", 20),
	(overlay_set_material, "$overlay_mesh_monika", "@monika1"),
	(try_end),
]),
]),

("pes_region", 0, mesh_load_window2, [
	(ti_on_presentation_load,
	[
	(presentation_set_duration, 999999),
	(set_fixed_point_multiplier, 1000),
	
	(store_faction_of_party, ":center_faction", "$pes_region_selected_center"),
	(create_mesh_overlay, reg1, "mesh_pes_region_bg"),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 900), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 640), (overlay_set_position, reg1, pos1),
	(create_mesh_overlay, "$overlay_mesh_forced_urbanization", "mesh_pps_forced_urbanization"),
	(create_mesh_overlay, "$overlay_mesh_nationalization_urban", "mesh_pps_nationalization_urban"),
	(create_mesh_overlay, "$overlay_mesh_nationalization_rural", "mesh_pps_nationalization_rural"),
	(create_mesh_overlay, reg1, "mesh_pes_region_bg"),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 295), (overlay_set_position, reg1, pos1),
	(str_store_faction_name, s1, ":center_faction"),
	(create_text_overlay, "$overlay_text_pes_faction_name", "@{s1}", tf_center_justify),
	(position_set_x, pos1, 1200), (position_set_y, pos1, 1200), (overlay_set_size, "$overlay_text_pes_faction_name", pos1),
	(position_set_x, pos1, 150), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_faction_name", pos1),
	(faction_get_slot, reg1, ":center_faction", slot_faction_population),
	(store_mod, reg2, reg1, 1000000), (val_div, reg1, 1000000), (val_div, reg2, 1000),
		(try_begin),
		(str_store_string, s2, "@{!}"),
		(lt, reg2, 100),
		(str_store_string, s2, "@0"),
		(lt, reg2, 10),
		(str_store_string, s2, "@00"),
		(try_end),
	(create_text_overlay, "$overlay_text_pes_faction_population", "@{reg1}.{s2}{reg2} millions of population", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 670), (overlay_set_position, "$overlay_text_pes_faction_population", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_pes_faction_population", pos1),
	(faction_get_slot, reg1, ":center_faction", slot_faction_literacy),
	(store_mod, reg2, reg1, 100), (val_div, reg1, 100),
	(create_text_overlay, "$overlay_text_pes_faction_literacy", "@Literacy is {reg1}.{reg2}%", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 645), (overlay_set_position, "$overlay_text_pes_faction_literacy", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_pes_faction_literacy", pos1),
	(faction_get_slot, reg1, ":center_faction", slot_faction_urbanization),
	(store_mod, reg2, reg1, 100), (val_div, reg1, 100),
	(create_text_overlay, "$overlay_text_pes_faction_urbanization", "@Urbanization is {reg1}.{reg2}%", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 620), (overlay_set_position, "$overlay_text_pes_faction_urbanization", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_pes_faction_urbanization", pos1),
	(faction_get_slot, reg1, ":center_faction", slot_faction_gdp),
	(create_text_overlay, "$overlay_text_pes_faction_gdp", "@Daily GDP is {reg1} $.", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 595), (overlay_set_position, "$overlay_text_pes_faction_gdp", pos1),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_pes_faction_gdp", pos1),
	(faction_get_slot, reg1, ":center_faction", slot_faction_workers),
	(faction_get_slot, reg2, ":center_faction", slot_faction_workers_massproduction),
	(faction_get_slot, reg3, ":center_faction", slot_faction_workers_handicraft),
	(create_text_overlay, "$overlay_text_pes_faction_workers", "@{reg1} craftsmen, {reg2} of which are employed^in mass production, and {reg3} are^occupied in handicraft production.", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 555), (overlay_set_position, "$overlay_text_pes_faction_workers", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_faction_workers", pos1),

	(create_combo_label_overlay, "$overlay_combo_label_selected_center"),
	(position_set_x, pos1, 800), (position_set_y, pos1, 1200), (overlay_set_size, "$overlay_combo_label_selected_center", pos1),
	(position_set_x, pos1, 220), (position_set_y, pos1, 350), (overlay_set_position, "$overlay_combo_label_selected_center", pos1),
	(assign, ":index", 0),
		(try_for_range, ":center", walled_centers_begin, walled_centers_end),
		(store_faction_of_party, ":faction", ":center"),
		(eq, ":faction", ":center_faction"),
		(str_store_party_name, s1, ":center"),
		(overlay_add_item, "$overlay_combo_label_selected_center", "@Region of {s1}"),
		(troop_set_slot, "trp_temp_array_a", ":index", ":center"),
		(troop_set_slot, "trp_temp_array_b", ":center", ":index"),
		(val_add, ":index", 1),
		(try_end),
	(troop_get_slot, ":index", "trp_temp_array_b", "$pes_region_selected_center"),
	(overlay_set_val, "$overlay_combo_label_selected_center", ":index"),
	
	(create_game_button_overlay, "$overlay_button_pes_view_resources_info", "@Resource Menu", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 100), (overlay_set_position, "$overlay_button_pes_view_resources_info", pos1),
	(create_game_button_overlay, "$overlay_button_back", "@Back", tf_center_justify),
	(position_set_x, pos1, 150), (position_set_y, pos1, 40), (overlay_set_position, "$overlay_button_back", pos1),

	(create_text_overlay, "$overlay_text_pes_center_population", "@X thousands of population", tf_center_justify),
	(create_text_overlay, "$overlay_text_pes_center_literacy", "@Literacy is X%", tf_center_justify),
	(create_text_overlay, "$overlay_text_pes_center_urbanization", "@Urbanization is X%", tf_center_justify),
	(create_text_overlay, "$overlay_text_pes_center_workers", "@ ", tf_center_justify),
	(create_text_overlay, "$overlay_text_pes_center_gdp", "@ ", tf_center_justify),
	(create_text_overlay, "$overlay_text_pes_center_resource_bonus", "@ ", tf_center_justify),
	
	(create_mesh_overlay, "$overlay_button_pes_infrastructure1", "mesh_pes_infrastructure1"),
	(position_set_x, pos1, 20), (position_set_y, pos1, 200), (overlay_set_position, "$overlay_button_pes_infrastructure1", pos1),
	(create_mesh_overlay, "$overlay_button_pes_infrastructure2", "mesh_pes_infrastructure2"),
	(position_set_x, pos1, 20), (position_set_y, pos1, 220), (overlay_set_position, "$overlay_button_pes_infrastructure2", pos1),
	(create_mesh_overlay, "$overlay_button_pes_infrastructure3", "mesh_pes_infrastructure3"),
	(position_set_x, pos1, 20), (position_set_y, pos1, 220), (overlay_set_position, "$overlay_button_pes_infrastructure3", pos1),
	(create_mesh_overlay, "$overlay_button_pes_infrastructure4", "mesh_pes_infrastructure4"),
	(position_set_x, pos1, 20), (position_set_y, pos1, 220), (overlay_set_position, "$overlay_button_pes_infrastructure4", pos1),
	
		(try_for_range, ":factory", 0, 6),
		(store_add, ":array", "trp_array_1", ":factory"),
		(create_text_overlay, reg1, "@ ", tf_center_justify),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_name, reg1),
		(create_text_overlay, reg1, "@ ", tf_center_justify),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_workers_number, reg1),
		(create_mesh_overlay, reg1, "mesh_pes_region_factorycard"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_card, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_budget, reg1),
		(create_image_button_overlay, reg1, "mesh_pes_region_factory_photo", "mesh_pes_region_factory_photo"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_photo, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_income, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_spent_and_earnt, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_produced_and_sold, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_found_raw_resources1, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_product_quality, reg1),
		(create_text_overlay, reg1, "@ ", tf_center_justify),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_playershare_name, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_playershare_price, reg1),
		(create_button_overlay, reg1, "@ "),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_playershare_buy, reg1),
		(create_slider_overlay, reg1, 0, 100),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_playershare_slider, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_clerks_percentage, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_deterioration, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_conditions, reg1),
		(create_text_overlay, reg1, "@ ", tf_left_align),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_devmode_title, reg1),
		(create_image_button_overlay, reg1, "mesh_factory_devmode1", "mesh_factory_devmode1"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_devmode1, reg1),
		(create_image_button_overlay, reg1, "mesh_factory_devmode2", "mesh_factory_devmode2"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_devmode2, reg1),
		(create_image_button_overlay, reg1, "mesh_factory_devmode3", "mesh_factory_devmode3"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_devmode3, reg1),
		(create_image_button_overlay, reg1, "mesh_factory_devmode4", "mesh_factory_devmode4"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_devmode4, reg1),
		(create_image_button_overlay, reg1, "mesh_factory_devmode_selected", "mesh_factory_devmode_selected"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_devmode_selected, reg1),
		(create_button_overlay, reg1, "@ "),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_sell, reg1),
		(create_text_overlay, reg1, "@ ", tf_center_justify),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_worker_wage_title, reg1),
		(create_slider_overlay, reg1, 10, 100),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_worker_wage_slider, reg1),
		(create_mesh_overlay, reg1, "mesh_factory_building"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_build_icon, reg1),
		(create_mesh_overlay, reg1, "mesh_pes_factory_strike"),
		(troop_set_slot, ":array", pes_region_menu_overlay_factory_strike, reg1),
		(try_end),
	
	(call_script, "script_pes_region_menu_display_region"),
	
	]),
	(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
		(try_begin),
		(eq, ":object", "$overlay_button_back"),
		(presentation_set_duration, 0),
		(else_try),
		(eq, ":object", "$overlay_combo_label_selected_center"),
		(troop_get_slot, "$pes_region_selected_center", "trp_temp_array_a", ":value"),
		(call_script, "script_pes_region_menu_display_region"),
		(else_try),
		(eq, ":object", "$overlay_button_pes_view_resources_info"),
		(assign, "$pes_resource_menu_return_to_region", 1),
		(start_presentation, "prsnt_pes_resource"),
		(else_try),		
		(assign, ":target_factory", -1),
		(assign, ":target_array", -1),
			(try_for_range, ":factory", 0, 6),
			(store_add, ":array", "trp_array_1", ":factory"),
			(troop_get_slot, ":slider", ":array", pes_region_menu_overlay_factory_playershare_slider),
			(eq, ":object", ":slider"),
			(assign, ":target_factory", ":factory"),
			(assign, ":target_array", ":array"),
			(try_end),
		(neq, ":target_factory", -1),
		(store_add, ":slot_factory_price", slot_center_factory1_price, ":target_factory"),
		(store_add, ":slot_playershare", slot_center_factory1_playershare, ":target_factory"),
		(party_get_slot, ":factory_price", "$pes_region_selected_center", ":slot_factory_price"),
		(party_get_slot, ":playershare", "$pes_region_selected_center", ":slot_playershare"),
		(troop_get_slot, ":overlay_factory_playershare_price", ":target_array", pes_region_menu_overlay_factory_playershare_price),
		(troop_get_slot, ":overlay_factory_playershare_buy", ":target_array", pes_region_menu_overlay_factory_playershare_buy),
		(store_sub, ":modifier", ":playershare", ":value"),
		(val_mul, ":factory_price", ":modifier"),
		(val_div, ":factory_price", 100),
		(troop_set_slot, ":target_array", pes_region_menu_variable_factory_playershare_balance_change, ":factory_price"),
		(troop_set_slot, ":target_array", pes_region_menu_variable_factory_playershare_selected_amount, ":value"),
		(assign, reg10, ":factory_price"),
			(try_begin),
			(str_store_string, s1, "@ "),
			(ge, ":factory_price", 0),
			(str_store_string, s1, "@ +"),
			(try_end),
		(overlay_set_text, ":overlay_factory_playershare_price", "@Balance change:{s1}{reg10} $."),
			(try_begin),
			(lt, ":factory_price", 0),
			(overlay_set_text, ":overlay_factory_playershare_buy", "@BUY"),
			(else_try),
			(overlay_set_text, ":overlay_factory_playershare_buy", "@SELL"),
			(try_end),
		(else_try),
		(assign, ":target_factory", -1),
		(assign, ":target_array", -1),
			(try_for_range, ":factory", 0, 6),
			(store_add, ":array", "trp_array_1", ":factory"),
			(troop_get_slot, ":overlay", ":array", pes_region_menu_overlay_factory_playershare_buy),
			(eq, ":object", ":overlay"),
			(assign, ":target_factory", ":factory"),
			(assign, ":target_array", ":array"),
			(try_end),
		(neq, ":target_factory", -1),
		(troop_get_slot, ":overlay_factory_playershare_price", ":target_array", pes_region_menu_overlay_factory_playershare_price),
		(troop_get_slot, ":playershare_selected_amount", ":target_array", pes_region_menu_variable_factory_playershare_selected_amount),
		(troop_get_slot, ":balance_change", ":target_array", pes_region_menu_variable_factory_playershare_balance_change),
		(troop_get_slot, ":overlay_factory_playershare_name", ":target_array", pes_region_menu_overlay_factory_playershare_name),
		(store_add, ":slot_playershare", slot_center_factory1_playershare, ":target_factory"),
		(call_script, "script_cf_if_player_is_allowed_to_manage_factory_in_center", "$pes_region_selected_center", ":target_factory"),
			(try_begin),
			(store_troop_gold, ":gold", "trp_player"),
			(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
			(faction_get_slot, ":gold", "fac_player_supporters_faction", slot_faction_budget),
			(try_end),
			(try_begin),
			(ge, ":balance_change", 0),
				(try_begin),
				(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
				(val_add, ":gold", ":balance_change"),
				(faction_set_slot, "fac_player_supporters_faction", slot_faction_budget, ":gold"),
				(else_try),
				(troop_add_gold, "trp_player", ":balance_change"),
				(try_end),
			(party_set_slot, "$pes_region_selected_center", ":slot_playershare", ":playershare_selected_amount"),
			(overlay_set_text, ":overlay_factory_playershare_price", "@Balance change: +0 $."),
			(assign, reg10, ":playershare_selected_amount"),
			(overlay_set_text, ":overlay_factory_playershare_name", "@Manage share (Now is {reg10})%."),
			(troop_set_slot, ":target_array", pes_region_menu_variable_factory_playershare_balance_change, 0),
			(else_try),
			(val_mul, ":balance_change", -1),
				(try_begin),
				(ge, ":gold", ":balance_change"),
					(try_begin),
					(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
					(val_sub, ":gold", ":balance_change"),
					(faction_set_slot, "fac_player_supporters_faction", slot_faction_budget, ":gold"),
					(else_try),
					(troop_remove_gold, "trp_player", ":balance_change"),
					(try_end),
				(party_set_slot, "$pes_region_selected_center", ":slot_playershare", ":playershare_selected_amount"),
				(overlay_set_text, ":overlay_factory_playershare_price", "@Balance change: +0 $."),
				(assign, reg10, ":playershare_selected_amount"),
				(overlay_set_text, ":overlay_factory_playershare_name", "@Manage share (Now is {reg10})%."),
				(troop_set_slot, ":target_array", pes_region_menu_variable_factory_playershare_balance_change, 0),
					(try_begin),
					(ge, ":playershare_selected_amount", 100),
					(call_script, "script_pes_region_menu_display_region"),
					(try_end),
				(else_try),
				(display_message, "@Not enough money."),
				(try_end),
			(try_end),
		(else_try),
		(assign, ":target_factory", -1),
		(assign, ":target_array", -1),
			(try_for_range, ":factory", 0, 6),
			(store_add, ":array", "trp_array_1", ":factory"),
			(troop_get_slot, ":overlay1", ":array", pes_region_menu_overlay_factory_devmode1),
			(troop_get_slot, ":overlay2", ":array", pes_region_menu_overlay_factory_devmode2),
			(troop_get_slot, ":overlay3", ":array", pes_region_menu_overlay_factory_devmode3),
			(troop_get_slot, ":overlay4", ":array", pes_region_menu_overlay_factory_devmode4),
			(this_or_next|eq, ":object", ":overlay1"),
			(this_or_next|eq, ":object", ":overlay2"),
			(this_or_next|eq, ":object", ":overlay3"),
			(eq, ":object", ":overlay4"),
			(assign, ":target_factory", ":factory"),
			(assign, ":target_array", ":array"),
			(try_end),
		(neq, ":target_factory", -1),
		(troop_get_slot, ":overlay1", ":target_array", pes_region_menu_overlay_factory_devmode1),
		(troop_get_slot, ":overlay2", ":target_array", pes_region_menu_overlay_factory_devmode2),
		(troop_get_slot, ":overlay3", ":target_array", pes_region_menu_overlay_factory_devmode3),
		(troop_get_slot, ":overlay4", ":target_array", pes_region_menu_overlay_factory_devmode4),
		(store_add, ":slot_devmode", slot_center_factory1_devmode, ":target_factory"),
			(try_begin),
			(eq, ":object", ":overlay1"),
			(party_set_slot, "$pes_region_selected_center", ":slot_devmode", pes_factory_devmode_addworkplaces),
			(else_try),
			(eq, ":object", ":overlay2"),
			(party_set_slot, "$pes_region_selected_center", ":slot_devmode", pes_factory_devmode_improveconditions),
			(else_try),
			(eq, ":object", ":overlay3"),
			(party_set_slot, "$pes_region_selected_center", ":slot_devmode", pes_factory_devmode_improvetools),
			(else_try),
			(eq, ":object", ":overlay4"),
			(party_set_slot, "$pes_region_selected_center", ":slot_devmode", pes_factory_devmode_none),
			(try_end),
		(call_script, "script_pes_region_menu_display_region"),
		(else_try),
		(assign, ":target_factory", -1),
			(try_for_range, ":factory", 0, 6),
			(store_add, ":array", "trp_array_1", ":factory"),
			(troop_get_slot, ":overlay", ":array", pes_region_menu_overlay_factory_sell),
			(eq, ":object", ":overlay"),
			(assign, ":target_factory", ":factory"),
			(try_end),
		(neq, ":target_factory", -1),
		(store_add, ":slot_playershare", slot_center_factory1_playershare, ":target_factory"),
		(store_add, ":slot_price", slot_center_factory1_price, ":target_factory"),
		(party_get_slot, ":factory_price", "$pes_region_selected_center", ":slot_price"),
		(party_set_slot, "$pes_region_selected_center", ":slot_playershare", 0),
				(try_begin),
				(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
				(faction_get_slot, ":gold", "fac_player_supporters_faction", slot_faction_state),
				(val_add, ":gold", ":factory_price"),
				(faction_set_slot, "fac_player_supporters_faction", slot_faction_budget, ":gold"),
				(else_try),
				(troop_add_gold, "trp_player", ":factory_price"),
				(try_end),
		(call_script, "script_pes_region_menu_display_region"),
		(else_try),
		(assign, ":target_factory", -1),
			(try_for_range, ":factory", 0, 6),
			(store_add, ":array", "trp_array_1", ":factory"),
			(troop_get_slot, ":overlay", ":array", pes_region_menu_overlay_factory_worker_wage_slider),
			(eq, ":object", ":overlay"),
			(assign, ":target_factory", ":factory"),
			(try_end),
		(neq, ":target_factory", -1),
		(store_add, ":slot_workers_wage", slot_center_factory1_workers_wage, ":target_factory"),
		(party_set_slot, "$pes_region_selected_center", ":slot_workers_wage", ":value"),
		(else_try),
		(assign, ":target_factory", -1),
			(try_for_range, ":factory", 0, 6),
			(store_add, ":array", "trp_array_1", ":factory"),
			(troop_get_slot, ":overlay", ":array", pes_region_menu_overlay_factory_photo),
			(eq, ":object", ":overlay"),
			(assign, ":target_factory", ":factory"),
			(assign, ":target_array", ":array"),
			(try_end),
		(neq, ":target_factory", -1),
		(store_add, ":slot_type", slot_center_factory1_type, ":target_factory"),
		(store_add, ":slot_building_type", slot_center_factory1_building_type, ":target_factory"),
		(neg|party_slot_ge, "$pes_region_selected_center", ":slot_type", 1),
		(neg|party_slot_ge, "$pes_region_selected_center", ":slot_building_type", 1),
		(assign, ":continue", 1),
			(try_begin),
			(is_between, "$pes_region_selected_center", castles_begin, castles_end),
			(ge, ":target_factory", 3),
			(assign, ":continue", 0),
			(try_end),
		(eq, ":continue", 1),
		(start_presentation, "prsnt_pes_region_build_factory"),
		(try_end),
	
	]),
	(ti_on_presentation_run,
	[
	(try_for_range, ":factory", 0, 6),
	(store_add, ":array", "trp_array_1", ":factory"),
	(troop_get_slot, ":overlay", ":array", pes_region_menu_overlay_factory_build_icon),
	(troop_get_slot, ":rotation", ":array", pes_region_menu_variable_factory_build_icon_rotation),
	(init_position, pos1),
	(position_rotate_z_floating, pos1, ":rotation", 1),
	(position_rotate_z_floating, pos1, -300, 1),
	(overlay_set_mesh_rotation, ":overlay", pos1),
	(val_add, ":rotation", -300),
	(troop_set_slot, ":array", pes_region_menu_variable_factory_build_icon_rotation, ":rotation"),
	(try_end),

(this_or_next|key_clicked, key_escape),
(key_clicked, key_back_space),
(presentation_set_duration, 0),
(jump_to_menu, "mnu_town"),
	]),
]),

("pes_resource", 0, mesh_load_window2, [
	(ti_on_presentation_load,
	[
	(presentation_set_duration, 999999),
	(set_fixed_point_multiplier, 1000),
	
	(create_combo_label_overlay, "$overlay_combo_selected_resource"),
	(position_set_x, pos1, 800), (position_set_y, pos1, 1200), (overlay_set_size, "$overlay_combo_selected_resource", pos1),
	(position_set_x, pos1, 220), (position_set_y, pos1, 600), (overlay_set_position, "$overlay_combo_selected_resource", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_price_history", "@Price history chart:", tf_center_justify),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_pes_resource_price_history", pos1),
	(position_set_x, pos1, 160), (position_set_y, pos1, 535), (overlay_set_position, "$overlay_text_pes_resource_price_history", pos1),
		(try_for_range, ":resource_type", resource_iron, resource_steel+1),
		(call_script, "script_get_resource_name_for_type_capitalized", ":resource_type", s1),
		(overlay_add_item, "$overlay_combo_selected_resource", "@{s1}"),
		(try_end),
	(create_game_button_overlay, "$overlay_button_pes_resource_back", "@Back", tf_center_justify),
	(position_set_x, pos1, 200), (position_set_y, pos1, 100), (overlay_set_position, "$overlay_button_pes_resource_back", pos1),
		(try_for_range, ":slot", slot_item_price_history_begin, slot_item_price_history_end-1),
		(create_mesh_overlay, reg1, "mesh_pes_resource_price_line"),
		(troop_set_slot, "trp_array_price_history", ":slot", reg1),
		(try_end),
	(create_text_overlay, "$overlay_text_pes_resource_price", "@ ", tf_center_justify),
	(create_text_overlay, "$overlay_text_pes_resource_supply", "@ ", tf_left_align),
	(create_text_overlay, "$overlay_text_pes_resource_demand", "@ ", tf_left_align),
	(create_mesh_overlay, reg1, "mesh_pes_resource_price"),
	(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, 160), (position_set_y, pos1, 435), (overlay_set_position, reg1, pos1),
	(create_mesh_overlay, reg1, "mesh_pes_resource_list"),
	(position_set_x, pos1, 1040), (position_set_y, pos1, 1450), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, 660), (position_set_y, pos1, 410), (overlay_set_position, reg1, pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_faction", "@Country", tf_left_align),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_pes_resource_factionlist_faction", pos1),
	(position_set_x, pos1, 370), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_faction", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_supply", "@Supply", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_supply", pos1),
	(position_set_x, pos1, 540), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_supply", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_demand", "@Demand", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_demand", pos1),
	(position_set_x, pos1, 600), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_demand", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_producersamount", "@Number of^Factories", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_producersamount", pos1),
	(position_set_x, pos1, 650), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_producersamount", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_quality", "@Quality", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_quality", pos1),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_quality", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_gdp", "@GDP", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_gdp", pos1),
	(position_set_x, pos1, 760), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_gdp", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_population", "@Population", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_population", pos1),
	(position_set_x, pos1, 820), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_population", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_literacy", "@Literacy", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_literacy", pos1),
	(position_set_x, pos1, 880), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_literacy", pos1),
	(create_text_overlay, "$overlay_text_pes_resource_factionlist_urbanization", "@Urbanization", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_text_pes_resource_factionlist_urbanization", pos1),
	(position_set_x, pos1, 940), (position_set_y, pos1, 700), (overlay_set_position, "$overlay_text_pes_resource_factionlist_urbanization", pos1),
	
	(try_for_range, ":faction", "fac_player_supporters_faction", "fac_robber_knights"),
	(store_sub, ":array_add", ":faction", "fac_player_supporters_faction"),
	(store_add, ":array", "trp_array_1", ":array_add"),
	(create_mesh_overlay, reg1, "mesh_menu_flag2"),
	(troop_set_slot, ":array", pes_resource_menu_faction_flag1, reg1),
	(create_text_overlay, reg1, "@ ", tf_left_align),
	(troop_set_slot, ":array", pes_resource_menu_faction_name1, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_supply, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_demand, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_quality, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_gdp, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_produceramount, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_population, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_literacy, reg1),
	(create_text_overlay, reg1, "@ ", tf_center_justify),
	(troop_set_slot, ":array", pes_resource_menu_faction_urbanization, reg1),
	(try_end),
	
	(assign, "$pes_resource_menu_selected_resource", resource_iron),
	(call_script, "script_pes_resource_menu_display_resource"),
	]),
	(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
		(try_begin),
		(eq, ":object", "$overlay_button_pes_resource_back"),
		(presentation_set_duration, 0),
		(jump_to_menu, "mnu_reports"),
		(else_try),
		(eq, ":object", "$overlay_combo_selected_resource"),
		(store_add, "$pes_resource_menu_selected_resource", ":value", 1),
		(call_script, "script_pes_resource_menu_display_resource"),
		(try_end),
	
	]),
	(ti_on_presentation_run,
	[
	]),
]),


("pes_region_build_factory", 0, mesh_load_window2, [
	(ti_on_presentation_load,
	[
	(presentation_set_duration, 999999),
	(set_fixed_point_multiplier, 1000),
	
	(assign, "$pes_region_build_factory_selected_type", 0),
	(assign, "$pes_region_build_factory_selected_capital", 50000),
	(create_text_overlay, "$overlay_pes_region_build_factory_title", "@Select factory to build:", tf_center_justify),
	(position_set_x, pos1, 1200), (position_set_y, pos1, 1200), (overlay_set_size, "$overlay_pes_region_build_factory_title", pos1),
	(position_set_x, pos1, 500), (position_set_y, pos1, 690), (overlay_set_position, "$overlay_pes_region_build_factory_title", pos1),
	(store_troop_gold, reg10, "trp_player"),
	(create_text_overlay, "$overlay_pes_region_build_factory_balance", "@Your current balance is {reg10} $.", tf_center_justify),
	(position_set_x, pos1, 650), (position_set_y, pos1, 650), (overlay_set_size, "$overlay_pes_region_build_factory_balance", pos1),
	(position_set_x, pos1, 800), (position_set_y, pos1, 670), (overlay_set_position, "$overlay_pes_region_build_factory_balance", pos1),
	(create_mesh_overlay, "$overlay_selected", "mesh_factory_devmode_selected"),
	(position_set_x, pos1, 2000), (position_set_y, pos1, 2000), (overlay_set_size, "$overlay_selected", pos1),
	(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_selected", pos1),
	(create_slider_overlay, "$overlay_capital_slider", 50000, 100000),
	(position_set_x, pos1, 1300), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_capital_slider", pos1),
	(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_capital_slider", pos1),
	(create_text_overlay, "$overlay_capital_title", "@Initial Capital: 50000 $.", tf_center_justify),
	(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_capital_title", pos1),
	(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_capital_title", pos1),
	(create_text_overlay, "$overlay_capital_note", "@*Rest of initial budget will be found via investitions.^Speed of funding depends on region and country.", tf_center_justify),
	(position_set_x, pos1, 600), (position_set_y, pos1, 600), (overlay_set_size, "$overlay_capital_note", pos1),
	(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_capital_note", pos1),
	(create_game_button_overlay, "$overlay_build_factory", "@Start Enterprise", tf_center_justify),
	(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_build_factory", pos1),

	(create_game_button_overlay, "$overlay_button_back", "@Back", tf_center_justify),
	(position_set_x, pos1, 800), (position_set_y, pos1, 50), (overlay_set_position, "$overlay_button_back", pos1),

(assign, ":x", 105), (assign, ":y", 550),
	(try_for_range, ":resource_type", resource_ammunition, resource_steel+1),
	(store_add, ":y_photo", ":y", 15),
	(store_add, ":y_name", ":y", 65),
	(store_add, ":y_desc", ":y", -70),
	(store_add, ":x_desc", ":x", -5),
	(create_image_button_overlay, reg1, "mesh_pes_region_factorycard", "mesh_pes_region_factorycard"),
	(overlay_set_material, reg1, "@pes_region_factorycard2"),
	(position_set_x, pos1, 750), (position_set_y, pos1, 650), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, ":x"), (position_set_y, pos1, ":y"), (overlay_set_position, reg1, pos1),
	(troop_set_slot, "trp_array_1", reg1, ":resource_type"),
	(call_script, "script_get_factory_name_and_photo_for_type", ":resource_type", s2, s3),
	(create_mesh_overlay, reg1, "mesh_pes_region_factory_photo"),
	(position_set_x, pos1, 700), (position_set_y, pos1, 700), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, ":x"), (position_set_y, pos1, ":y_photo"), (overlay_set_position, reg1, pos1),
	(overlay_set_material, reg1, "@{s3}"),
	(create_text_overlay, reg1, "@{s2}", tf_center_justify),
	(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, ":x"), (position_set_y, pos1, ":y_name"), (overlay_set_position, reg1, pos1),
	(call_script, "script_get_factory_description_for_type", ":resource_type", s1),
	(create_text_overlay, reg1, "@{s1}", tf_center_justify),
	(position_set_x, pos1, 650), (position_set_y, pos1, 650), (overlay_set_size, reg1, pos1),
	(position_set_x, pos1, ":x_desc"), (position_set_y, pos1, ":y_desc"), (overlay_set_position, reg1, pos1),
	(val_add, ":x", 160),
		(try_begin),
		(eq, ":resource_type", resource_furniture),
		(val_add, ":y", -260),
		(assign, ":x", 185),
		(try_end),
	(try_end),
	
	
	
	]),
	(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
	(store_faction_of_party, ":center_faction", "$pes_region_selected_center"),
		(try_begin),
		(eq, ":object", "$overlay_button_back"),
		(start_presentation, "prsnt_pes_region"),
		(else_try),
		(eq, ":object", "$overlay_build_factory"),
			(try_begin),
			(store_troop_gold, ":gold", "trp_player"),
			(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
			(faction_get_slot, ":gold", "fac_player_supporters_faction", slot_faction_budget),
			(try_end),
			(try_begin),
				(try_begin),
				(faction_slot_eq, ":center_faction", slot_faction_government_type, government_type_soviet_republic),
				(neq, ":center_faction", "fac_player_supporters_faction"),
				(display_message, "@Government type of this country does not allow you to build factories."),
				(try_end),
			(this_or_next|eq, ":center_faction", "fac_player_supporters_faction"),
			(neg|faction_slot_eq, ":center_faction", slot_faction_government_type, government_type_soviet_republic),
				(try_begin),
				(this_or_next|neq, ":center_faction", "fac_player_supporters_faction"),
				(this_or_next|is_between, "$pes_region_build_factory_selected_type", resource_ammunition, resource_military_supplies+1),
				(this_or_next|faction_slot_eq, "fac_player_supporters_faction", slot_faction_government_type, government_type_absolute_monarchy),
				(this_or_next|faction_slot_eq, "fac_player_supporters_faction", slot_faction_government_type, government_type_soviet_republic),
				(neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
					(try_begin),
					(ge, ":gold", "$pes_region_build_factory_selected_capital"),
					(assign, ":same_type_already_exists", 0),
					(assign, ":slot_type", slot_center_factory1_type-1),
					(assign, ":slot_building_type", slot_center_factory1_building_type-1),
					(assign, ":finish", 0),
						(try_for_range, ":unused", 0, 6),
						(eq, ":finish", 0),
						(val_add, ":slot_type", 1),
						(val_add, ":slot_building_type", 1),
						(this_or_next|party_slot_eq, "$pes_region_selected_center", ":slot_building_type", "$pes_region_build_factory_selected_type"),
						(party_slot_eq, "$pes_region_selected_center", ":slot_type", "$pes_region_build_factory_selected_type"),
						(assign, ":same_type_already_exists", 1),
						(assign, ":finish", 1),
						(try_end),
						(try_begin),
						(eq, ":same_type_already_exists", 0),
						(assign, ":slot_type", slot_center_factory1_type-1),
						(assign, ":slot_building_type", slot_center_factory1_building_type-1),
						(assign, ":finish", 0),
							(try_for_range, ":factory", 0, 6),
							(eq, ":finish", 0),
							(val_add, ":slot_type", 1),
							(val_add, ":slot_building_type", 1),
							(neg|party_slot_ge, "$pes_region_selected_center", ":slot_type", 1),
							(neg|party_slot_ge, "$pes_region_selected_center", ":slot_building_type", 1),
								(try_begin),
								(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
								(val_sub, ":gold", "$pes_region_build_factory_selected_capital"),
								(faction_set_slot, "fac_player_supporters_faction", slot_faction_budget, ":gold"),
								(else_try),
								(troop_remove_gold, "trp_player", "$pes_region_build_factory_selected_capital"),
								(try_end),
							(store_add, ":slot_factory_building_type", slot_center_factory1_building_type, ":factory"),
							(store_add, ":slot_factory_building_progress", slot_center_factory1_building_progress, ":factory"),
							(store_add, ":slot_factory_playershare", slot_center_factory1_playershare, ":factory"),
							(party_set_slot, "$pes_region_selected_center", ":slot_factory_building_type", "$pes_region_build_factory_selected_type"),
							(store_sub, ":initial_progress", "$pes_region_build_factory_selected_capital", 50000),
							(val_div, ":initial_progress", 666),
							(val_mul, ":initial_progress", 100),
							(party_set_slot, "$pes_region_selected_center", ":slot_factory_building_progress", ":initial_progress"),
							(party_set_slot, "$pes_region_selected_center", ":slot_factory_playershare", 100),
							(position_set_x, pos1, -500), (position_set_y, pos1, -500), (overlay_set_position, "$overlay_capital_slider", pos1),
							(start_presentation, "prsnt_pes_region"),
							(assign, ":finish", 1),
							(try_end),
						(else_try),
						(display_message, "@Same type of factory does already exist in this town."),
						(try_end),
					(else_try),
					(display_message, "@Not enough money."),
					(try_end),
				(try_end),
			(try_end),
		(else_try),
		(eq, ":object", "$overlay_capital_slider"),
		(assign, "$pes_region_build_factory_selected_capital", ":value"),
		(assign, reg10, ":value"),
		(overlay_set_text, "$overlay_capital_title", "@Initial Capital: {reg10} $."),
		(else_try),
		(troop_get_slot, "$pes_region_build_factory_selected_type", "trp_array_1", ":object"),
		(overlay_get_position, pos1, ":object"), (position_get_x, ":x", pos1), (position_get_y, ":y", pos1),
		(val_add, ":x", 60),
		(val_add, ":y", -100),
		(position_set_x, pos1, ":x"), (position_set_y, pos1, ":y"), (overlay_set_position, "$overlay_selected", pos1),
		(position_set_x, pos1, 250), (position_set_y, pos1, 70), (overlay_set_position, "$overlay_capital_slider", pos1),
		(position_set_x, pos1, 250), (position_set_y, pos1, 110), (overlay_set_position, "$overlay_capital_title", pos1),
		(position_set_x, pos1, 250), (position_set_y, pos1, 40), (overlay_set_position, "$overlay_capital_note", pos1),
		(position_set_x, pos1, 650), (position_set_y, pos1, 50), (overlay_set_position, "$overlay_build_factory", pos1),
		(try_end),
	]),
	(ti_on_presentation_run,
	[
	(this_or_next|key_clicked, key_escape),
	(key_clicked, key_back_space),
	(presentation_set_duration, 0),
	(start_presentation, "prsnt_pes_region"),
	]),
]),


("pas_menu", 0, mesh_load_window2, [
	(ti_on_presentation_load,
	[
	(presentation_set_duration, 999999),
	(set_fixed_point_multiplier, 1000),

(create_game_button_overlay, "$overlay_button_back", "@Back", tf_center_justify),
(position_set_x, pos1, 800), (position_set_y, pos1, 50), (overlay_set_position, "$overlay_button_back", pos1),
(str_store_faction_name, s1, "$players_kingdom"),
(create_text_overlay, "$overlay_text_faction_name", "@Army of {s1}", tf_center_justify),
(position_set_x, pos1, 1300), (position_set_y, pos1, 1300), (overlay_set_size, "$overlay_text_faction_name", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 690), (overlay_set_position, "$overlay_text_faction_name", pos1),
(create_mesh_overlay, "$overlay_mesh_faction_flag", "mesh_menu_flag1"),
(position_set_x, pos1, 400), (position_set_y, pos1, 400), (overlay_set_size, "$overlay_mesh_faction_flag", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 660), (overlay_set_position, "$overlay_mesh_faction_flag", pos1),
(faction_get_slot, ":material_string", "$players_kingdom", slot_faction_flag_material),
(str_store_string, s1, ":material_string"),
(overlay_set_material, "$overlay_mesh_faction_flag", s1),

(faction_get_slot, reg1, "$players_kingdom", slot_faction_army_size),
(store_sub, reg2, reg1, 40),
(store_sub, reg3, 40, reg1),
(val_div, reg3, 2),
(create_text_overlay, "$overlay_text_army_size", "@Army size: {reg1}%", tf_right_align),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_text_army_size", pos1),
(position_set_x, pos1, 330), (position_set_y, pos1, 610), (overlay_set_position, "$overlay_text_army_size", pos1),
(create_text_overlay, "$overlay_text_army_size_satisfaction_penalty", "@-{reg2}% to quality of life", tf_left_align),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_army_size_satisfaction_penalty", pos1),
(position_set_x, pos1, 700), (position_set_y, pos1, 620), (overlay_set_position, "$overlay_text_army_size_satisfaction_penalty", pos1),
(create_text_overlay, "$overlay_text_army_size_workers_penalty", "@-{reg3}% workers", tf_left_align),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_army_size_workers_penalty", pos1),
(position_set_x, pos1, 700), (position_set_y, pos1, 600), (overlay_set_position, "$overlay_text_army_size_workers_penalty", pos1),
(create_slider_overlay, "$overlay_slider_army_size", 40, 100),
(position_set_x, pos1, 1200), (position_set_y, pos1, 1200), (overlay_set_size, "$overlay_slider_army_size", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 600), (overlay_set_position, "$overlay_slider_army_size", pos1),
(overlay_set_val, "$overlay_slider_army_size", reg1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_number_of_lords),
(create_text_overlay, "$overlay_text_number_of_lords1", "@{reg1}", tf_center_justify),
(position_set_x, pos1, 1600), (position_set_y, pos1, 1600), (overlay_set_size, "$overlay_text_number_of_lords1", pos1),
(position_set_x, pos1, 250), (position_set_y, pos1, 550), (overlay_set_position, "$overlay_text_number_of_lords1", pos1),
(create_text_overlay, "$overlay_text_number_of_lords2", "@Divisions", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_number_of_lords2", pos1),
(position_set_x, pos1, 250), (position_set_y, pos1, 520), (overlay_set_position, "$overlay_text_number_of_lords2", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_number_of_soldiers_lords),
(create_text_overlay, "$overlay_text_number_of_soldiers_lords", "@{reg1} soldiers", tf_center_justify),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_text_number_of_soldiers_lords", pos1),
(position_set_x, pos1, 250), (position_set_y, pos1, 500), (overlay_set_position, "$overlay_text_number_of_soldiers_lords", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_number_of_garrisons),
(create_text_overlay, "$overlay_text_number_of_garrisons1", "@{reg1}", tf_center_justify),
(position_set_x, pos1, 1600), (position_set_y, pos1, 1600), (overlay_set_size, "$overlay_text_number_of_garrisons1", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 550), (overlay_set_position, "$overlay_text_number_of_garrisons1", pos1),
(create_text_overlay, "$overlay_text_number_of_garrisons2", "@Garrisons", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_number_of_garrisons2", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 520), (overlay_set_position, "$overlay_text_number_of_garrisons2", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_number_of_soldiers_garrisons),
(create_text_overlay, "$overlay_text_number_of_soldiers_garrisons", "@{reg1} soldiers", tf_center_justify),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_text_number_of_soldiers_garrisons", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 500), (overlay_set_position, "$overlay_text_number_of_soldiers_garrisons", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_number_of_soldiers),
(create_text_overlay, "$overlay_text_number_of_soldiers1", "@{reg1}", tf_center_justify),
(position_set_x, pos1, 1600), (position_set_y, pos1, 1600), (overlay_set_size, "$overlay_text_number_of_soldiers1", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 550), (overlay_set_position, "$overlay_text_number_of_soldiers1", pos1),
(create_text_overlay, "$overlay_text_number_of_soldiers2", "@soldiers total", tf_center_justify),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_text_number_of_soldiers2", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 520), (overlay_set_position, "$overlay_text_number_of_soldiers2", pos1),


(create_text_overlay, "$overlay_text_supplied_by_military_supplies", "@Equipped with military supplies by", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_supplied_by_military_supplies", pos1),
(position_set_x, pos1, 250), (position_set_y, pos1, 450), (overlay_set_position, "$overlay_text_supplied_by_military_supplies", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_supplied_by_military_supplies),
(create_text_overlay, "$overlay_text_supplied_by_military_supplies_value", "@{reg1}%", tf_center_justify),
(position_set_x, pos1, 1600), (position_set_y, pos1, 1600), (overlay_set_size, "$overlay_text_supplied_by_military_supplies_value", pos1),
(position_set_x, pos1, 250), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_supplied_by_military_supplies_value", pos1),
(create_text_overlay, "$overlay_text_supplied_by_ammo", "@Supplied with ammunition by", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_supplied_by_ammo", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 450), (overlay_set_position, "$overlay_text_supplied_by_ammo", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_supplied_by_ammunition),
(create_text_overlay, "$overlay_text_supplied_by_ammo_value", "@{reg1}%", tf_center_justify),
(position_set_x, pos1, 1600), (position_set_y, pos1, 1600), (overlay_set_size, "$overlay_text_supplied_by_ammo_value", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_supplied_by_ammo_value", pos1),
(create_text_overlay, "$overlay_text_supplied_by_weaponry", "@Equipped with weapons by", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_supplied_by_weaponry", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 450), (overlay_set_position, "$overlay_text_supplied_by_weaponry", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_supplied_by_weaponry),
(create_text_overlay, "$overlay_text_supplied_by_weaponry_value", "@{reg1}%", tf_center_justify),
(position_set_x, pos1, 1600), (position_set_y, pos1, 1600), (overlay_set_size, "$overlay_text_supplied_by_weaponry_value", pos1),
(position_set_x, pos1, 750), (position_set_y, pos1, 420), (overlay_set_position, "$overlay_text_supplied_by_weaponry_value", pos1),
(create_text_overlay, "$overlay_text_battle_efficiency", "@Combat efficiency of army is", tf_center_justify),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_text_battle_efficiency", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 350), (overlay_set_position, "$overlay_text_battle_efficiency", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_battle_efficiency_from_supplies),
(create_text_overlay, "$overlay_text_battle_efficiency_value", "@{reg1}%", tf_center_justify),
(position_set_x, pos1, 1700), (position_set_y, pos1, 1700), (overlay_set_size, "$overlay_text_battle_efficiency_value", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 310), (overlay_set_position, "$overlay_text_battle_efficiency_value", pos1),

(faction_get_slot, reg1, "$players_kingdom", slot_faction_conscription_policy),
(call_script, "script_pas_get_conscription_policy_name", reg1, s1),
(create_text_overlay, "$overlay_text_conscription_policy", "@Conscription policy: {s1}", tf_right_align),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_conscription_policy", pos1),
(position_set_x, pos1, 330), (position_set_y, pos1, 250), (overlay_set_position, "$overlay_text_conscription_policy", pos1),
(create_slider_overlay, "$overlay_slider_conscription_policy", 1, 4),
(position_set_x, pos1, 1200), (position_set_y, pos1, 1200), (overlay_set_size, "$overlay_slider_conscription_policy", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 240), (overlay_set_position, "$overlay_slider_conscription_policy", pos1),
(overlay_set_val, "$overlay_slider_conscription_policy", reg1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_conscription_policy),
(val_sub, reg1, 1), (store_mul, reg2, reg1, 20), (store_mul, reg3, reg1, 10),
(create_text_overlay, "$overlay_text_conscription_policy_satisfaction_penalty", "@-{reg2}% to quality of life", tf_left_align),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_conscription_policy_satisfaction_penalty", pos1),
(position_set_x, pos1, 700), (position_set_y, pos1, 260), (overlay_set_position, "$overlay_text_conscription_policy_satisfaction_penalty", pos1),
(create_text_overlay, "$overlay_text_conscription_policy_workers_penalty", "@-{reg3}% workers", tf_left_align),
(position_set_x, pos1, 800), (position_set_y, pos1, 800), (overlay_set_size, "$overlay_text_conscription_policy_workers_penalty", pos1),
(position_set_x, pos1, 700), (position_set_y, pos1, 240), (overlay_set_position, "$overlay_text_conscription_policy_workers_penalty", pos1),

(create_text_overlay, "$overlay_text_manpower", "@Reserves:", tf_center_justify),
(position_set_x, pos1, 900), (position_set_y, pos1, 900), (overlay_set_size, "$overlay_text_manpower", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 200), (overlay_set_position, "$overlay_text_manpower", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_manpower), (val_max, reg1, 0), (faction_get_slot, reg2, "$players_kingdom", slot_faction_manpower_max),
(call_script, "script_pas_faction_get_manpower_growth_rate", "$players_kingdom"),
(create_text_overlay, "$overlay_text_manpower_value", "@{reg1}/{reg2} men (+{reg3} per day)", tf_center_justify),
(position_set_x, pos1, 1500), (position_set_y, pos1, 1500), (overlay_set_size, "$overlay_text_manpower_value", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 170), (overlay_set_position, "$overlay_text_manpower_value", pos1),

(create_text_overlay, "$overlay_text_reinforcements_rate", "@Army reinforcements rate:", tf_center_justify),
(position_set_x, pos1, 1000), (position_set_y, pos1, 1000), (overlay_set_size, "$overlay_text_reinforcements_rate", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 130), (overlay_set_position, "$overlay_text_reinforcements_rate", pos1),
(faction_get_slot, reg1, "$players_kingdom", slot_faction_reinforcements_rate),
(create_text_overlay, "$overlay_text_reinforcements_rate_value", "@{reg1}%", tf_center_justify),
(position_set_x, pos1, 1700), (position_set_y, pos1, 1700), (overlay_set_size, "$overlay_text_reinforcements_rate_value", pos1),
(position_set_x, pos1, 500), (position_set_y, pos1, 90), (overlay_set_position, "$overlay_text_reinforcements_rate_value", pos1),
	]),

	(ti_on_presentation_event_state_change,
	[
	(store_trigger_param_1, ":object"),
	(store_trigger_param_2, ":value"),
		(try_begin),
		(eq, ":object", "$overlay_button_back"),
		(presentation_set_duration, 0),
		(else_try),
		(eq, ":object", "$overlay_slider_conscription_policy"),
		(faction_get_slot, reg1, "$players_kingdom", slot_faction_conscription_policy),
		(neq, reg1, ":value"),
		(call_script, "script_pas_get_conscription_policy_name", ":value", s1),
		(call_script, "script_pas_faction_set_conscription_policy", "$players_kingdom", ":value"),
		(call_script, "script_pas_faction_get_manpower_growth_rate", "$players_kingdom"),
		(faction_get_slot, reg1, "$players_kingdom", slot_faction_manpower), (val_max, reg1, 0), 
		(faction_get_slot, reg2, "$players_kingdom", slot_faction_manpower_max), (overlay_set_text,  "$overlay_text_manpower_value", "@{reg1}/{reg2} men (+{reg3} per day)"),
		(faction_get_slot, reg1, "$players_kingdom", slot_faction_reinforcements_rate), (overlay_set_text, "$overlay_text_reinforcements_rate_value", "@{reg1}%"),
		(faction_get_slot, reg1, "$players_kingdom", slot_faction_conscription_policy),
		(val_sub, reg1, 1), (store_mul, reg2, reg1, 20), (store_mul, reg3, reg1, 10),
		(overlay_set_text, "$overlay_text_conscription_policy_satisfaction_penalty", "@-{reg2}% to quality of life"),
		(overlay_set_text, "$overlay_text_conscription_policy_workers_penalty", "@-{reg3}% workers"),
		(overlay_set_text, "$overlay_text_conscription_policy", "@Conscription policy: {s1}"),
		(else_try),
		(eq, ":object", "$overlay_slider_army_size"),
			(try_begin),
			(assign, ":continue", 1),
			(faction_slot_eq, "$players_kingdom", slot_faction_conscription_policy, conscription_policy_volunteer_army),
			(gt, ":value", 60),
			(assign, ":continue", 0),
			(overlay_set_val, "$overlay_slider_army_size", 60),
			(try_end),
		(eq, ":continue", 1),
		(faction_set_slot, "$players_kingdom", slot_faction_army_size, ":value"),
		(assign, reg1, ":value"),
		(overlay_set_text, "$overlay_text_army_size", "@Army size: {reg1}%"),
		(store_sub, reg2, reg1, 40),
		(store_sub, reg3, 40, reg1),
		(val_div, reg3, 2),
		(overlay_set_text, "$overlay_text_army_size_satisfaction_penalty", "@-{reg2}% to quality of life"),
		(overlay_set_text, "$overlay_text_army_size_workers_penalty", "@-{reg3}% workers"),
		(try_end),
	
	]),
	(ti_on_presentation_run,
	[
	(this_or_next|key_clicked, key_escape),
	(key_clicked, key_back_space),
	(presentation_set_duration, 0),
	]),
]),
  ]
  
  
    # modmerger_start version=201 type=2
try:
    component_name = "presentations"
    var_set = { "presentations" : presentations }
    from modmerger import modmerge
    modmerge(var_set)
except:
    raise
# modmerger_end
